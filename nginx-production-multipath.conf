# Sagawa Group Production Nginx Configuration
# Multi-path routing: domain utama + /admin + /api

# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name sagawagroup.id www.sagawagroup.id;
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server - Main domain with multi-path routing
server {
    listen 443 ssl http2;
    server_name sagawagroup.id www.sagawagroup.id;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/sagawagroup.id/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sagawagroup.id/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Document root for the frontend static files
    root /var/www/sagawagroup/frontend;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/sagawagroup_access.log;
    error_log /var/log/nginx/sagawagroup_error.log warn;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Upload limits
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/manifest+json
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # API routing - /api/* requests
    location /api/ {
        # Rate limiting untuk API
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://localhost:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin" always;
        add_header Access-Control-Max-Age 86400 always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://localhost:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Admin panel routing - /admin/* requests
    location /admin/ {
        # Enhanced rate limiting untuk admin
        limit_req zone=admin burst=10 nodelay;
        
        # Extra security headers for admin
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self'; frame-ancestors 'none';" always;
        
        # Try to serve admin files, fallback to login
        try_files $uri $uri/ /admin/login.html;
        
        # Cache control for admin pages
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }
    
    # Admin login specific
    location = /admin/login {
        try_files /admin/login.html =404;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
    
    # Static files handling for main site
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, no-cache";
    }
    
    # CSS and JS files
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Images
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Font files
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=admin:10m rate=3r/m;