---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Admin Register">

<style>
    .animated-bg {
      background: linear-gradient(-45deg, #ffedd5, #fed7aa, #fdba74, #fb923c, #f97316, #ea580c, #dc2626, #b91c1c);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
    }
    
    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
    
    .floating-shape {
      position: absolute;
      border-radius: 50%;
      opacity: 0.7;
      filter: blur(20px);
      z-index: 0;
    }
    
    .shape-1 {
      width: 120px;
      height: 120px;
      background: linear-gradient(45deg, #f97316, #ea580c);
      top: 10%;
      left: 5%;
      animation: float 12s ease-in-out infinite;
    }
    
    .shape-2 {
      width: 100px;
      height: 100px;
      background: linear-gradient(45deg, #fb923c, #f97316);
      bottom: 15%;
      right: 10%;
      animation: float 10s ease-in-out infinite;
    }
    
    .shape-3 {
      width: 80px;
      height: 80px;
      background: linear-gradient(45deg, #ffedd5, #fed7aa);
      top: 40%;
      right: 20%;
      animation: float 8s ease-in-out infinite;
    }
    
    @media (min-width: 640px) {
      .shape-1 {
        width: 200px;
        height: 200px;
      }
      
      .shape-2 {
        width: 150px;
        height: 150px;
      }
      
      .shape-3 {
        width: 100px;
        height: 100px;
      }
    }
    
    @keyframes float {
      0% {
        transform: translate(0, 0) rotate(0deg);
      }
      50% {
        transform: translate(20px, 20px) rotate(180deg);
      }
      100% {
        transform: translate(0, 0) rotate(360deg);
      }
    }
  </style>

  <main class="min-h-screen flex items-center justify-center animated-bg relative overflow-hidden p-4 sm:p-6">
    <!-- Back to Home Button -->
    <div class="absolute top-4 left-4 sm:top-6 sm:left-6 z-20">
      <a href="/" class="inline-flex items-center px-3 py-2 sm:px-4 sm:py-2 bg-white/80 backdrop-blur-sm text-amber-700 rounded-xl shadow-lg hover:bg-white/90 hover:shadow-xl transition-all duration-200 group text-sm sm:text-base">
        <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-1 sm:mr-2 group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        <span class="font-medium hidden sm:inline">Kembali ke Beranda</span>
        <span class="font-medium sm:hidden">Beranda</span>
      </a>
    </div>
    
    <!-- Floating Shapes -->
    <div class="floating-shape shape-1"></div>
    <div class="floating-shape shape-2"></div>
    <div class="floating-shape shape-3"></div>
    
    <div class="w-full max-w-md mx-auto bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl p-6 sm:p-8 lg:p-10 flex flex-col gap-4 sm:gap-6 transition-all duration-300 hover:shadow-2xl relative z-10">
      <!-- Logo and Title -->
      <div class="flex flex-col items-center justify-center mb-1 sm:mb-2">
        <img src="/src/assets/img/sagawa_logo.svg" alt="Sagawa Logo" class="w-24 sm:w-32 h-auto mb-3 sm:mb-4" />
        <h1 class="text-2xl sm:text-3xl font-bold text-center text-amber-600">Admin Register</h1>
        <p class="text-gray-500 text-center mt-1 sm:mt-2 text-sm sm:text-base">Daftar sebagai admin baru</p>
      </div>
      
      <!-- Alert untuk pesan error atau success -->
      <div id="alert" class="hidden p-3 sm:p-4 rounded-lg text-sm"></div>
    
      <form id="registerForm" class="flex flex-col gap-4 sm:gap-5">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1.5 sm:mb-2">Nama Lengkap</label>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-4 w-4 sm:h-5 sm:w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <input 
              type="text" 
              id="nama" 
              name="nama"
              placeholder="Masukkan nama lengkap" 
              class="w-full pl-9 sm:pl-10 pr-4 py-2.5 sm:py-3 text-sm sm:text-base rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition" 
              required 
              minlength="2"
            />
          </div>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1.5 sm:mb-2">Email</label>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-4 w-4 sm:h-5 sm:w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
              </svg>
            </div>
            <input 
              type="email" 
              id="email" 
              name="email"
              placeholder="Masukkan email" 
              class="w-full pl-9 sm:pl-10 pr-4 py-2.5 sm:py-3 text-sm sm:text-base rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition" 
              required 
            />
          </div>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1.5 sm:mb-2">Password</label>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-4 w-4 sm:h-5 sm:w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <input 
              type="password" 
              id="password" 
              name="password"
              placeholder="Minimal 6 karakter" 
              class="w-full pl-9 sm:pl-10 pr-10 sm:pr-12 py-2.5 sm:py-3 text-sm sm:text-base rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition" 
              required 
              minlength="6"
            />
            <button type="button" id="togglePassword" class="absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-amber-600 focus:outline-none transition-colors p-1">
              <svg id="eyeOpen" class="w-4 h-4 sm:w-5 sm:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
              </svg>
              <svg id="eyeClosed" class="w-4 h-4 sm:w-5 sm:h-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88"></path>
              </svg>
            </button>
          </div>
        </div>
        
        <div class="flex items-center">
          <input 
            id="terms" 
            type="checkbox" 
            class="h-3.5 w-3.5 sm:h-4 sm:w-4 text-amber-600 focus:ring-amber-500 border-gray-300 rounded"
            required
          />
          <label for="terms" class="ml-2 block text-sm text-gray-700">
            Saya setuju dengan <a href="#" class="text-amber-600 hover:text-amber-500 font-medium">Syarat & Ketentuan</a>
          </label>
        </div>
        
        <button 
          id="register-btn" 
          type="submit" 
          class="w-full py-2.5 sm:py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-xl shadow-lg hover:from-amber-600 hover:to-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-all transform hover:-translate-y-0.5 text-sm sm:text-base"
        >
          <span id="register-text" class="flex items-center justify-center">
            Daftar
            <svg class="ml-2 w-4 h-4 sm:w-5 sm:h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
            </svg>
          </span>
          <span id="register-loading" class="hidden">
            <div class="flex items-center justify-center">
              <svg class="animate-spin -ml-1 mr-2 h-4 w-4 sm:h-5 sm:w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <span class="text-sm sm:text-base">Mendaftar...</span>
            </div>
          </span>
        </button>
      </form>
      
      <div class="mt-3 sm:mt-4 text-center">
        <p class="text-sm text-gray-600">
          Sudah punya akun? 
          <a href="/admin/login" class="font-medium text-amber-600 hover:text-amber-500 transition-colors">
            Masuk sekarang
          </a>
        </p>
      </div>
    </div>
  </main>

  <script>
    // Input Sanitizer Class
    class InputSanitizer {
      static sanitizeEmail(input: string, strict: boolean = false): string {
        if (!input) return '';

        // Allow natural typing - only sanitize when dangerous characters are present
        if (!strict) {
          // During typing, only remove the most dangerous characters
          return input.replace(/[<>\"'`\\]/g, '');
        }

        // Strict sanitization for form submission
        let sanitized = input.trim().toLowerCase();

        // Remove dangerous characters
        sanitized = sanitized.replace(/[<>\"'`\\]/g, '');

        // Basic email validation pattern (allow common characters)
        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        if (!emailPattern.test(sanitized)) {
          // If it doesn't match email pattern, remove suspicious characters but keep basic ones
          sanitized = sanitized.replace(/[^a-zA-Z0-9@._-]/g, '');
        }

        return sanitized;
      }

      static sanitizeName(input: string): string {
        if (!input) return '';
        
        // Remove dangerous characters but allow letters, spaces, and common name characters
        return input.replace(/[<>\"'`\\]/g, '').replace(/[^a-zA-Z\s.-]/g, '').trim();
      }
    }

    const form = document.getElementById('registerForm') as HTMLFormElement;
    const alertDiv = document.getElementById('alert') as HTMLDivElement;
    const submitBtn = document.getElementById('register-btn') as HTMLButtonElement;
    const submitText = document.getElementById('register-text');
    const submitLoading = document.getElementById('register-loading');
    const passwordInput = document.getElementById('password') as HTMLInputElement;
    const togglePasswordBtn = document.getElementById('togglePassword');
    const eyeOpen = document.getElementById('eyeOpen');
    const eyeClosed = document.getElementById('eyeClosed');
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const namaInput = document.getElementById('nama') as HTMLInputElement;
    const termsCheckbox = document.getElementById('terms') as HTMLInputElement;

    // Setup input sanitization
    setupInputSanitization();

    function setupInputSanitization() {
      if (emailInput) {
        emailInput.addEventListener('input', function(e) {
          const target = e.target as HTMLInputElement;
          const originalValue = target.value;
          const cursorPosition = target.selectionStart;

          // Sanitize input during typing (non-strict mode)
          const sanitizedValue = InputSanitizer.sanitizeEmail(originalValue, false);

          // Only update if sanitization changed something
          if (sanitizedValue !== originalValue) {
            target.value = sanitizedValue;

            // Restore cursor position if possible
            if (cursorPosition !== null) {
              const newPosition = Math.min(cursorPosition, sanitizedValue.length);
              target.setSelectionRange(newPosition, newPosition);
            }
          }
        });

        // Handle paste events
        emailInput.addEventListener('paste', function(e) {
          const target = e.target as HTMLInputElement;
          setTimeout(() => {
            const originalValue = target.value;
            const sanitizedValue = InputSanitizer.sanitizeEmail(originalValue, false);
            if (sanitizedValue !== originalValue) {
              target.value = sanitizedValue;
            }
          }, 0);
        });
      }

      if (namaInput) {
        namaInput.addEventListener('input', function(e) {
          const target = e.target as HTMLInputElement;
          const originalValue = target.value;
          const cursorPosition = target.selectionStart;

          const sanitizedValue = InputSanitizer.sanitizeName(originalValue);

          if (sanitizedValue !== originalValue) {
            target.value = sanitizedValue;

            if (cursorPosition !== null) {
              const newPosition = Math.min(cursorPosition, sanitizedValue.length);
              target.setSelectionRange(newPosition, newPosition);
            }
          }
        });
      }
    }

    function showAlert(message: string, type: 'success' | 'error') {
      alertDiv.className = `p-3 sm:p-4 rounded-lg text-sm ${
        type === 'success' 
          ? 'bg-green-100 border border-green-400 text-green-700' 
          : 'bg-red-100 border border-red-400 text-red-700'
      }`;
      alertDiv.textContent = message;
      alertDiv.classList.remove('hidden');
      
      setTimeout(() => {
        alertDiv.classList.add('hidden');
      }, 5000);
    }

    function setLoading(isLoading: boolean) {
      if (submitBtn && submitText && submitLoading) {
        submitBtn.disabled = isLoading;
        if (isLoading) {
          submitText.classList.add('hidden');
          submitLoading.classList.remove('hidden');
          submitBtn.classList.add('opacity-75');
        } else {
          submitText.classList.remove('hidden');
          submitLoading.classList.add('hidden');
          submitBtn.classList.remove('opacity-75');
        }
      }
    }

    // Password visibility toggle
    if (togglePasswordBtn && passwordInput && eyeOpen && eyeClosed) {
      togglePasswordBtn.addEventListener('click', function() {
        const isPassword = passwordInput.type === 'password';
        passwordInput.type = isPassword ? 'text' : 'password';
        
        if (isPassword) {
          eyeOpen.classList.add('hidden');
          eyeClosed.classList.remove('hidden');
        } else {
          eyeOpen.classList.remove('hidden');
          eyeClosed.classList.add('hidden');
        }
      });
    }

    // Check if already logged in
    if (localStorage.getItem('adminToken')) {
      window.location.href = '/admin/dashboard';
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const data = {
        nama: formData.get('nama') as string,
        email: formData.get('email') as string,
        password: formData.get('password') as string,
      };

      // Sanitize inputs for submission
      const sanitizedName = InputSanitizer.sanitizeName(data.nama);
      const sanitizedEmail = InputSanitizer.sanitizeEmail(data.email, true);

      // Validasi client-side
      if (!sanitizedName || sanitizedName.length < 2) {
        showAlert('Nama minimal 2 karakter', 'error');
        return;
      }

      if (!sanitizedEmail || !sanitizedEmail.includes('@')) {
        showAlert('Email tidak valid', 'error');
        return;
      }

      if (!data.password || data.password.length < 6) {
        showAlert('Password minimal 6 karakter', 'error');
        return;
      }

      if (!termsCheckbox.checked) {
        showAlert('Anda harus menyetujui syarat dan ketentuan', 'error');
        return;
      }

      setLoading(true);

      try {
        const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:3000';
        const response = await fetch(`${API_URL}/api/admin/register`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            nama: sanitizedName,
            email: sanitizedEmail,
            password: data.password,
          }),
        });

        const result = await response.json();

        if (response.ok) {
          // Simpan token ke localStorage
          localStorage.setItem('adminToken', result.token);
          localStorage.setItem('adminUser', JSON.stringify(result.user));
          
          showAlert('Registrasi berhasil! Mengalihkan ke dashboard...', 'success');
          
          // Redirect ke dashboard setelah 2 detik
          setTimeout(() => {
            window.location.href = '/admin/dashboard';
          }, 2000);
        } else {
          showAlert(result.error || 'Registrasi gagal', 'error');
        }
      } catch (error) {
        console.error('Error:', error);
        showAlert('Terjadi kesalahan. Silakan coba lagi.', 'error');
      } finally {
        setLoading(false);
      }
    });
  </script>
</Layout>
