---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Kontak Kami – Sagawa Group">
	<!-- Enhanced Security Headers -->
	<meta http-equiv="X-Content-Type-Options" content="nosniff" slot="head">
	<meta http-equiv="X-Frame-Options" content="DENY" slot="head">
	<meta http-equiv="X-XSS-Protection" content="1; mode=block" slot="head">
	<meta name="referrer" content="strict-origin-when-cross-origin" slot="head">
	
	<div class="flex flex-col min-h-screen">
		<Navbar />
		<main class="flex-1">
			<!-- Hero Section -->
			<section class="hero-section relative pt-24 pb-32 md:pt-24 md:pb-36 px-4 text-center text-white bg-gradient-to-br from-amber-500 via-orange-500 to-red-500 overflow-hidden">
                <!-- Background decorative elements with updated colors matching about page -->
                <div class="absolute inset-0 opacity-10">
                    <div class="animate-float absolute top-20 left-10 w-16 h-16 bg-gradient-to-br from-white to-amber-100 rounded-full"></div>
                    <div class="animate-float delay-700 absolute top-40 right-20 w-12 h-12 bg-gradient-to-br from-amber-200 to-amber-300 rounded-full"></div>
                    <div class="animate-float delay-500 absolute bottom-32 left-1/4 w-8 h-8 bg-gradient-to-br from-orange-200 to-orange-300 rounded-full"></div>
                    <div class="animate-float delay-300 absolute bottom-20 right-1/3 w-20 h-20 bg-gradient-to-br from-red-200 to-red-300 rounded-full"></div>
                    <div class="animate-float delay-200 absolute top-1/2 left-1/3 w-10 h-10 bg-gradient-to-br from-yellow-200 to-amber-200 rounded-full"></div>
                </div>
                
                <div class="container mx-auto max-w-4xl relative z-30">
                    <h5 class="text-sm sm:text-base text-amber-200 font-semibold uppercase tracking-wider mb-3 animate-fade-in-up">
                        Hubungi Kami
                    </h5>
                    <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white leading-tight animate-fade-in-up animation-delay-200">
                        Sagawa Group
                    </h1>
                    <div class="w-24 h-1 bg-gradient-to-r from-amber-200 to-white mx-auto mt-6 rounded animate-fade-in-up animation-delay-400"></div>
                    <p class="text-lg md:text-xl mb-8 pt-6 max-w-3xl mx-auto animate-fade-in-up animation-delay-600 text-amber-100">
                        Kami di Sagawa Group selalu terbuka untuk menjalin komunikasi dengan Anda, baik terkait informasi produk dan layanan, peluang kemitraan, maupun saran dan masukan yang membangun. Dengan tim yang responsif, ramah, dan profesional, kami siap memberikan penjelasan lebih lanjut mengenai sistem usaha kami serta mendukung setiap mitra untuk tumbuh bersama.
                    </p>
                </div>
            
                <!-- White Wave Effect that overlaps hero section -->
                <div class="absolute bottom-[-1px] left-0 w-full overflow-hidden z-30">
                    <!-- Single White Wave -->
                    <svg class="w-full h-20" viewBox="0 0 1440 70" preserveAspectRatio="none">
                        <path d="M0,70 L0,40 C240,15 480,50 720,45 C960,40 1200,15 1440,25 L1440,70 Z" fill="#FFFFFF"></path>
                    </svg>
                </div>
            </section>

			<!-- Contact Section -->
			<section class="pt-12 pb-12 sm:py-16 lg:py-20 bg-gradient-to-b from-white via-amber-50/30 to-white relative mt-[-1px]">
				<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
					<!-- Section Header with Enhanced Animation -->
					<div class="text-center mb-16 animate-fade-in-up">
						<div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-amber-500 to-red-500 rounded-full mb-6 animate-pulse-gentle">
							<svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
							</svg>
						</div>
						<h2 class="text-4xl md:text-5xl font-bold text-center mb-4">
							<span class="bg-gradient-to-r from-amber-500 via-orange-500 to-red-500 bg-clip-text text-transparent animate-gradient-shift">Kontak Kami</span>
						</h2>
						<p class="text-gray-600 text-lg max-w-2xl mx-auto">
							Mari terhubung dengan kami dan mulai percakapan yang bermakna
						</p>
						<div class="w-24 h-1 bg-gradient-to-r from-amber-500 to-red-500 mx-auto mt-6 rounded animate-expand"></div>
					</div>
    
					<!-- Contact Cards Grid -->
					<div class="grid grid-cols-1 xl:grid-cols-2 gap-8 lg:gap-12">
						<!-- Contact Form Card -->
						<div class="group bg-white rounded-3xl shadow-lg border border-gray-100 p-6 sm:p-8 lg:p-10 transition-all duration-500 hover:shadow-2xl hover:-translate-y-2 hover:border-green-200 animate-slide-in-left backdrop-blur-sm bg-white/90">
							<!-- Form Header -->
							<div class="flex justify-center mb-8">
								<div class="bg-gradient-to-br from-green-100 via-emerald-100 to-teal-100 p-4 rounded-2xl shadow-inner group-hover:shadow-md transition-all duration-300 animate-bounce-in">
									<svg class="w-8 h-8 text-green-600 group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"/>
									</svg>
								</div>
							</div>

							<h2 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-2 text-center group-hover:text-green-600 transition-colors duration-300">
								Kirim Pesan Langsung
							</h2>
							<p class="text-gray-600 text-center mb-8 text-sm lg:text-base">
								Sampaikan pertanyaan atau kebutuhan Anda kepada kami
							</p>

							<!-- Enhanced Form -->
							<form id="contactForm" class="space-y-6">
								<div class="group-input">
									<label for="name" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors duration-200">
										<span class="flex items-center gap-2">
											<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
											</svg>
											Nama Lengkap
										</span>
									</label>
									<div class="relative security-indicator">
										<input
											type="text"
											id="name"
											name="name"
											required
											maxlength="100"
											autocomplete="name"
											spellcheck="false"
											placeholder="Masukkan nama lengkap Anda"
											pattern="[a-zA-Z\s\-'\.]{2,100}"
											title="Nama hanya boleh mengandung huruf, spasi, tanda hubung, dan apostrof (2-100 karakter)"
											class="w-full px-4 py-4 border-2 border-gray-200 rounded-xl focus:ring-4 focus:ring-green-100 focus:border-green-400 transition-all duration-300 hover:border-gray-300 bg-gray-50/50 focus:bg-white text-gray-900 placeholder-gray-400"
										/>
										<div class="absolute inset-y-0 right-0 flex items-center pr-3">
											<div class="w-2 h-2 bg-green-400 rounded-full opacity-0 indicator transition-opacity duration-300"></div>
										</div>
									</div>
								</div>

								<div class="group-input">
									<label for="domisili" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors duration-200">
										<span class="flex items-center gap-2">
											<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
											</svg>
											Domisili
										</span>
									</label>
									<div class="relative security-indicator">
										<input
											type="text"
											id="domisili"
											name="domisili"
											required
											maxlength="200"
											autocomplete="address-level2"
											spellcheck="false"
											placeholder="Masukkan domisili/alamat tempat tinggal Anda"
											title="Domisili/alamat tempat tinggal (maksimal 200 karakter)"
											class="w-full px-4 py-4 border-2 border-gray-200 rounded-xl focus:ring-4 focus:ring-green-100 focus:border-green-400 transition-all duration-300 hover:border-gray-300 bg-gray-50/50 focus:bg-white text-gray-900 placeholder-gray-400"
										/>
										<div class="absolute inset-y-0 right-0 flex items-center pr-3">
											<div class="w-2 h-2 bg-green-400 rounded-full opacity-0 indicator transition-opacity duration-300"></div>
										</div>
									</div>
								</div>

								<div class="group-input">
									<label for="message" class="block text-sm font-semibold text-gray-700 mb-2 transition-colors duration-200">
										<span class="flex items-center gap-2">
											<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
											</svg>
											Pesan Anda
										</span>
									</label>
									<div class="relative security-indicator">
										<textarea
											id="message"
											name="message"
											rows="5"
											maxlength="1000"
											spellcheck="true"
											placeholder="Tuliskan pesan, pertanyaan, atau keperluan Anda..."
											required
											title="Pesan Anda (maksimal 1000 karakter)"
											class="w-full px-4 py-4 border-2 border-gray-200 rounded-xl focus:ring-4 focus:ring-green-100 focus:border-green-400 resize-none transition-all duration-300 hover:border-gray-300 bg-gray-50/50 focus:bg-white text-gray-900 placeholder-gray-400 min-h-[120px]"
										></textarea>
										<div class="absolute top-3 right-3">
											<div class="w-2 h-2 bg-green-400 rounded-full opacity-0 indicator transition-opacity duration-300"></div>
										</div>
									</div>
								</div>

								<!-- Honeypot field to catch bots (hidden from users) -->
								<div style="position: absolute; left: -9999px; opacity: 0; pointer-events: none;" aria-hidden="true">
									<label for="website">Website (leave empty):</label>
									<input type="text" id="website" name="website" tabindex="-1" autocomplete="off">
								</div>

								<!-- Two Admin Buttons Side by Side -->
								<div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
									<!-- Admin 1 Button -->
									<button
										type="button"
										data-admin="1"
										class="admin-btn admin-1-btn relative bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 hover:from-green-600 hover:via-emerald-600 hover:to-teal-600 text-white font-bold py-4 px-6 rounded-2xl transform hover:scale-[1.02] hover:shadow-2xl transition-all duration-300 flex items-center justify-center space-x-2 overflow-hidden"
									>
										<div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 hover-overlay transition-opacity duration-300"></div>
										<svg class="w-5 h-5 relative z-10 transition-transform duration-300" fill="currentColor" viewBox="0 0 24 24">
											<path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.569-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
										</svg>
										<span class="text-sm lg:text-base font-semibold relative z-10">Admin 1</span>
										<div class="absolute inset-0 rounded-2xl bg-gradient-to-r from-transparent via-white/10 to-transparent translate-x-[-100%] shimmer transition-transform duration-700 ease-out"></div>
									</button>

									<!-- Admin 2 Button -->
									<button
										type="button"
										data-admin="2"
										class="admin-btn admin-1-btn relative bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 hover:from-green-600 hover:via-emerald-600 hover:to-teal-600 text-white font-bold py-4 px-6 rounded-2xl transform hover:scale-[1.02] hover:shadow-2xl transition-all duration-300 flex items-center justify-center space-x-2 overflow-hidden"
									>
										<div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 hover-overlay transition-opacity duration-300"></div>
										<svg class="w-5 h-5 relative z-10 transition-transform duration-300" fill="currentColor" viewBox="0 0 24 24">
											<path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.569-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
										</svg>
										<span class="text-sm lg:text-base font-semibold relative z-10">Admin 2</span>
										<div class="absolute inset-0 rounded-2xl bg-gradient-to-r from-transparent via-white/10 to-transparent translate-x-[-100%] shimmer transition-transform duration-700 ease-out"></div>
									</button>
								</div>
							</form>
						</div>
        
						<!-- Contact Info & Map -->
						<div class="group bg-white rounded-3xl shadow-lg border border-gray-100 overflow-hidden transition-all duration-500 hover:shadow-2xl hover:border-amber-200 animate-slide-in-right backdrop-blur-sm bg-white/90">
							<!-- Contact Info -->
							<div class="p-6 sm:p-8 lg:p-10 bg-gradient-to-br from-amber-50/80 via-orange-50/60 to-red-50/40 group-hover:from-amber-100/80 group-hover:via-orange-100/60 group-hover:to-red-100/40 transition-all duration-500">
								<div class="flex items-center justify-between mb-8">
									<h2 class="text-2xl lg:text-3xl font-bold text-gray-900 group-hover:text-amber-700 transition-colors duration-300">Informasi Kontak</h2>
									<div class="w-12 h-12 bg-gradient-to-br from-amber-200 to-orange-300 rounded-full flex items-center justify-center transition-transform duration-300 animate-pulse-gentle">
										<svg class="w-6 h-6 text-orange-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
										</svg>
									</div>
								</div>
            
								<div class="space-y-6">
									<div class="group-item flex items-start p-4 rounded-2xl hover:bg-white/70 transition-all duration-300">
										<div class="flex-shrink-0 mt-1">
											<div class="bg-gradient-to-br from-amber-200 via-orange-200 to-red-200 p-3 rounded-2xl shadow-inner icon-wrapper transition-all duration-300">
												<svg class="w-6 h-6 text-orange-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
												</svg>
											</div>
										</div>
										<div class="ml-5">
											<h3 class="text-base font-semibold text-gray-900 mb-1 transition-colors duration-300">Alamat</h3>
											<p class="text-gray-600 leading-relaxed text-sm lg:text-base">Jl. Sawo No. 156, RT: 04/01 Cipedak-Jagakarsa, Jakarta Selatan 12630</p>
										</div>
									</div>
              
									<div class="group-item flex items-start p-4 rounded-2xl hover:bg-white/70 transition-all duration-300">
										<div class="flex-shrink-0 mt-1">
											<div class="bg-gradient-to-br from-amber-200 via-orange-200 to-red-200 p-3 rounded-2xl shadow-inner icon-wrapper transition-all duration-300">
												<svg class="w-6 h-6 text-orange-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
												</svg>
											</div>
										</div>
										<div class="ml-5">
											<h3 class="text-base font-semibold text-gray-900 mb-1 transition-colors duration-300">Telepon / WhatsApp</h3>
											<p class="text-gray-600 text-sm lg:text-base font-medium">+62 818-0898-5548</p>
										</div>
									</div>
              
									<div class="group-item flex items-start p-4 rounded-2xl hover:bg-white/70 transition-all duration-300">
										<div class="flex-shrink-0 mt-1">
											<div class="bg-gradient-to-br from-amber-200 via-orange-200 to-red-200 p-3 rounded-2xl shadow-inner icon-wrapper transition-all duration-300">
												<svg class="w-6 h-6 text-orange-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
												</svg>
											</div>
										</div>
										<div class="ml-5">
											<h3 class="text-base font-semibold text-gray-900 mb-1 transition-colors duration-300">Email</h3>
											<p class="text-gray-600 text-sm lg:text-base font-medium">admin@sagawagroup.id</p>
										</div>
									</div>
								</div>
							</div>
          
							<!-- Enhanced Map -->
							<div class="h-72 sm:h-80 lg:h-96 relative overflow-hidden">
								<div class="absolute inset-0 bg-gradient-to-t from-amber-100/20 via-transparent to-orange-100/10 opacity-60 pointer-events-none z-10"></div>
								<iframe 
									src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3965.4866929361474!2d106.81743307388955!3d-6.33904969371277!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x2e69ee3e065d4f6d%3A0x8fefdee3183eb09!2sJl.%20Sawo%2C%20Cipedak%2C%20Kec.%20Jagakarsa%2C%20Kota%20Jakarta%20Selatan%2C%20Daerah%20Khusus%20Ibukota%20Jakarta!5e0!3m2!1sen!2sid!4v1692733493132!5m2!1sen!2sid" 
									class="w-full h-full border-0" 
									allowfullscreen="" 
									loading="lazy" 
									referrerpolicy="no-referrer-when-downgrade">
								</iframe>
							</div>
						</div>
					</div>
				</div>
			</section>

    </main>
    
    <Footer />

  <!-- CLIENT-SIDE SCRIPT -->
  <script>
    // Input sanitization and validation utilities
    const InputSanitizer = {
      // Maximum lengths for security
      MAX_LENGTHS: {
        name: 100,
        domisili: 200,
        message: 1000
      },

      // Rate limiting
      lastSubmission: 0,
      MIN_INTERVAL: 5000, // 5 seconds between submissions

      // Sanitize HTML and remove dangerous characters
      sanitizeHTML(input: string): string {
        if (!input) return '';
        
        // First, completely remove < and > characters
        let sanitized = input.replace(/[<>]/g, '');
        
        // Remove HTML tags and script content (additional safety)
        sanitized = sanitized
          .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
          .replace(/<[^>]+>/g, '')
          .replace(/javascript:/gi, '')
          .replace(/on\w+\s*=/gi, '')
          .replace(/data:/gi, '')
          .replace(/vbscript:/gi, '');

        // Escape HTML entities
        const div = document.createElement('div');
        div.textContent = sanitized;
        sanitized = div.innerHTML;

        return sanitized.trim();
      },

      // Validate input length and content
      validateInput(value: string, field: string): { valid: boolean; error?: string } {
        if (!value || value.length === 0) {
          return { valid: false, error: `${field} tidak boleh kosong` };
        }

        const maxLength = this.MAX_LENGTHS[field as keyof typeof this.MAX_LENGTHS] || 100;
        if (value.length > maxLength) {
          return { valid: false, error: `${field} terlalu panjang (maksimal ${maxLength} karakter)` };
        }

        // Check for suspicious patterns including < and > characters
        const suspiciousPatterns = [
          /[<>]/,  // Block angle brackets completely
          /<script/i,
          /javascript:/i,
          /on\w+\s*=/i,
          /data:\s*text\/html/i,
          /vbscript:/i,
          /<iframe/i,
          /<object/i,
          /<embed/i,
          /eval\s*\(/i,
          /document\./i,
          /window\./i
        ];

        for (const pattern of suspiciousPatterns) {
          if (pattern.test(value)) {
            return { valid: false, error: `${field} mengandung karakter yang tidak diizinkan` };
          }
        }

        return { valid: true };
      },

      // Validate name specifically
      validateName(name: string): { valid: boolean; error?: string } {
        const sanitized = this.sanitizeHTML(name);
        
        if (sanitized.length < 2) {
          return { valid: false, error: 'Nama minimal 2 karakter' };
        }

        // Only allow letters, spaces, apostrophes, hyphens
        if (!/^[a-zA-Z\s\-'\.]+$/.test(sanitized)) {
          return { valid: false, error: 'Nama hanya boleh mengandung huruf, spasi, tanda hubung, dan apostrof' };
        }

        return this.validateInput(sanitized, 'name');
      },

      // Check rate limiting
      checkRateLimit(): { valid: boolean; error?: string } {
        const now = Date.now();
        if (now - this.lastSubmission < this.MIN_INTERVAL) {
          const remainingTime = Math.ceil((this.MIN_INTERVAL - (now - this.lastSubmission)) / 1000);
          return { valid: false, error: `Mohon tunggu ${remainingTime} detik sebelum mengirim pesan lagi` };
        }
        return { valid: true };
      }
    };

    // Enhanced form validation with visual feedback
    function validateForm(): { valid: boolean; errors: string[] } {
      const nameInput = document.getElementById("name") as HTMLInputElement;
      const domisiliInput = document.getElementById("domisili") as HTMLInputElement;
      const messageInput = document.getElementById("message") as HTMLTextAreaElement;
      
      const errors: string[] = [];

      // Clear previous error states
      [nameInput, domisiliInput, messageInput].forEach(input => {
        input.classList.remove('border-red-500', 'bg-red-50');
        input.classList.add('border-gray-200');
      });

      // Rate limiting check
      const rateLimitCheck = InputSanitizer.checkRateLimit();
      if (!rateLimitCheck.valid) {
        errors.push(rateLimitCheck.error!);
        return { valid: false, errors };
      }

      // Honeypot check (anti-bot)
      const honeypotInput = document.getElementById("website") as HTMLInputElement;
      if (honeypotInput && honeypotInput.value.trim() !== '') {
        // Bot detected - silently fail
        console.warn('Bot detected via honeypot');
        return { valid: false, errors: ['Terjadi kesalahan validasi'] };
      }

      // Validate name
      const nameValidation = InputSanitizer.validateName(nameInput.value);
      if (!nameValidation.valid) {
        errors.push(nameValidation.error!);
        nameInput.classList.add('border-red-500', 'bg-red-50');
        nameInput.classList.remove('border-gray-200');
      }

      // Validate domisili
      const domisiliValidation = InputSanitizer.validateInput(
        InputSanitizer.sanitizeHTML(domisiliInput.value), 
        'domisili'
      );
      if (!domisiliValidation.valid) {
        errors.push(domisiliValidation.error!);
        domisiliInput.classList.add('border-red-500', 'bg-red-50');
        domisiliInput.classList.remove('border-gray-200');
      }

      // Validate message
      const messageValidation = InputSanitizer.validateInput(
        InputSanitizer.sanitizeHTML(messageInput.value), 
        'message'
      );
      if (!messageValidation.valid) {
        errors.push(messageValidation.error!);
        messageInput.classList.add('border-red-500', 'bg-red-50');
        messageInput.classList.remove('border-gray-200');
      }

      return { valid: errors.length === 0, errors };
    }

    // Show error messages to user
    function showErrors(errors: string[]) {
      // Remove existing error messages
      const existingErrors = document.querySelectorAll('.form-error-message');
      existingErrors.forEach(el => el.remove());

      if (errors.length === 0) return;

      // Create error container
      const errorContainer = document.createElement('div');
      errorContainer.className = 'form-error-message bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-4';
      
      const errorList = document.createElement('ul');
      errorList.className = 'list-disc list-inside space-y-1';
      
      errors.forEach(error => {
        const li = document.createElement('li');
        li.textContent = error;
        errorList.appendChild(li);
      });

      errorContainer.appendChild(errorList);
      
      // Insert before form
      const form = document.getElementById('contactForm');
      form?.parentNode?.insertBefore(errorContainer, form);

      // Auto-remove after 8 seconds
      setTimeout(() => {
        errorContainer.remove();
      }, 8000);
    }

    // Function to handle admin button clicks with enhanced security
    function handleAdminContact(adminNumber: string, phoneNumber: string) {
      // Validate form first
      const validation = validateForm();
      if (!validation.valid) {
        showErrors(validation.errors);
        return;
      }

      const nameInput = document.getElementById("name") as HTMLInputElement;
      const domisiliInput = document.getElementById("domisili") as HTMLInputElement;
      const messageInput = document.getElementById("message") as HTMLTextAreaElement;
      
      // Sanitize all inputs
      const name = InputSanitizer.sanitizeHTML(nameInput.value.trim());
      const domisili = InputSanitizer.sanitizeHTML(domisiliInput.value.trim());
      const message = InputSanitizer.sanitizeHTML(messageInput.value.trim());

      // Double-check after sanitization
      if (!name || !domisili || !message) {
        showErrors(["Mohon isi semua field dengan benar"]);
        return;
      }

      // Update rate limiting
      InputSanitizer.lastSubmission = Date.now();

      // Create WhatsApp URL with sanitized content
      const whatsappMessage = `Halo Admin ${adminNumber} Sagawa Group!\n\nPerkenalkan, saya *${name}*\nDomisili: ${domisili}\n\nSaya ingin menyampaikan:\n${message}\n\nMohon informasi lebih lanjut. Terima kasih! 🙏`;
      
      const url = `https://api.whatsapp.com/send?phone=${encodeURIComponent(phoneNumber)}&text=${encodeURIComponent(whatsappMessage)}`;

      // Open WhatsApp
      window.open(url, "_blank");

      // Show success message
      const successMessage = document.createElement('div');
      successMessage.className = 'form-success-message bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-4';
      successMessage.textContent = 'Pesan berhasil dikirim ke WhatsApp! Anda akan diarahkan ke aplikasi WhatsApp.';
      
      const form = document.getElementById('contactForm');
      form?.parentNode?.insertBefore(successMessage, form);

      // Reset form after successful submission
      setTimeout(() => {
        nameInput.value = "";
        domisiliInput.value = "";
        messageInput.value = "";
        successMessage.remove();
      }, 3000);
    }

    // Real-time input validation and sanitization
    function setupRealTimeValidation() {
      const nameInput = document.getElementById("name") as HTMLInputElement;
      const domisiliInput = document.getElementById("domisili") as HTMLInputElement;
      const messageInput = document.getElementById("message") as HTMLTextAreaElement;

      // Add input event listeners for real-time validation
      [nameInput, domisiliInput, messageInput].forEach(input => {
        if (!input) return;

        // Sanitize on input and block < > characters immediately
        input.addEventListener('input', (e) => {
          const target = e.target as HTMLInputElement | HTMLTextAreaElement;
          const originalValue = target.value;
          
          // Immediately remove < and > characters
          let cleanValue = originalValue.replace(/[<>]/g, '');
          
          // Apply full sanitization
          const sanitizedValue = InputSanitizer.sanitizeHTML(cleanValue);
          
          // Update value if it was sanitized
          if (originalValue !== sanitizedValue) {
            target.value = sanitizedValue;
            
            // Show warning if < or > were removed
            if (/[<>]/.test(originalValue)) {
              const warningEl = target.parentElement?.querySelector('.input-warning') as HTMLElement;
              if (!warningEl) {
                const warning = document.createElement('div');
                warning.className = 'input-warning text-xs text-red-500 mt-1 animate-pulse';
                warning.textContent = 'Karakter < dan > tidak diizinkan dan telah dihapus';
                target.parentElement?.appendChild(warning);
                
                // Remove warning after 3 seconds
                setTimeout(() => warning.remove(), 3000);
              }
            }
          }

          // Visual feedback for length limits
          const fieldName = target.name as keyof typeof InputSanitizer.MAX_LENGTHS;
          const maxLength = InputSanitizer.MAX_LENGTHS[fieldName] || 100;
          const currentLength = sanitizedValue.length;
          
          // Add character counter
          let counter = target.parentElement?.querySelector('.char-counter') as HTMLElement;
          if (!counter) {
            counter = document.createElement('div');
            counter.className = 'char-counter text-xs text-gray-500 mt-1';
            target.parentElement?.appendChild(counter);
          }
          
          counter.textContent = `${currentLength}/${maxLength}`;
          
          // Color coding for length warning
          if (currentLength > maxLength * 0.9) {
            counter.className = 'char-counter text-xs text-orange-500 mt-1';
          } else if (currentLength > maxLength * 0.8) {
            counter.className = 'char-counter text-xs text-yellow-600 mt-1';
          } else {
            counter.className = 'char-counter text-xs text-gray-500 mt-1';
          }

          // Remove error styling on valid input
          if (currentLength <= maxLength && sanitizedValue.length > 0) {
            target.classList.remove('border-red-500', 'bg-red-50');
            target.classList.add('border-gray-200');
          }
        });

        // Prevent dangerous key combinations and block < > characters
        input.addEventListener('keydown', (e: any) => {
          // Block < and > characters directly
          if (e.key === '<' || e.key === '>' || e.key === 'Less' || e.key === 'Greater') {
            e.preventDefault();
            
            // Show immediate feedback
            const target = e.target as HTMLInputElement | HTMLTextAreaElement;
            target.style.borderColor = '#ef4444';
            target.style.backgroundColor = '#fef2f2';
            
            setTimeout(() => {
              target.style.borderColor = '';
              target.style.backgroundColor = '';
            }, 500);
            
            return false;
          }
          
          // Block common dangerous key combinations
          if ((e.ctrlKey || e.metaKey) && (e.key === 'v')) {
            // Allow paste but we'll sanitize it
            setTimeout(() => {
              const target = e.target as HTMLInputElement | HTMLTextAreaElement;
              target.value = InputSanitizer.sanitizeHTML(target.value);
            }, 0);
          }
        });

        // Sanitize pasted content and remove < > characters
        input.addEventListener('paste', (e) => {
          setTimeout(() => {
            const target = e.target as HTMLInputElement | HTMLTextAreaElement;
            const originalValue = target.value;
            
            // Remove < and > first, then apply full sanitization
            let cleanValue = originalValue.replace(/[<>]/g, '');
            target.value = InputSanitizer.sanitizeHTML(cleanValue);
            
            // Show warning if < or > were in pasted content
            if (/[<>]/.test(originalValue)) {
              const warningEl = target.parentElement?.querySelector('.paste-warning') as HTMLElement;
              if (!warningEl) {
                const warning = document.createElement('div');
                warning.className = 'paste-warning text-xs text-orange-600 mt-1 font-medium';
                warning.textContent = 'Konten yang di-paste telah dibersihkan dari karakter < dan >';
                target.parentElement?.appendChild(warning);
                
                // Remove warning after 4 seconds
                setTimeout(() => warning.remove(), 4000);
              }
            }
            
            target.dispatchEvent(new Event('input')); // Trigger input validation
          }, 0);
        });
      });
    }

    // Add event listeners to admin buttons
    document.addEventListener('DOMContentLoaded', () => {
      // Setup real-time validation
      setupRealTimeValidation();

      // Admin 1 Button
      const admin1Btn = document.querySelector('.admin-1-btn');
      admin1Btn?.addEventListener('click', (e: Event) => {
        e.preventDefault();
        handleAdminContact('1', '6281808985548');
      });

      // Admin 2 Button  
      const admin2Btn = document.querySelector('.admin-2-btn');
      admin2Btn?.addEventListener('click', (e: Event) => {
        e.preventDefault();
        handleAdminContact('2', '628179243081');
      });

      // Add form submission prevention for security
      const form = document.getElementById('contactForm');
      form?.addEventListener('submit', (e) => {
        e.preventDefault(); // Prevent normal form submission
        return false;
      });

      // Add CSP-like behavior - prevent inline script execution
      document.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        if (target.hasAttribute('onclick')) {
          e.preventDefault();
          e.stopPropagation();
          console.warn('Inline onclick prevented for security');
        }
      });
    });
  </script>
  </div>
</Layout>

<style>
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
	.animate-fade-in-up {
		animation: fadeInUp 0.8s ease-out forwards;
	}
	
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Enhanced Animations */
	.animate-slide-in-left {
		animation: slideInLeft 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
	}

	.animate-slide-in-right {
		animation: slideInRight 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
	}

	.animate-bounce-in {
		animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
	}

	.animate-pulse-gentle {
		animation: pulseGentle 2s ease-in-out infinite;
	}

	.animate-gradient-shift {
		animation: gradientShift 4s ease-in-out infinite;
		background-size: 300% 300%;
	}

	.animate-expand {
		animation: expand 0.8s ease-out forwards;
		transform-origin: center;
	}

	@keyframes slideInLeft {
		from {
			opacity: 0;
			transform: translateX(-50px) scale(0.95);
		}
		to {
			opacity: 1;
			transform: translateX(0) scale(1);
		}
	}

	@keyframes slideInRight {
		from {
			opacity: 0;
			transform: translateX(50px) scale(0.95);
		}
		to {
			opacity: 1;
			transform: translateX(0) scale(1);
		}
	}

	@keyframes bounceIn {
		from {
			opacity: 0;
			transform: scale(0.3);
		}
		50% {
			transform: scale(1.05);
		}
		70% {
			transform: scale(0.9);
		}
		to {
			opacity: 1;
			transform: scale(1);
		}
	}

	@keyframes pulseGentle {
		0%, 100% {
			transform: scale(1);
			opacity: 1;
		}
		50% {
			transform: scale(1.05);
			opacity: 0.8;
		}
	}

	@keyframes gradientShift {
		0% {
			background-position: 0% 50%;
		}
		50% {
			background-position: 100% 50%;
		}
		100% {
			background-position: 0% 50%;
		}
	}

	@keyframes expand {
		from {
			width: 0;
			opacity: 0;
		}
		to {
			width: 6rem;
			opacity: 1;
		}
	}

	/* Mobile-First Responsive Design */
	@media (max-width: 640px) {
		.hero-section {
			padding-top: 5rem;
			padding-bottom: 8rem;
		}
		
		.container {
			padding-left: 1rem;
			padding-right: 1rem;
		}
		
		.animate-slide-in-left,
		.animate-slide-in-right {
			animation-delay: 0.3s;
		}
	}

	@media (max-width: 768px) {
		.animate-bounce-in {
			animation-delay: 0.2s;
		}
		
		.group:hover {
			transform: translateY(-4px);
		}
	}

	/* Enhanced hover effects for desktop */
	@media (min-width: 1024px) {
		.group:hover .animate-pulse-gentle {
			animation-duration: 1.5s;
		}
		
		.group:hover {
			transform: translateX(8px);
		}
	}

	/* Enhanced interactive effects */
	.group-input:focus-within label {
		color: rgb(21 128 61);
	}

	.group-input:focus-within .indicator {
		opacity: 1;
	}

	.group-btn:hover {
		background: linear-gradient(to right, rgb(21 128 61), rgb(13 148 136));
		transform: scale(1.02);
	}

	.group-btn:hover svg {
		transform: scale(1.1);
	}

	.group-btn:hover .hover-overlay {
		opacity: 1;
	}

	.group-btn:hover .shimmer {
		transform: translateX(100%);
	}

	.group-item:hover {
		background-color: rgba(255, 255, 255, 0.7);
		transform: translateX(8px);
	}

	.group-item:hover .icon-wrapper {
		transform: scale(1.1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
	}

	.group-item:hover h3 {
		color: rgb(180 83 9);
	}

	/* Form Security & Validation Styles */
	.form-error-message {
		animation: slideInFromTop 0.3s ease-out;
	}

	.form-success-message {
		animation: slideInFromTop 0.3s ease-out;
	}

	@keyframes slideInFromTop {
		from {
			opacity: 0;
			transform: translateY(-10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Input validation states */
	.group-input input.border-red-500,
	.group-input textarea.border-red-500 {
		animation: shake 0.5s ease-in-out;
		box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
	}

	@keyframes shake {
		0%, 100% { transform: translateX(0); }
		10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
		20%, 40%, 60%, 80% { transform: translateX(2px); }
	}

	/* Warning messages for blocked characters */
	.input-warning,
	.paste-warning {
		animation: fadeInWarning 0.3s ease-out;
		border-left: 3px solid #ef4444;
		padding-left: 8px;
		background-color: rgba(254, 242, 242, 0.8);
		border-radius: 4px;
		padding: 4px 8px;
	}

	@keyframes fadeInWarning {
		from {
			opacity: 0;
			transform: translateY(-5px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Character counter styling */
	.char-counter {
		font-size: 0.75rem;
		text-align: right;
		transition: color 0.2s ease;
	}

	/* Enhanced security indicators */
	.security-indicator {
		position: relative;
	}

	/* Loading state for buttons */
	.admin-btn:disabled {
		opacity: 0.6;
		cursor: not-allowed;
		transform: none !important;
	}

	.admin-btn.loading::after {
		content: '';
		position: absolute;
		width: 16px;
		height: 16px;
		margin: auto;
		border: 2px solid transparent;
		border-top-color: #ffffff;
		border-radius: 50%;
		animation: spin 1s linear infinite;
	}

	@keyframes spin {
		0% { transform: rotate(0deg); }
		100% { transform: rotate(360deg); }
	}

	/* Prevent text selection on sensitive elements */
	.admin-btn,
	.form-error-message,
	.form-success-message {
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}

	/* Accessibility improvements */
	@media (prefers-reduced-motion: reduce) {
		.animate-float,
		.animate-fade-in-up,
		.animate-slide-in-left,
		.animate-slide-in-right,
		.animate-bounce-in,
		.animate-pulse-gentle,
		.animate-gradient-shift,
		.animate-expand,
		.form-error-message,
		.form-success-message {
			animation: none;
		}
		
		* {
			transition: none !important;
		}
	}
  	/* Hero Section Styles */
	.hero-section {
		background: linear-gradient(135deg, 
			rgba(245, 158, 11, 0.9) 0%, 
			rgba(249, 115, 22, 0.8) 25%,
			rgba(239, 68, 68, 0.8) 50%,
			rgba(245, 158, 11, 0.9) 75%,
			rgba(217, 119, 6, 0.9) 100%
		);
	}

    .animate-float {
		animation: float 3s ease-in-out infinite;
	}

	/* Delay classes */
	.delay-100 { animation-delay: 0.1s; }
	.delay-200 { animation-delay: 0.2s; }
	.delay-300 { animation-delay: 0.3s; }
	.delay-400 { animation-delay: 0.4s; }
	.delay-500 { animation-delay: 0.5s; }
	.delay-600 { animation-delay: 0.6s; }
	.delay-700 { animation-delay: 0.7s; }
</style>