---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';

// Import gambar dari assets sesuai list
import rmnusantara from '../assets/img/gallery/rmnus.jpg?url';
import sagawaPapan from '../assets/img/papan/sagawa_papan.png?url';
import masakanmasgawa from '../assets/img/gallery/masgawa-sore.jpg?url';
import rmdalam from '../assets/img/gallery/rmnus-in.png?url';
import interior from '../assets/img/gallery/interior-rmnus.png?url';
import kopi from '../assets/img/gallery/coffee-cc.png?url';
import ricebowlcc from '../assets/img/gallery/ricebowl-cc.jpg?url';
import squash from '../assets/img/gallery/icesquash.png?url';
import kbd from '../assets/img/gerobak/indepandent_brand.jpg?url';

// Data untuk gallery images
const galleryImages = [
  { 
    src: rmnusantara, 
    alt: "RM Nusantara (MasGaw, WarNas, Masakan Mas Gawa)", 
    title: "RM Nusantara",
    subtitle: "RM Nusantara (MasGaw, WarNas, Masakan Mas Gawa)"
  },
  { 
    src: sagawaPapan, 
    alt: "Sagawa Group Papan", 
    title: "Logo Sagawa Group",
    subtitle: "Brand Signage"
  },
  { 
    src: masakanmasgawa, 
    alt: "Masakan Mas Gawa", 
    title: "Masakan Mas Gawa",
    subtitle: "RM Masakan Mas Gawa"
  },
  { 
    src: rmdalam, 
    alt: "RM Nusantara/WarNas", 
    title: "WarNas",
    subtitle: "Tampak Dalam WarNas"
  },
  { 
    src: interior, 
    alt: "Interior WarNas", 
    title: "WarNas",
    subtitle: "Interior WarNas"
  },
  { 
    src: kopi, 
    alt: "Kopi", 
    title: "Segelas Kopi Kagawa Coffee Corner",
    subtitle: "Premium Kopi"
  },
  { 
    src: ricebowlcc, 
    alt: "Kagawa Coffee Rice Bowl", 
    title: "Kagawa Coffee and Rice Bowl Corner",
    subtitle: "Kagawa Coffee and Rice Bowl Corner"
  },
  { 
    src: squash, 
    alt: "Squash Drink Menu", 
    title: "Pinaple Squash",
    subtitle: "Fresh Pineapple Squash"
  },
  { 
    src: kbd, 
    alt: "Development Business", 
    title: "Development Business",
    subtitle: "Development Business"
  }
];
---

<Layout title="Galeri - Sagawa Group">
  <div class="flex flex-col min-h-screen">
    <Navbar />
        <main class="flex-1">
          <!-- Gallery Hero Section -->
            <section class="hero-section relative pt-24 pb-32 md:pt-24 md:pb-36 px-4 text-center text-white bg-gradient-to-br from-amber-500 via-orange-500 to-red-500 overflow-hidden">
              <!-- Background decorative elements with updated colors matching contact page -->
              <div class="absolute inset-0 opacity-10">
                <div class="animate-float absolute top-20 left-10 w-16 h-16 bg-gradient-to-br from-white to-amber-100 rounded-full"></div>
                <div class="animate-float delay-700 absolute top-40 right-20 w-12 h-12 bg-gradient-to-br from-amber-200 to-amber-300 rounded-full"></div>
                <div class="animate-float delay-500 absolute bottom-32 left-1/4 w-8 h-8 bg-gradient-to-br from-orange-200 to-orange-300 rounded-full"></div>
                <div class="animate-float delay-300 absolute bottom-20 right-1/3 w-20 h-20 bg-gradient-to-br from-red-200 to-red-300 rounded-full"></div>
                <div class="animate-float delay-200 absolute top-1/2 left-1/3 w-10 h-10 bg-gradient-to-br from-yellow-200 to-amber-200 rounded-full"></div>
              </div>      
              <div class="container mx-auto max-w-4xl relative z-30">
                <h5 class="text-sm sm:text-base text-amber-200 font-semibold uppercase tracking-wider mb-3 animate-fade-in-up">
                    Galeri Kami
                </h5>
                <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white leading-tight animate-fade-in-up animation-delay-200">
                    Galeri Sagawa Group
                </h1>
                <div class="w-24 h-1 bg-gradient-to-r from-amber-200 to-white mx-auto mt-6 rounded animate-fade-in-up animation-delay-400"></div>
                  <p class="text-lg md:text-xl mb-8 pt-6 max-w-3xl mx-auto animate-fade-in-up animation-delay-600 text-amber-100">
                    Koleksi foto dan dokumentasi kegiatan dari berbagai outlet dan mitra Sagawa Group di seluruh Indonesia. 
                    Saksikan bagaimana visi kami terwujud dalam setiap sudut usaha kuliner yang kami kembangkan.
                  </p>
                </div>
                  <!-- White Wave Effect that overlaps hero section -->
                  <div class="absolute bottom-[-1px] left-0 w-full overflow-hidden z-30">
                    <!-- Single White Wave -->
                          <svg class="w-full h-20" viewBox="0 0 1440 70" preserveAspectRatio="none">
                              <path d="M0,70 L0,40 C240,15 480,50 720,45 C960,40 1200,15 1440,25 L1440,70 Z" fill="#FFFFFF"></path>
                          </svg>
                      </div>
                  </section>

      <!-- Gallery Swiper Section with strong connection to wave -->
      <section class="gallery-section pt-12 pb-16 px-4 sm:px-6 lg:px-8 bg-white relative z-10 mt-[-1px]">
        <div class="max-w-7xl mx-auto">
            
            <!-- Dynamic Title and Description -->
            <div class="filter-description justify-center text-center mb-8 sm:mb-12">
              <h3 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-3" id="filter-title">Koleksi Foto Terbaik</h3>
              <p class="text-base sm:text-lg text-gray-600 max-w-2xl mx-auto px-4" id="filter-subtitle">Swipe untuk melihat foto-foto eksklusif dari berbagai outlet kami</p>
            </div>
          </div>

          <!-- Gallery Filter Tabs -->
          <div class="text-center mt-6 sm:mt-8 mb-8 sm:mb-12">
            <!-- Filter Navigation -->
            <div class="flex justify-center mb-6 sm:mb-8 px-4">
              <div class="bg-white rounded-xl sm:rounded-2xl p-1 sm:p-2 shadow-lg border border-gray-200 inline-flex w-full max-w-sm sm:max-w-none sm:w-auto">
                <button class="filter-tab active flex items-center justify-center space-x-1 sm:space-x-2 px-3 sm:px-6 py-2 sm:py-3 rounded-lg sm:rounded-xl text-xs sm:text-sm font-semibold transition-all duration-300 flex-1 sm:flex-none" data-filter="foto">
                  <span>Foto</span>
                </button>
                <button class="filter-tab flex items-center justify-center space-x-1 sm:space-x-2 px-3 sm:px-6 py-2 sm:py-3 rounded-lg sm:rounded-xl text-xs sm:text-sm font-semibold transition-all duration-300 flex-1 sm:flex-none" data-filter="video">
                  <span>Video</span>
                </button>
                <button class="filter-tab flex items-center justify-center space-x-1 sm:space-x-2 px-3 sm:px-6 py-2 sm:py-3 rounded-lg sm:rounded-xl text-xs sm:text-sm font-semibold transition-all duration-300 flex-1 sm:flex-none" data-filter="instagram">
                  <span>Instagram</span>
                </button>
              </div>
            </div>

          <!-- Filter Content Containers -->
          <div class="filter-content">
            <!-- Foto Content -->
            <div class="filter-section active" id="foto-section">
              <div class="gallery-carousel-container mb-8 sm:mb-12">
                <!-- Main Gallery Display -->
                <div class="gallery-main relative px-4 sm:px-0">
                  <div class="gallery-slides" id="gallery-slides">
                    {galleryImages.map((image, index) => (
                      <div class={`gallery-slide ${index === 0 ? 'active' : ''}`} data-index={index}>
                        <div class="relative w-full h-[300px] sm:h-[400px] md:h-[500px] lg:h-[600px] group overflow-hidden rounded-xl sm:rounded-2xl shadow-xl sm:shadow-2xl">
                          <img 
                            src={image.src} 
                            alt={image.alt} 
                            class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105" 
                            loading={index === 0 ? "eager" : "lazy"}
                          />
                          <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent"></div>
                          <div class="absolute bottom-0 left-0 right-0 p-4 sm:p-6 lg:p-8 text-white">
                            <h3 class="text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold mb-1 sm:mb-2">{image.title}</h3>
                            <p class="text-sm sm:text-base lg:text-lg text-white/90">{image.subtitle}</p>
                          </div>
                          
                          <!-- Image Counter -->
                          <div class="absolute top-3 sm:top-4 right-3 sm:right-4 bg-black/50 backdrop-blur-sm text-white px-2 sm:px-3 py-1 rounded-full text-xs sm:text-sm font-medium">
                            <span class="current-number">{index + 1}</span> / {galleryImages.length}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                  
                  <!-- Navigation buttons -->
                  <button class="gallery-nav gallery-prev" id="gallery-prev" aria-label="Previous image">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                  </button>
                  <button class="gallery-nav gallery-next" id="gallery-next" aria-label="Next image">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                  </button>
                  
                  <!-- Pagination dots -->
                  <div class="gallery-pagination" id="gallery-pagination">
                    {galleryImages.map((_, index) => (
                      <button 
                        class={`gallery-dot ${index === 0 ? 'active' : ''}`} 
                        data-index={index}
                        aria-label={`Go to image ${index + 1}`}
                      ></button>
                    ))}
                  </div>
                </div>

                <!-- Thumbnail Gallery -->
                <div class="gallery-thumbs-container mt-8">
                  <div class="gallery-thumbs-wrapper" id="gallery-thumbs-wrapper">
                    {galleryImages.map((image, index) => (
                      <div class={`gallery-thumb ${index === 0 ? 'active' : ''}`} data-index={index}>
                        <img 
                          src={image.src} 
                          alt={image.alt} 
                          class="w-full h-full object-cover cursor-pointer" 
                          loading="lazy"
                        />
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>

            <!-- Video Content -->
            <div class="filter-section" id="video-section">
              <!-- Loading state -->
              <div id="videos-loading" class="text-center py-16">
                <div class="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-3xl p-12 max-w-2xl mx-auto border border-blue-200 shadow-xl">
                  <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
                  <h3 class="text-2xl font-bold text-gray-800 mb-2">Memuat Video...</h3>
                  <p class="text-gray-600">Mengambil video terbaru dari YouTube</p>
                </div>
              </div>

              <!-- Error state -->
              <div id="videos-error" class="text-center py-16 hidden">
                <div class="bg-gradient-to-br from-red-50 to-pink-100 rounded-3xl p-12 max-w-2xl mx-auto border border-red-200 shadow-xl">
                  <h3 class="text-3xl font-bold text-gray-800 mb-4">Gagal Memuat Video</h3>
                  <p class="text-gray-600 mb-6 text-lg">Tidak dapat mengambil video dari YouTube saat ini</p>
                  <button id="retry-videos" class="bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg transition-colors">
                    Coba Lagi
                  </button>
                </div>
              </div>

              <!-- Videos container - optimized for 3 latest videos -->
              <div id="videos-container" class="hidden">
                <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 px-4 max-w-6xl mx-auto">
                  <!-- Videos will be dynamically loaded here (max 3 latest videos) -->
                </div>
              </div>

              <!-- Empty state -->
              <div id="videos-empty" class="text-center py-16 hidden">
                <div class="bg-gradient-to-br from-gray-50 to-blue-50 rounded-3xl p-12 max-w-2xl mx-auto border border-gray-200 shadow-xl">
                  <h3 class="text-3xl font-bold text-gray-800 mb-4">Belum Ada Video</h3>
                  <p class="text-gray-600 mb-6 text-lg">Video YouTube akan muncul di sini setelah Anda mengupload video baru</p>
                </div>
              </div>
            </div>

            <!-- Instagram Feed Content -->
            <div class="filter-section" id="instagram-section">
              <div class="text-center py-16">
                <div class="bg-gradient-to-br from-pink-50 via-purple-50 to-indigo-100 rounded-3xl p-12 max-w-2xl mx-auto border border-pink-200 shadow-xl">
                  <h3 class="text-3xl font-bold text-gray-800 mb-4">Instagram Feed</h3>
                  <p class="text-gray-600 mb-6 text-lg">Feed terbaru dari akun Instagram resmi @sagawagroup</p>
                  <div class="bg-white rounded-xl p-4 text-sm text-purple-600 font-medium shadow-inner">
                    Integrasi Instagram feed akan segera tersedia
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Additional Info Section -->
          <div class="text-center mt-6 sm:mt-6 md:mb-0">
            <div class="bg-white rounded-2xl shadow-lg p-8 mx-auto max-w-4xl">
              <h2 class="text-3xl font-bold text-gray-800 mb-4">Tentang Galeri Kami</h2>
              <p class="text-gray-600 text-lg leading-relaxed">
                Galeri Sagawa Group menampilkan koleksi foto-foto terbaik dari berbagai outlet dan konsep bisnis kami. 
                Dari store di mall hingga gerobak makanan, setiap lokasi mencerminkan standar kualitas dan pelayanan 
                terbaik Sagawa Group dalam industri food & beverage.
              </p>
            </div>
          </div>
        </div>
      </section>
    </main>
  <Footer />
</Layout>

<!-- Custom Gallery Slider Script -->
<script>
  // @ts-nocheck
  document.addEventListener('DOMContentLoaded', function() {
    // Gallery slider variables
    let currentSlide = 0;
    let totalSlides = 0;
    let autoplayInterval = null;
    let isTransitioning = false;

    // YouTube API configuration - sekarang menggunakan backend API
    const BACKEND_API_BASE = 'http://localhost:3000';
    
    let youtubeVideos = [];
    let videosCache = null;
    let lastFetchTime = 0;

    // Catatan: Backend dikonfigurasi untuk hanya mengambil 3 video terbaru
    // Video lama akan otomatis digantikan dengan video baru yang diupload
    // Pengurutan berdasarkan tanggal upload (terbaru ke terlama)

    // Fungsi untuk mengecek dan menggunakan cache (tetap di frontend untuk UX yang lebih baik)
    function getCachedVideos() {
      try {
        const cached = localStorage.getItem('youtube_videos_cache');
        const cacheTime = localStorage.getItem('youtube_videos_cache_time');
        
        if (cached && cacheTime) {
          const timeDiff = Date.now() - parseInt(cacheTime);
          // Cache 5 menit (300000 ms)
          if (timeDiff < 300000) {
            return JSON.parse(cached);
          }
        }
      } catch (error) {
        console.log('Cache error:', error);
      }
      return null;
    }

    // Fungsi untuk menyimpan ke cache
    function setCachedVideos(videos) {
      try {
        localStorage.setItem('youtube_videos_cache', JSON.stringify(videos));
        localStorage.setItem('youtube_videos_cache_time', Date.now().toString());
      } catch (error) {
        console.log('Cache save error:', error);
      }
    }

    // YouTube API Functions - menggunakan backend API
    async function fetchYouTubeVideos(forceRefresh = false) {
      try {
        showLoadingState();

        // Cek cache dulu jika tidak force refresh
        if (!forceRefresh) {
          const cachedVideos = getCachedVideos();
          if (cachedVideos) {
            console.log('Using cached YouTube videos');
            youtubeVideos = cachedVideos;
            if (youtubeVideos.length === 0) {
              showEmptyState();
            } else {
              displayYouTubeVideos(youtubeVideos, true); // true = from cache
            }
            return;
          }
        }
        
        // Fetch dari backend API
        const refreshParam = forceRefresh ? '?refresh=true' : '';
        const apiUrl = `${BACKEND_API_BASE}/api/youtube/videos${refreshParam}`;
        
        console.log('Fetching from backend API:', apiUrl);
        const response = await fetch(apiUrl);
        const data = await response.json();

        if (!response.ok || !data.success) {
          throw new Error(data.message || `HTTP ${response.status}: ${response.statusText}`);
        }

        youtubeVideos = data.data || [];
        
        // Simpan ke cache hanya jika tidak dari cache backend
        if (!data.fromCache) {
          setCachedVideos(youtubeVideos);
        }
        
        if (youtubeVideos.length === 0) {
          showEmptyState();
        } else {
          displayYouTubeVideos(youtubeVideos, data.fromCache);
        }
        
      } catch (error) {
        console.error('Error fetching YouTube videos:', error);
        
        // Coba gunakan cache lama jika ada error
        const cachedVideos = getCachedVideos();
        if (cachedVideos && cachedVideos.length > 0) {
          console.log('Using fallback cache due to error');
          youtubeVideos = cachedVideos;
          displayYouTubeVideos(youtubeVideos, true);
        } else {
          showErrorState(error.message);
        }
      }
    }

    function showLoadingState() {
      document.getElementById('videos-loading').classList.remove('hidden');
      document.getElementById('videos-error').classList.add('hidden');
      document.getElementById('videos-container').classList.add('hidden');
      document.getElementById('videos-empty').classList.add('hidden');
    }

    function showErrorState(errorMessage = 'Tidak dapat mengambil video dari YouTube saat ini') {
      const errorDiv = document.getElementById('videos-error');
      const errorContainer = errorDiv.querySelector('.bg-gradient-to-br');
      
      // Update error message
      const errorText = errorContainer.querySelector('p');
      if (errorText) {
        errorText.textContent = errorMessage;
      }
      
      document.getElementById('videos-loading').classList.add('hidden');
      document.getElementById('videos-error').classList.remove('hidden');
      document.getElementById('videos-container').classList.add('hidden');
      document.getElementById('videos-empty').classList.add('hidden');
    }



    function showEmptyState() {
      document.getElementById('videos-loading').classList.add('hidden');
      document.getElementById('videos-error').classList.add('hidden');
      document.getElementById('videos-container').classList.add('hidden');
      document.getElementById('videos-empty').classList.remove('hidden');
    }

    function displayYouTubeVideos(videos, fromCache = false) {
      const container = document.querySelector('#videos-container .grid');
      
      if (!container) return;
      
      container.innerHTML = '';
      
      // Tambahkan informasi tentang 3 video terbaru
      const infoIndicator = document.createElement('div');
      infoIndicator.className = 'col-span-full text-center mb-6';
      const cacheText = fromCache ? ' (dari cache)' : '';
      infoIndicator.innerHTML = ` 
      `;
      container.appendChild(infoIndicator);
      
      videos.forEach((video, index) => {
        // Data dari backend sudah diproses, jadi kita langsung gunakan
        if (!video.id) return;

        const videoCard = createVideoCard({
          id: video.id,
          title: video.title,
          description: video.description,
          thumbnail: video.thumbnail,
          publishedAt: video.publishedAt,
          channelTitle: video.channelTitle,
          url: video.url,
          isShorts: video.isShorts || false,
          duration: video.duration || ''
        }, index);
        
        container.appendChild(videoCard);
      });

      document.getElementById('videos-loading').classList.add('hidden');
      document.getElementById('videos-error').classList.add('hidden');
      document.getElementById('videos-container').classList.remove('hidden');
      document.getElementById('videos-empty').classList.add('hidden');
    }

    function createVideoCard(video, index) {
      const card = document.createElement('div');
      card.className = 'video-card group cursor-pointer transform transition-all duration-300 hover:scale-105 hover:shadow-xl';
      card.style.animationDelay = `${index * 0.1}s`;
      
      const publishDate = new Date(video.publishedAt).toLocaleDateString('id-ID', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });

      // Label untuk shorts atau video biasa
      const contentTypeLabel = video.isShorts ? 
        '<span class="inline-block bg-red-500 text-white text-xs px-2 py-1 rounded-full font-medium">SHORTS</span>' : 
        '<span class="inline-block bg-blue-500 text-white text-xs px-2 py-1 rounded-full font-medium">VIDEO</span>';
      
      // Format durasi jika ada
      const durationText = video.duration ? formatDuration(video.duration) : '';
      const durationDisplay = durationText ? 
        `<span class="absolute bottom-2 right-2 bg-black/75 text-white text-xs px-1.5 py-0.5 rounded">${durationText}</span>` : '';

      card.innerHTML = `
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden border border-gray-200 h-full flex flex-col">
          <!-- Thumbnail -->
          <div class="relative aspect-video overflow-hidden">
            <img 
              src="${video.thumbnail}" 
              alt="${video.title}"
              class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
              loading="lazy"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            
            <!-- Play button -->
            <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
              <div class="bg-red-600 text-white rounded-full p-4 transform scale-0 group-hover:scale-100 transition-transform duration-300">
                <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>
            </div>
            
            <!-- Content Type Label (Shorts/Video) -->
            <div class="absolute top-3 left-3">
              ${contentTypeLabel}
            </div>
            
            <!-- Duration -->
            ${durationDisplay}
            
            <!-- YouTube logo -->
            <div class="absolute top-3 right-3 bg-red-600 text-white px-2 py-1 rounded text-xs font-bold">
              YOUTUBE
            </div>
          </div>
          
          <!-- Content -->
          <div class="p-4 flex-1 flex flex-col">
            <h3 class="font-bold text-gray-800 text-sm lg:text-base mb-2 line-clamp-2 group-hover:text-red-600 transition-colors">
              ${video.title}
            </h3>
            
            <p class="text-gray-600 text-xs lg:text-sm mb-3 line-clamp-3 flex-1">
              ${video.description.substring(0, 120)}${video.description.length > 120 ? '...' : ''}
            </p>
            
            <div class="flex items-center justify-between text-xs text-gray-500 mt-auto">
              <span class="font-medium">${video.channelTitle}</span>
              <span>${publishDate}</span>
            </div>
          </div>
        </div>
      `;

      // Add click event to open YouTube video
      card.addEventListener('click', function() {
        openYouTubeVideo(video.id);
      });

      return card;
    }

    function formatDuration(isoDuration) {
      // Parse ISO 8601 duration format (PT1M30S = 1 minute 30 seconds)
      const match = isoDuration.match(/PT(?:(\d+)M)?(?:(\d+)S)?/);
      
      if (!match) return '';
      
      const minutes = parseInt(match[1] || '0', 10);
      const seconds = parseInt(match[2] || '0', 10);
      
      if (minutes === 0) {
        return `${seconds}s`;
      } else if (seconds === 0) {
        return `${minutes}m`;
      } else {
        return `${minutes}:${seconds.toString().padStart(2, '0')}`;
      }
    }

    function openYouTubeVideo(videoId) {
      // Data video dari backend sudah memiliki field 'url' yang lengkap
      // Tapi untuk backward compatibility, kita tetap buat URL jika perlu
      const url = videoId.startsWith('http') ? videoId : `https://www.youtube.com/watch?v=${videoId}`;
      
      // Option 1: Open in new tab
      window.open(url, '_blank');
      
      // Option 2: Embed in modal (uncomment if you prefer modal)
      // showVideoModal(videoId);
    }

    function showVideoModal(videoId) {
      // Create modal for embedded YouTube video
      const modal = document.createElement('div');
      modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75 p-4';
      modal.innerHTML = `
        <div class="relative bg-white rounded-2xl overflow-hidden max-w-4xl w-full max-h-[90vh]">
          <button class="absolute top-4 right-4 z-10 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-75 transition-colors" onclick="this.closest('.fixed').remove()">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          <div class="aspect-video">
            <iframe 
              src="https://www.youtube.com/embed/${videoId}?autoplay=1" 
              class="w-full h-full" 
              frameborder="0" 
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
              allowfullscreen>
            </iframe>
          </div>
        </div>
      `;
      
      document.body.appendChild(modal);
      
      // Close modal when clicking outside
      modal.addEventListener('click', function(e) {
        if (e.target === modal) {
          modal.remove();
        }
      });
    }

    // Filter functionality
    function initFilters() {
      const filterTabs = document.querySelectorAll('.filter-tab');
      const filterSections = document.querySelectorAll('.filter-section');
      const filterTitle = document.getElementById('filter-title');
      const filterSubtitle = document.getElementById('filter-subtitle');

      const filterData = {
        foto: {
          title: 'Koleksi Foto Terbaik',
          subtitle: 'Swipe untuk melihat foto-foto eksklusif dari berbagai outlet kami'
        },
        video: {
          title: '3 Video YouTube Terbaru',
          subtitle: 'Video dan Shorts terbaru dari 7 hari terakhir yang diperbarui otomatis setiap 5 menit'
        },
        instagram: {
          title: 'Instagram Feed',
          subtitle: 'Konten terbaru dari media sosial kami'
        }
      };

      filterTabs.forEach(function(tab) {
        tab.addEventListener('click', function() {
          const filter = this.getAttribute('data-filter');
          
          // Remove active class from all tabs and sections
          filterTabs.forEach(function(t) { t.classList.remove('active'); });
          filterSections.forEach(function(s) { s.classList.remove('active'); });
          
          // Add active class to clicked tab and corresponding section
          this.classList.add('active');
          const targetSection = document.getElementById(filter + '-section');
          if (targetSection) {
            targetSection.classList.add('active');
          }
          
          // Update title and subtitle
          if (filterData[filter]) {
            filterTitle.textContent = filterData[filter].title;
            filterSubtitle.textContent = filterData[filter].subtitle;
          }
          
          // Handle different filter actions
          if (filter === 'foto') {
            // Restart slider if foto filter is selected
            setTimeout(function() {
              initSlider();
            }, 300);
          } else if (filter === 'video') {
            // Load YouTube videos if video filter is selected
            if (youtubeVideos.length === 0) {
              setTimeout(function() {
                fetchYouTubeVideos();
              }, 300);
            }
          }
        });
      });
    }

    // Initialize slider
    function initSlider() {
      const slides = document.querySelectorAll('.gallery-slide');
      totalSlides = slides.length;
      
      if (totalSlides === 0) return;
      
      // Reset to first slide
      currentSlide = 0;
      updateSlide(0);
      bindEvents();
      startAutoplay();
    }

    // Bind all event listeners
    function bindEvents() {
      // Navigation buttons
      const prevBtn = document.getElementById('gallery-prev');
      const nextBtn = document.getElementById('gallery-next');
      
      if (prevBtn) {
        // Remove existing listeners
        prevBtn.replaceWith(prevBtn.cloneNode(true));
        document.getElementById('gallery-prev').addEventListener('click', prevSlide);
      }
      if (nextBtn) {
        // Remove existing listeners
        nextBtn.replaceWith(nextBtn.cloneNode(true));
        document.getElementById('gallery-next').addEventListener('click', nextSlide);
      }

      // Pagination dots
      const dots = document.querySelectorAll('.gallery-dot');
      dots.forEach(function(dot, index) {
        // Remove existing listeners
        const newDot = dot.cloneNode(true);
        dot.parentNode.replaceChild(newDot, dot);
        newDot.addEventListener('click', function() { goToSlide(index); });
      });

      // Thumbnail clicks
      const thumbs = document.querySelectorAll('.gallery-thumb');
      thumbs.forEach(function(thumb, index) {
        // Remove existing listeners
        const newThumb = thumb.cloneNode(true);
        thumb.parentNode.replaceChild(newThumb, thumb);
        newThumb.addEventListener('click', function() { goToSlide(index); });
      });

      // Touch/swipe support
      const slidesContainer = document.getElementById('gallery-slides');
      if (slidesContainer) {
        let touchStartX = 0;
        let touchEndX = 0;

        // Remove existing listeners by replacing element
        const newSlidesContainer = slidesContainer.cloneNode(true);
        slidesContainer.parentNode.replaceChild(newSlidesContainer, slidesContainer);

        const slides = newSlidesContainer;
        slides.addEventListener('touchstart', function(e) {
          touchStartX = e.changedTouches[0].screenX;
        });

        slides.addEventListener('touchend', function(e) {
          touchEndX = e.changedTouches[0].screenX;
          handleSwipe(touchStartX, touchEndX);
        });

        // Mouse drag support
        let isDragging = false;
        let startX = 0;

        slides.addEventListener('mousedown', function(e) {
          isDragging = true;
          startX = e.clientX;
          slides.style.cursor = 'grabbing';
        });

        slides.addEventListener('mousemove', function(e) {
          if (!isDragging) return;
          e.preventDefault();
        });

        slides.addEventListener('mouseup', function(e) {
          if (!isDragging) return;
          isDragging = false;
          slides.style.cursor = 'grab';
          
          const endX = e.clientX;
          const diff = startX - endX;
          
          if (Math.abs(diff) > 50) {
            if (diff > 0) {
              nextSlide();
            } else {
              prevSlide();
            }
          }
        });

        slides.addEventListener('mouseleave', function() {
          isDragging = false;
          slides.style.cursor = 'grab';
        });
      }

      // Pause autoplay on hover
      const galleryMain = document.querySelector('.gallery-main');
      if (galleryMain) {
        galleryMain.addEventListener('mouseenter', pauseAutoplay);
        galleryMain.addEventListener('mouseleave', startAutoplay);
      }
    }

    // Handle swipe gestures
    function handleSwipe(startX, endX) {
      const swipeThreshold = 50;
      const diff = startX - endX;
      
      if (Math.abs(diff) > swipeThreshold) {
        if (diff > 0) {
          nextSlide();
        } else {
          prevSlide();
        }
      }
    }

    // Navigate to next slide
    function nextSlide() {
      if (isTransitioning) return;
      const next = (currentSlide + 1) % totalSlides;
      goToSlide(next);
    }

    // Navigate to previous slide
    function prevSlide() {
      if (isTransitioning) return;
      const prev = (currentSlide - 1 + totalSlides) % totalSlides;
      goToSlide(prev);
    }

    // Go to specific slide
    function goToSlide(index) {
      if (isTransitioning || index === currentSlide) return;
      
      isTransitioning = true;
      currentSlide = index;
      updateSlide(index);
      
      setTimeout(function() {
        isTransitioning = false;
      }, 600);
    }

    // Update slide display
    function updateSlide(index) {
      // Update slides
      const slides = document.querySelectorAll('.gallery-slide');
      slides.forEach(function(slide, i) {
        slide.classList.remove('active', 'prev', 'next');
        if (i === index) {
          slide.classList.add('active');
        } else if (i === (index - 1 + totalSlides) % totalSlides) {
          slide.classList.add('prev');
        } else if (i === (index + 1) % totalSlides) {
          slide.classList.add('next');
        }
      });

      // Update pagination dots
      const dots = document.querySelectorAll('.gallery-dot');
      dots.forEach(function(dot, i) {
        if (i === index) {
          dot.classList.add('active');
        } else {
          dot.classList.remove('active');
        }
      });

      // Update thumbnails
      const thumbs = document.querySelectorAll('.gallery-thumb');
      thumbs.forEach(function(thumb, i) {
        if (i === index) {
          thumb.classList.add('active');
        } else {
          thumb.classList.remove('active');
        }
      });

      // Update counter
      const counters = document.querySelectorAll('.current-number');
      counters.forEach(function(counter) {
        counter.textContent = String(index + 1);
      });
    }

    // Start autoplay
    function startAutoplay() {
      pauseAutoplay();
      autoplayInterval = setInterval(function() {
        nextSlide();
      }, 5000);
    }

    // Pause autoplay
    function pauseAutoplay() {
      if (autoplayInterval) {
        clearInterval(autoplayInterval);
        autoplayInterval = null;
      }
    }

    // Initialize everything
    initFilters();
    initSlider();

    // Add retry button event listener
    const retryBtn = document.getElementById('retry-videos');
    if (retryBtn) {
      retryBtn.addEventListener('click', () => fetchYouTubeVideos(true)); // Force refresh
    }

    // Add refresh functionality for development/testing
    if (window.location.hostname === 'localhost' || window.location.hostname.includes('dev')) {
      console.log('Development mode: YouTube cache can be cleared with clearYouTubeCache()');
      window.clearYouTubeCache = function() {
        localStorage.removeItem('youtube_videos_cache');
        localStorage.removeItem('youtube_videos_cache_time');
        console.log('YouTube cache cleared');
      };
    }

    // Show instruction tooltip
    const tooltip = document.createElement('div');
    tooltip.className = 'fixed bottom-4 left-4 bg-black/80 text-white px-4 py-2 rounded-lg text-sm z-50 opacity-0 transition-opacity duration-300';
    tooltip.innerHTML = '← → keys, click arrows, or swipe to navigate';
    document.body.appendChild(tooltip);

    setTimeout(function() {
      tooltip.style.opacity = '1';
      setTimeout(function() {
        tooltip.style.opacity = '0';
      }, 4000);
    }, 1000);
  });
</script>

<style>
  .navbar {
		position: sticky;
		top: 0;
		z-index: 50;
	}

  .gallery-section {
    position: relative;
    z-index: 10;
  }

  /* Hero Section Styles */
  .hero-section {
    background: linear-gradient(135deg, 
        rgba(245, 158, 11, 0.9) 0%, 
        rgba(249, 115, 22, 0.8) 25%,
        rgba(239, 68, 68, 0.8) 50%,
        rgba(245, 158, 11, 0.9) 75%,
        rgba(217, 119, 6, 0.9) 100%
    );
  }

  /* Animations */
  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes float-delay {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
  }

  @keyframes float-slow {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-8px);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out forwards;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-float-delay {
    animation: float-delay 4s ease-in-out infinite;
    animation-delay: 0.5s;
  }

  .animate-float-slow {
    animation: float-slow 5s ease-in-out infinite;
    animation-delay: 1s;
  }

  /* Hero Section Styles - matching about page */
  .hero-section {
    background: linear-gradient(135deg, 
      rgba(245, 158, 11, 0.9) 0%, 
      rgba(249, 115, 22, 0.8) 25%,
      rgba(239, 68, 68, 0.8) 50%,
      rgba(245, 158, 11, 0.9) 75%,
      rgba(217, 119, 6, 0.9) 100%
    );
  }

  /* Animation delay classes */
  .animation-delay-200 { animation-delay: 0.2s; }
  .animation-delay-400 { animation-delay: 0.4s; }
  .animation-delay-600 { animation-delay: 0.6s; }

  /* Delay classes */
  .delay-100 { animation-delay: 0.1s; }
  .delay-200 { animation-delay: 0.2s; }
  .delay-300 { animation-delay: 0.3s; }
  .delay-400 { animation-delay: 0.4s; }
  .delay-500 { animation-delay: 0.5s; }
  .delay-600 { animation-delay: 0.6s; }
  .delay-700 { animation-delay: 0.7s; }

  /* Custom Gallery Slider Styles */
  .gallery-carousel-container {
    max-width: 100%;
    margin: 0 auto;
  }

  /* Filter Tabs Styling */
  .filter-tab {
    background: transparent;
    border: none;
    color: #64748b;
    cursor: pointer;
    position: relative;
    margin: 0 2px;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .filter-tab:hover {
    background: rgba(249, 115, 22, 0.08);
    color: #f97316;
    transform: translateY(-1px);
  }

  .filter-tab.active {
    background: linear-gradient(135deg, #f97316 0%, #ef4444 100%);
    color: white;
    box-shadow: 0 8px 25px -5px rgba(249, 115, 22, 0.4);
    transform: translateY(-1px);
  }

  .filter-tab.active:hover {
    background: linear-gradient(135deg, #ea580c 0%, #dc2626 100%);
    box-shadow: 0 12px 35px -5px rgba(249, 115, 22, 0.5);
    transform: translateY(-2px);
  }

  /* Filter tab icons animation */
  .filter-tab span:first-child {
    transition: transform 0.3s ease;
  }

  .filter-tab:hover span:first-child,
  .filter-tab.active span:first-child {
    transform: scale(1.1);
  }

  /* Filter Content */
  .filter-content {
    position: relative;
    min-height: 600px;
  }

  .filter-section {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(30px) scale(0.98);
  }

  .filter-section.active {
    opacity: 1;
    visibility: visible;
    position: relative;
    transform: translateY(0) scale(1);
  }

  /* Smooth title/subtitle transitions */
  .filter-description h3,
  .filter-description p {
    transition: all 0.4s ease;
  }

  /* Enhanced filter container styling */
  .filter-tab:not(.active)::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 0.75rem;
    background: linear-gradient(135deg, #f97316, #ef4444);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .filter-tab:not(.active):hover::before {
    opacity: 0.1;
  }

  .gallery-main {
    position: relative;
    width: 100%;
    height: 600px;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    background: #000;
  }

  .gallery-slides {
    position: relative;
    width: 100%;
    height: 100%;
    cursor: grab;
  }

  .gallery-slides:active {
    cursor: grabbing;
  }

  .gallery-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1;
  }

  .gallery-slide.active {
    opacity: 1;
    transform: translateX(0);
    z-index: 3;
  }

  .gallery-slide.prev {
    transform: translateX(-100%);
    z-index: 2;
  }

  .gallery-slide.next {
    transform: translateX(100%);
    z-index: 2;
  }

  /* Navigation Buttons */
  .gallery-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 50px;
    height: 50px;
    background: rgba(249, 115, 22, 0.8);
    border: none;
    border-radius: 50%;
    color: white;
    cursor: pointer;
    z-index: 10;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(4px);
  }

  .gallery-nav:hover {
    background: rgba(249, 115, 22, 1);
    transform: translateY(-50%) scale(1.1);
  }

  .gallery-prev {
    left: 10px;
  }

  .gallery-next {
    right: 10px;
  }

  /* Pagination Dots */
  .gallery-pagination {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 6px;
    z-index: 10;
    background: rgba(0, 0, 0, 0.3);
    padding: 8px 12px;
    border-radius: 20px;
    backdrop-filter: blur(4px);
  }

  .gallery-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    border: none;
    background: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .gallery-dot:hover,
  .gallery-dot.active {
    background: rgba(249, 115, 22, 1);
    transform: scale(1.2);
  }

  /* Thumbnail Gallery */
  .gallery-thumbs-container {
    padding: 0 20px;
    display: flex;
    justify-content: center;
  }

  .gallery-thumbs-wrapper {
    display: flex;
    gap: 10px;
    overflow-x: auto;
    padding: 10px 0;
    scroll-behavior: smooth;
  }

  .gallery-thumbs-wrapper::-webkit-scrollbar {
    height: 6px;
  }

  .gallery-thumbs-wrapper::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }

  .gallery-thumbs-wrapper::-webkit-scrollbar-thumb {
    background: rgba(249, 115, 22, 0.5);
    border-radius: 3px;
  }

  .gallery-thumbs-wrapper::-webkit-scrollbar-thumb:hover {
    background: rgba(249, 115, 22, 0.8);
  }

  .gallery-thumb {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    border-radius: 12px;
    overflow: hidden;
    opacity: 0.6;
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  .gallery-thumb:hover {
    opacity: 0.8;
    transform: scale(1.05);
  }

  .gallery-thumb.active {
    opacity: 1;
    border-color: rgba(249, 115, 22, 1);
    transform: scale(1.1);
  }

  /* YouTube Video Cards Styling */
  .video-card {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(30px);
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .video-card:hover {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }

  /* Line clamp utility classes */
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }

  /* Loading spinner */
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  /* Video grid responsive */
  #videos-container .grid {
    gap: 1.5rem;
  }

  /* Cache indicator styling */
  .col-span-full {
    grid-column: 1 / -1;
  }

  /* Error state code styling */
  #videos-error code {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-family: 'Courier New', monospace;
  }

  /* Responsive layout optimized for max 3 videos */
  @media (max-width: 768px) {
    #videos-container .grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 0 1rem;
    }
    
    .video-card .bg-white {
      border-radius: 1rem;
    }
    
    .video-card h3 {
      font-size: 0.875rem;
      line-height: 1.25rem;
    }
    
    .video-card p {
      font-size: 0.75rem;
    }

    .videos-info-banner {
      margin: 0 1rem 1.5rem 1rem;
      padding: 0.75rem;
    }

    .videos-info-banner span {
      font-size: 0.75rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1199px) {
    #videos-container .grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 2rem;
    }
    
    /* Center single video if only 1 video */
    #videos-container .grid .video-card:only-child {
      grid-column: 1 / -1;
      max-width: 400px;
      margin: 0 auto;
    }
  }

  @media (min-width: 1200px) {
    #videos-container .grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
    }
    
    /* Center videos if less than 3 */
    #videos-container .grid:has(.video-card:nth-child(2):last-child) {
      max-width: 800px;
      margin: 0 auto;
    }
    
    #videos-container .grid .video-card:only-child {
      grid-column: 1 / -1;
      max-width: 400px;
      margin: 0 auto;
    }
  }

  /* Enhanced video card hover effects */
  .video-card .absolute.inset-0.flex {
    backdrop-filter: blur(2px);
  }

  .video-card:hover .aspect-video img {
    filter: brightness(0.8);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .gallery-main {
      height: 350px;
    }
    
    .gallery-nav {
      width: 36px;
      height: 36px;
    }
    
    .gallery-prev {
      left: 8px;
    }
    
    .gallery-next {
      right: 8px;
    }
    
    .gallery-pagination {
      bottom: 10px;
      padding: 6px 10px;
      gap: 4px;
    }
    
    .gallery-dot {
      width: 8px;
      height: 8px;
    }
    
    .gallery-thumbs-container {
      padding: 0 10px;
    }
    
    .gallery-thumb {
      width: 60px;
      height: 60px;
    }

    /* Mobile filter tabs - improved */
    .filter-tab {
      padding: 0.5rem 0.75rem;
      font-size: 0.75rem;
      min-width: 0;
    }

    /* Mobile filter content - improved */
    #video-section .bg-gradient-to-br,
    #instagram-section .bg-gradient-to-br {
      padding: 1.5rem;
      margin: 0 0.5rem;
      border-radius: 1rem;
    }

    #video-section h3,
    #instagram-section h3 {
      font-size: 1.25rem;
    }

    #video-section p,
    #instagram-section p {
      font-size: 0.875rem;
    }
  }

  @media (max-width: 640px) {
    .gallery-main {
      height: 300px;
    }

    .gallery-nav {
      width: 32px;
      height: 32px;
    }

    .gallery-nav svg {
      width: 16px;
      height: 16px;
    }

    .gallery-pagination {
      bottom: 8px;
      padding: 4px 8px;
      gap: 3px;
    }

    .gallery-dot {
      width: 6px;
      height: 6px;
    }

    .filter-tab {
      padding: 0.375rem 0.5rem;
      font-size: 0.6875rem;
    }

    .filter-description h3 {
      font-size: 1.5rem;
    }

    .filter-description p {
      font-size: 0.875rem;
      padding: 0 1rem;
    }

    #video-section .bg-gradient-to-br,
    #instagram-section .bg-gradient-to-br {
      padding: 1rem;
      margin: 0 0.25rem;
    }
  }

  @media (max-width: 480px) {
    .gallery-main {
      height: 250px;
    }

    .filter-description h3 {
      font-size: 1.25rem;
    }

    .filter-description p {
      font-size: 0.8125rem;
    }
  }
</style>