---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Login">

<style>
    .animated-bg {
      background: linear-gradient(-45deg, #ffedd5, #fed7aa, #fdba74, #fb923c, #f97316, #ea580c, #dc2626, #b91c1c);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
    }
    
    @keyframes gradient {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }
    
    .floating-shape {
      position: absolute;
      border-radius: 50%;
      opacity: 0.7;
      filter: blur(20px);
      z-index: 0;
    }
    
    .shape-1 {
      width: 200px;
      height: 200px;
      background: linear-gradient(45deg, #f97316, #ea580c);
      top: 10%;
      left: 5%;
      animation: float 12s ease-in-out infinite;
    }
    
    .shape-2 {
      width: 150px;
      height: 150px;
      background: linear-gradient(45deg, #fb923c, #f97316);
      bottom: 15%;
      right: 10%;
      animation: float 10s ease-in-out infinite;
    }
    
    .shape-3 {
      width: 100px;
      height: 100px;
      background: linear-gradient(45deg, #ffedd5, #fed7aa);
      top: 40%;
      right: 20%;
      animation: float 8s ease-in-out infinite;
    }
    
    @keyframes float {
      0% {
        transform: translate(0, 0) rotate(0deg);
      }
      50% {
        transform: translate(20px, 20px) rotate(180deg);
      }
      100% {
        transform: translate(0, 0) rotate(360deg);
      }
    }
  </style>

  <main class="min-h-screen flex items-center justify-center animated-bg relative overflow-hidden p-4">
    <!-- Floating Shapes -->
    <div class="floating-shape shape-1"></div>
    <div class="floating-shape shape-2"></div>
    <div class="floating-shape shape-3"></div>
    
    <div class="w-full max-w-md bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl p-8 sm:p-10 flex flex-col gap-6 transition-all duration-300 hover:shadow-2xl relative z-10">
      <!-- Logo and Title -->
      <div class="flex flex-col items-center justify-center mb-2">
        <img src="/src/assets/img/sagawa_logo.svg" alt="Sagawa Logo" class="w-32 h-auto mb-4" />
        <h1 class="text-3xl font-bold text-center text-amber-600">Selamat Datang</h1>
        <p class="text-gray-500 text-center mt-2">Masuk ke akun Anda untuk melanjutkan</p>
      </div>
      
      <!-- Error/Success Messages -->
      <div id="error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative">
        <span id="error-text"></span>
      </div>
      <div id="success-message" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg relative">
        <span id="success-text"></span>
      </div>
      
      <form id="login-form" class="flex flex-col gap-5">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Email atau No. Telp</label>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
              </svg>
            </div>
            <input 
              id="email" 
              type="text" 
              placeholder="Masukkan email atau no. telp" 
              class="w-full pl-10 pr-4 py-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition" 
              required 
            />
          </div>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <input 
              id="password" 
              type="password" 
              placeholder="Masukkan password" 
              class="w-full pl-10 pr-12 py-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition" 
              required 
            />
            <button 
              type="button" 
              id="togglePassword" 
              class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-amber-600 focus:outline-none transition-colors"
            >
              <svg id="eyeOpen" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
              </svg>
              <svg id="eyeClosed" class="w-5 h-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88"></path>
              </svg>
            </button>
          </div>
        </div>
        
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input 
              id="remember-me" 
              type="checkbox" 
              class="h-4 w-4 text-amber-600 focus:ring-amber-500 border-gray-300 rounded"
            />
            <label for="remember-me" class="ml-2 block text-sm text-gray-700">
              Ingat saya
            </label>
          </div>
          <div class="text-sm">
            <a href="#" class="font-medium text-amber-600 hover:text-amber-500 transition-colors">
              Lupa password?
            </a>
          </div>
        </div>
        
        <button 
          id="login-btn" 
          type="submit" 
          class="w-full py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-xl shadow-lg hover:from-amber-600 hover:to-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-all transform hover:-translate-y-0.5"
        >
          <span id="login-text" class="flex items-center justify-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
            </svg>
            Masuk
          </span>
          <span id="login-loading" class="hidden flex items-center justify-center">
            <svg class="animate-spin -ml-1 mr-2 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Memproses...
          </span>
        </button>
      </form>
      
      <div class="mt-4 text-center">
        <p class="text-sm text-gray-600">
          Belum punya akun? 
          <a href="/register" class="font-medium text-amber-600 hover:text-amber-500 transition-colors">
            Daftar sekarang
          </a>
        </p>
      </div>
    </div>
  </main>

  <script>
    // API URL configuration
    const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:4000';

    document.addEventListener('DOMContentLoaded', function() {
      const loginForm = document.getElementById('login-form');
      const emailInput = document.getElementById('email') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const loginBtn = document.getElementById('login-btn') as HTMLButtonElement;
      const loginText = document.getElementById('login-text');
      const loginLoading = document.getElementById('login-loading');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      const successMessage = document.getElementById('success-message');
      const successText = document.getElementById('success-text');
      const togglePasswordBtn = document.getElementById('togglePassword');
      const eyeOpen = document.getElementById('eyeOpen');
      const eyeClosed = document.getElementById('eyeClosed');

      // Check if user is already logged in
      if (typeof window !== 'undefined') {
        const token = localStorage.getItem('mitraToken');
        const user = localStorage.getItem('mitraUser');
        
        if (token && user) {
          window.location.href = '/user/dashboard';
          return;
        }
      }

      function showError(message: string) {
        if (errorMessage && errorText) {
          errorText.textContent = message;
          errorMessage.classList.remove('hidden');
          successMessage?.classList.add('hidden');
        }
      }

      function showSuccess(message: string) {
        if (successMessage && successText) {
          successText.textContent = message;
          successMessage.classList.remove('hidden');
          errorMessage?.classList.add('hidden');
        }
      }

      function hideMessages() {
        errorMessage?.classList.add('hidden');
        successMessage?.classList.add('hidden');
      }

      function setLoading(isLoading: boolean) {
        if (loginBtn && loginText && loginLoading) {
          loginBtn.disabled = isLoading;
          if (isLoading) {
            loginText.classList.add('hidden');
            loginLoading.classList.remove('hidden');
            loginBtn.classList.add('opacity-75');
          } else {
            loginText.classList.remove('hidden');
            loginLoading.classList.add('hidden');
            loginBtn.classList.remove('opacity-75');
          }
        }
      }

      if (loginForm) {
        loginForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          if (!emailInput || !passwordInput) return;
          
          const email = emailInput.value.trim();
          const password = passwordInput.value.trim();

          if (!email || !password) {
            showError('Email dan password harus diisi!');
            return;
          }

          setLoading(true);
          hideMessages();

          try {
            const response = await fetch(`${API_URL}/api/auth/login`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                email: email,
                password: password
              }),
            });

            const result = await response.json();

            if (response.ok && result.success) {
              // Login berhasil
              showSuccess('Login berhasil! Mengalihkan ke dashboard...');
              
              // Simpan data ke localStorage
              localStorage.setItem('mitraToken', result.data.token);
              localStorage.setItem('mitraUser', JSON.stringify(result.data.user));
              
              // Redirect ke dashboard setelah delay singkat
              setTimeout(() => {
                window.location.href = '/user/dashboard';
              }, 1000);

            } else {
              // Login gagal
              showError(result.error || 'Login gagal. Periksa email dan password Anda.');
            }

          } catch (error) {
            console.error('Login error:', error);
            showError('Terjadi kesalahan saat login. Silakan coba lagi.');
          } finally {
            setLoading(false);
          }
        });
      }

      // Password visibility toggle
      if (togglePasswordBtn && passwordInput && eyeOpen && eyeClosed) {
        togglePasswordBtn.addEventListener('click', function() {
          const isPassword = passwordInput.type === 'password';
          passwordInput.type = isPassword ? 'text' : 'password';
          
          if (isPassword) {
            eyeOpen.classList.add('hidden');
            eyeClosed.classList.remove('hidden');
          } else {
            eyeOpen.classList.remove('hidden');
            eyeClosed.classList.add('hidden');
          }
        });
      }

      // Clear messages when user starts typing
      [emailInput, passwordInput].forEach(input => {
        if (input) {
          input.addEventListener('input', hideMessages);
        }
      });
    });
  </script>
</Layout>
