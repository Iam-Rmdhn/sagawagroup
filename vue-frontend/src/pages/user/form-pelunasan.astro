---
import Layout from '../../layouts/Layout.astro';
import sagawaLogo from '../../assets/img/logo_s.svg?url';
---

<Layout title="Form Pelunasan Kewajiban">
  <!-- Modern Form Pelunasan Styles -->
  <style>
    input[disabled], input[readonly] {
      cursor: not-allowed !important;
      border-color: #9ca3af !important;
      background-color: #f3f4f6 !important;
      color: #9ca3af !important;
    }

    /* Button styling consistent with other pages */
    .btn-primary {
      background: linear-gradient(135deg, rgb(245 158 11), rgb(249 115 22));
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .btn-primary:hover {
      background: linear-gradient(135deg, rgb(217 119 6), rgb(234 88 12));
      transform: translateY(-2px);
      box-shadow: 0 10px 25px -3px rgba(245, 158, 11, 0.3);
    }
    
    .btn-success {
      background: linear-gradient(135deg, rgb(34 197 94), rgb(22 163 74));
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .btn-success:hover {
      background: linear-gradient(135deg, rgb(21 128 61), rgb(22 101 52));
      transform: translateY(-2px);
      box-shadow: 0 10px 25px -3px rgba(34, 197, 94, 0.3);
    }

    /* Modern card styling */
    .modern-card {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(251, 191, 36, 0.02) 100%);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(251, 191, 36, 0.1);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .modern-card:hover {
      transform: translate3d(0, -2px, 0);
      box-shadow: 0 20px 25px -5px rgba(251, 191, 36, 0.1), 0 10px 10px -5px rgba(251, 191, 36, 0.04);
      border-color: rgba(251, 191, 36, 0.2);
    }

    /* Image preview styling */
    .image-preview {
      max-width: 100%;
      max-height: 300px;
      border-radius: 12px;
      border: 2px solid #d1d5db;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .preview-container {
      position: relative;
      display: inline-block;
    }

    .preview-overlay {
      position: absolute;
      top: 8px;
      right: 8px;
      background: rgba(0, 0, 0, 0.7);
      border-radius: 50%;
      padding: 4px;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .preview-overlay:hover {
      background: rgba(220, 38, 38, 0.8);
    }

    /* Mobile responsive improvements */
    @media (max-width: 640px) {
      .mobile-stack {
        flex-direction: column;
        gap: 0.75rem;
      }
      
      .mobile-center {
        text-align: center;
      }

      .image-preview {
        max-height: 200px;
      }
    }
  </style>

  <div id="formPelunasanContainer">
    <script type="module">
      document.addEventListener('DOMContentLoaded', async () => {
        let API_URL = 'http://localhost:3000';
        try {
          if (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.PUBLIC_API_URL) {
            if (import.meta.env.PUBLIC_API_URL && import.meta.env.PUBLIC_API_URL.startsWith('http')) {
              API_URL = import.meta.env.PUBLIC_API_URL;
            }
          }
        } catch (e) { /* fallback to localhost */ }
        const email = localStorage.getItem('mitraUserEmail') || localStorage.getItem('email');
        if (email) {
          try {
            const res = await fetch(`${API_URL}/api/mitra/pelunasan-exists?email=${encodeURIComponent(email)}`);
            const data = await res.json();
            if (data.exists) {
              window.location.href = '/user/kewajiban';
              return;
            }
          } catch (e) { /* ignore, biarkan user tetap bisa akses jika error */ }
        }
      });
    </script>

    <div class="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 py-4 sm:py-8">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Navigation Breadcrumb -->
        <nav class="flex mb-4 sm:mb-6" aria-label="Breadcrumb">
          <ol class="inline-flex items-center space-x-1 md:space-x-3 overflow-x-auto">
            <li class="inline-flex items-center flex-shrink-0">
              <a href="/user/dashboard" class="inline-flex items-center text-xs sm:text-sm font-medium text-gray-700 hover:text-amber-600 transition-colors">
                <svg class="w-3 h-3 me-2.5 flex-shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                  <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                </svg>
                Dashboard
              </a>
            </li>
            <li class="flex-shrink-0">
              <div class="flex items-center">
                <svg class="w-3 h-3 text-gray-400 mx-1 flex-shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                </svg>
                <a href="/user/kewajiban" class="ms-1 text-xs sm:text-sm font-medium text-gray-700 hover:text-amber-600 md:ms-2 transition-colors whitespace-nowrap">Kewajiban Mitra</a>
              </div>
            </li>
            <li class="flex-shrink-0">
              <div class="flex items-center">
                <svg class="w-3 h-3 text-gray-400 mx-1 flex-shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                </svg>
                <span class="ms-1 text-xs sm:text-sm font-medium text-gray-500 md:ms-2 whitespace-nowrap">Form Pelunasan</span>
              </div>
            </li>
          </ol>
        </nav>

        <!-- Back Navigation Buttons -->
        <div class="flex flex-col sm:flex-row gap-2 sm:gap-3 mb-4 sm:mb-6">
          <a href="/user/kewajiban" class="inline-flex items-center px-3 sm:px-4 py-2 text-sm font-medium text-amber-700 bg-amber-100 border border-amber-200 rounded-xl hover:bg-amber-200 hover:border-amber-300 transition-all duration-200 shadow-sm hover:shadow-md">
            <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            <span class="truncate">Kembali ke Kewajiban</span>
          </a>
          <a href="/user/dashboard" class="inline-flex items-center px-3 sm:px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-gray-300 transition-all duration-200 shadow-sm hover:shadow-md">
            <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
            <span class="truncate">Dashboard</span>
          </a>
        </div>

        <div class="modern-card rounded-xl shadow-xl p-4 sm:p-8">
          <div class="flex flex-col sm:flex-row items-center sm:items-start gap-3 sm:gap-4 mb-6 sm:mb-8">
            <img src={sagawaLogo} alt="Sagawa Logo" class="h-10 w-10 sm:h-12 sm:w-12 flex-shrink-0" />
            <div class="text-center sm:text-left">
              <h2 class="text-xl sm:text-2xl font-bold bg-gradient-to-r from-amber-600 to-orange-600 bg-clip-text text-transparent mb-1">
                Form Pelunasan Kewajiban
              </h2>
              <p class="text-gray-600 text-sm sm:text-base">Lengkapi data pelunasan dan upload bukti transfer</p>
              <div class="mt-2 p-2 bg-red-50 border border-red-200 rounded-lg">
                <p class="text-xs text-amber-700 flex items-center">
                  <svg class="w-4 h-4 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <span class="font-medium">Semua field dengan tanda <span class="text-red-500">*</span> wajib diisi</span>
                </p>
              </div>
            </div>
          </div>
          <!-- Info pembayaran -->
            <div class="flex items-center mb-3">
              <svg class="w-5 h-5 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 0 0 2.25-2.25V6.75A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25v10.5A2.25 2.25 0 0 0 4.5 19.5Z"></path>
              </svg>
              <h3 class="text-base sm:text-lg font-semibold text-amber-800">Informasi Pembayaran</h3>
            </div>
            <div class="space-y-2 mb-3">
              <div class="bg-white bg-opacity-60 rounded-lg p-3 sm:p-4 border border-amber-200">
                <p class="text-sm text-gray-700 mb-3">Pembayaran dapat dilakukan melalui rekening:</p>
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3">
                  <div class="bg-gradient-to-r from-red-500 to-red-600 text-white rounded-lg p-2 sm:p-3">
                    <p class="font-bold text-sm sm:text-base">A.N Iman Wahyudi (OWNER)</p>
                  </div>
                  <div class="bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg p-2 sm:p-3">
                    <p class="font-bold text-sm sm:text-base">Bank Central Asia (BCA)</p>
                  </div>
                  <div class="bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg p-2 sm:p-3 sm:col-span-2">
                    <p class="font-bold text-sm sm:text-base">No. Rekening: 540-607-5938</p>
                  </div>
                </div>
                <div class="mt-3 pt-3 border-t border-amber-200">
                  <p class="text-xs text-gray-700 mb-1">*Sebelum melakukan transfer, pastikan bahwa nominal yang dibayarkan tidak salah</p>
                  <p class="text-xs text-red-700 font-semibold">(Sertakan bukti transfer)</p>
                </div>
              </div>
          </div>
          <form id="formPelunasan" class="space-y-6">
            <div class="space-y-4 mb-6">
              <!-- Nama Mitra -->
              <div>
                <label for="namaMitra" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">Nama Mitra</label>
                <input id="namaMitra" name="namaMitra" type="text" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" placeholder="Nama Mitra*" readonly />
              </div>
              
              <!-- Alamat Mitra -->
              <div>
                <label for="alamatMitra" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">Alamat Mitra</label>
                <textarea id="alamatMitra" name="alamatMitra" rows="3" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all resize-none" placeholder="Alamat Mitra*" readonly></textarea>
              </div>

              <!-- Grid untuk field lainnya -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="noHp" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">No HP</label>
                  <input id="noHp" name="noHp" type="text" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" placeholder="No HP*" readonly />
                </div>
                <div>
                  <label for="email" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">Email</label>
                  <input id="email" name="email" type="email" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" placeholder="Email*" readonly />
                </div>
                <div>
                  <label for="paketUsaha" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">Kemitraan</label>
                  <input id="paketUsaha" name="paketUsaha" type="text" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" placeholder="Kemitraan*" readonly />
                </div>
                <div>
                  <label for="nominalPelunasan" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">Nominal Pelunasan</label>
                  <input id="nominalPelunasan" name="nominalPelunasan" type="number" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-gray-50 text-gray-600 placeholder-gray-400 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" placeholder="Nominal Pelunasan*" required readonly />
                </div>
              </div>
            </div>
            <div class="mb-8">
              <label class="block text-gray-800 font-semibold mb-3 text-sm sm:text-base">
                Upload Bukti Transfer <span class="text-red-500">*</span>
              </label>
              <div id="buktiTransferUploadArea" class="border-2 border-dashed border-amber-300 bg-gradient-to-br from-amber-50 to-orange-50 rounded-2xl p-6 sm:p-8 text-center transition-all duration-200 hover:border-amber-400 hover:from-amber-100 hover:to-orange-100">
                <!-- Upload Icon dan Text (akan disembunyikan saat ada preview) -->
                <div id="uploadPlaceholder">
                  <svg class="w-10 h-10 sm:w-12 sm:h-12 text-amber-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                  </svg>
                  <div class="font-bold text-base sm:text-lg text-gray-800 mb-2">Upload Bukti Transfer <span class="text-red-500">*</span></div>
                  <div class="text-gray-600 text-sm mb-1">JPG, PNG, atau PDF (Maksimal 2MB)</div>
                  <div class="text-amber-600 text-xs mb-4 font-medium">Wajib diisi untuk memproses pelunasan</div>
                </div>

                <!-- Preview Area (akan ditampilkan saat ada file) -->
                <div id="previewArea" class="hidden">
                  <div id="imagePreviewContainer" class="mb-4"></div>
                  <div id="fileInfoContainer" class="mb-4"></div>
                </div>

                <input id="buktiTransfer" name="buktiTransfer" type="file" accept="image/*,application/pdf" class="hidden" required />
                <button type="button" id="buktiTransferUploadBtn" class="btn-primary mt-2 px-4 sm:px-6 py-2 sm:py-3 text-white rounded-xl font-semibold flex items-center justify-center mx-auto text-sm sm:text-base shadow-lg">
                  <svg class="w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path></svg>
                  <span id="uploadBtnText">Pilih File Bukti Transfer</span>
                </button>
                <div id="buktiTransferPreview" class="mt-3 text-xs text-gray-600"></div>
              </div>
            </div>
            <div class="mt-8">
              <div class="flex items-center mb-4">
                <h3 class="text-base sm:text-lg font-bold text-gray-800 mr-2">Sumber Dana</h3>
                <span class="text-amber-600" title="Informasi rekening pengirim dana kemitraan">
                  <svg class="w-4 h-4 sm:w-5 sm:h-5 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" />
                  </svg>
                </span>
              </div>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="namaPengirim" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">
                    Nama Pengirim <span class="text-red-500">*</span>
                  </label>
                  <input type="text" id="namaPengirim" name="namaPengirim" placeholder="Nama Pengirim*" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-white text-gray-800 placeholder-gray-500 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" required />
                </div>
                <div>
                  <label for="noRekPengirim" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">
                    No Rek Pengirim <span class="text-red-500">*</span>
                  </label>
                  <input type="text" id="noRekPengirim" name="noRekPengirim" placeholder="No Rek pengirim*" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-white text-gray-800 placeholder-gray-500 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" required />
                </div>
                <div class="md:col-span-2">
                  <label for="bankPengirim" class="block text-gray-800 font-semibold mb-2 text-sm sm:text-base">
                    Bank Pengirim <span class="text-red-500">*</span>
                  </label>
                  <input type="text" id="bankPengirim" name="bankPengirim" placeholder="Bank Pengirim*" class="w-full px-4 py-3 border border-amber-200 rounded-xl bg-white text-gray-800 placeholder-gray-500 text-sm sm:text-base focus:border-amber-400 focus:ring-2 focus:ring-amber-200 transition-all" required />
                </div>
              </div>
            </div>
            <button id="btnKirimPelunasan" type="submit" class="w-full py-3 sm:py-4 px-6 text-white rounded-xl font-bold disabled:bg-gray-600 disabled:cursor-not-allowed disabled:opacity-50 disabled:shadow-none text-sm sm:text-base shadow-lg transition-all duration-200 bg-gray-400 cursor-not-allowed" disabled>
              <span class="flex items-center justify-center">
                Kirim Pelunasan
                <svg class="ml-2 w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5"></path>
                </svg>
              </span>
            </button>
          </form>
          <div id="formPelunasanMsg" class="mt-4 text-center text-sm"></div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script type="module">
  // Input Sanitizer Class
  class InputSanitizer {
    /**
     * Sanitize name input
     */
    static sanitizeName(input, strict = false) {
      if (!input || typeof input !== 'string') return '';

      if (!strict) {
        // During typing, don't sanitize at all - let users type freely
        return input;
      }

      // For strict validation, apply full sanitization
      return input
        // Remove dangerous characters
        .replace(/[<>'"&\\]/g, '')
        // Allow only letters, spaces, dots, apostrophes, and hyphens
        .replace(/[^a-zA-Z\s.'’-]/g, '')
        // Remove multiple spaces
        .replace(/\s+/g, ' ')
        // Trim and limit length
        .trim()
        .substring(0, 100);
    }

    /**
     * Sanitize account number input
     */
    static sanitizeAccountNumber(input) {
      if (!input || typeof input !== 'string') return '';

      return input
        .replace(/[^0-9]/g, '')
        .substring(0, 30);
    }
    
    static sanitizeBankName(input, strict = false) {
      if (!input || typeof input !== 'string') return '';

      if (!strict) {
        return input;
      }

      return input
        .replace(/[<>'"&\\]/g, '')
        .replace(/[^a-zA-Z\s.-]/g, '')
        .replace(/\s+/g, ' ')
        .trim()
        .substring(0, 100);
    }
  }

  function setupInputSanitization() {
    const textInputs = [
      { id: 'namaPengirim', sanitizer: InputSanitizer.sanitizeName, label: 'Nama Pengirim' },
      { id: 'noRekPengirim', sanitizer: InputSanitizer.sanitizeAccountNumber, label: 'No Rek Pengirim' },
      { id: 'bankPengirim', sanitizer: InputSanitizer.sanitizeBankName, label: 'Bank Pengirim' }
    ];

    // Setup real-time sanitization for text inputs
    textInputs.forEach(({ id, sanitizer, label }) => {
      const element = document.getElementById(id);
      if (element) {
        element.addEventListener('input', function(e) {
          const target = e.target;
          const originalValue = target.value;
          const hasDangerousChars = /[<>'"&\\]/.test(originalValue);

          if (hasDangerousChars) {
            try {
              const sanitizedValue = sanitizer(originalValue, false);

              if (originalValue !== sanitizedValue) {
                const cursorPosition = target.selectionStart;
                target.value = sanitizedValue;
                if (cursorPosition !== null) {
                  target.setSelectionRange(cursorPosition, cursorPosition);
                }
              }
            } catch (error) {
              console.error(`Error sanitizing ${label}:`, error);
            }
          }
        });

        element.addEventListener('paste', function(e) {
          setTimeout(() => {
            const target = e.target;
            const originalValue = target.value;

            const hasDangerousChars = /[<>'"&\\]/.test(originalValue);

            if (hasDangerousChars) {
              const sanitizedValue = sanitizer(originalValue, false);

              if (originalValue !== sanitizedValue) {
                target.value = sanitizedValue;
              }
            }
          }, 0);
        });

        element.addEventListener('blur', function(e) {
          const target = e.target;
          if (target.value.length > 0) {
            const sanitizedValue = sanitizer(target.value, true);
            if (target.value !== sanitizedValue) {
              target.value = sanitizedValue;
            }
          }
        });
      }
    });
  }

  document.addEventListener('DOMContentLoaded', async () => {
    document.getElementById('buktiTransferUploadBtn').addEventListener('click', function() {
      document.getElementById('buktiTransfer').click();
    });

    setupInputSanitization();

    const API_URL = (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.PUBLIC_API_URL)
      ? import.meta.env.PUBLIC_API_URL
      : 'http://localhost:3000';
    const email = localStorage.getItem('mitraUserEmail') || localStorage.getItem('email');
    const msg = document.getElementById('formPelunasanMsg');
    if (!email) {
      msg.textContent = 'Email login tidak ditemukan. Silakan login ulang.';
      msg.className = 'text-red-600 mt-4 text-center';
      return;
    }
    try {
      const res = await fetch(`${API_URL}/api/mitra/by-email?email=${encodeURIComponent(email)}`);
      const data = await res.json();
      if (!res.ok || data.error) {
        msg.textContent = 'Data mitra tidak ditemukan. Silakan login ulang.';
        msg.className = 'text-red-600 mt-4 text-center';
        return;
      }
      document.getElementById('namaMitra').value = data.nama || data.namaMitra || '';
      document.getElementById('email').value = data.email || '';
      document.getElementById('alamatMitra').value = data.alamatMitra || '';
      document.getElementById('noHp').value = data.noHp || '';
      document.getElementById('paketUsaha').value = data.paketUsaha || '';
      // Set nominal pelunasan otomatis dari kekurangan
      const nominalPelunasan = document.getElementById('nominalPelunasan');
      if (data.kekurangan && typeof data.kekurangan === 'number') {
        nominalPelunasan.value = data.kekurangan;
        nominalPelunasan.readOnly = true;
      } else {
        nominalPelunasan.value = '';
        nominalPelunasan.readOnly = false;
      }
    } catch (e) {
      msg.textContent = 'Gagal mengambil data mitra.';
      msg.className = 'text-red-600 mt-4 text-center';
      return;
    }
    const buktiInput = document.getElementById('buktiTransfer');
    const buktiPreview = document.getElementById('buktiTransferPreview');
    const btnKirim = document.getElementById('btnKirimPelunasan');
    buktiInput.addEventListener('change', function() {
      const file = this.files[0];
      const uploadPlaceholder = document.getElementById('uploadPlaceholder');
      const previewArea = document.getElementById('previewArea');
      const imagePreviewContainer = document.getElementById('imagePreviewContainer');
      const fileInfoContainer = document.getElementById('fileInfoContainer');
      const uploadBtnText = document.getElementById('uploadBtnText');
      const uploadArea = document.getElementById('buktiTransferUploadArea');
      
      // Reset preview
      buktiPreview.innerHTML = '';
      imagePreviewContainer.innerHTML = '';
      fileInfoContainer.innerHTML = '';
      
      if (file) {
        if (file.size > 2 * 1024 * 1024) {
          // File terlalu besar
          buktiPreview.textContent = 'Ukuran file maksimal 2MB!';
          buktiPreview.className = 'mt-3 text-sm text-red-600 font-semibold';
          buktiInput.value = '';
          
          // Kembalikan ke state awal
          uploadPlaceholder.classList.remove('hidden');
          previewArea.classList.add('hidden');
          uploadBtnText.textContent = 'Pilih File Bukti Transfer';
          uploadArea.classList.remove('border-green-400', 'border-red-300');
          uploadArea.classList.add('border-amber-300');
          
          window.updateBtnKirimState();
          return;
        }

        // Sembunyikan placeholder dan tampilkan preview
        uploadPlaceholder.classList.add('hidden');
        previewArea.classList.remove('hidden');
        uploadBtnText.textContent = 'Ganti File';
        
        // Update border color
        uploadArea.classList.remove('border-amber-300', 'border-red-300');
        uploadArea.classList.add('border-green-400');

        // Cek apakah file adalah gambar
        if (file.type.startsWith('image/')) {
          // Buat preview gambar
          const reader = new FileReader();
          reader.onload = function(e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'preview-container';
            
            const img = document.createElement('img');
            img.src = e.target.result;
            img.className = 'image-preview mx-auto';
            img.alt = 'Preview bukti transfer';
            
            // Tombol hapus overlay
            const removeOverlay = document.createElement('div');
            removeOverlay.className = 'preview-overlay';
            removeOverlay.title = 'Hapus file';
            removeOverlay.innerHTML = `
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            `;
            removeOverlay.onclick = function() {
              clearPreview();
            };
            
            previewContainer.appendChild(img);
            previewContainer.appendChild(removeOverlay);
            imagePreviewContainer.appendChild(previewContainer);
          };
          reader.readAsDataURL(file);
        } else {
          // Preview untuk file non-gambar (PDF)
          const fileIcon = document.createElement('div');
          fileIcon.className = 'flex items-center justify-center mb-4';
          fileIcon.innerHTML = `
            <div class="bg-red-100 rounded-full p-4">
              <svg class="w-12 h-12 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
              </svg>
            </div>
          `;
          imagePreviewContainer.appendChild(fileIcon);
        }

        // Info file
        const fileInfo = document.createElement('div');
        fileInfo.className = 'bg-white bg-opacity-60 rounded-lg p-3 border border-green-200';
        fileInfo.innerHTML = `
          <div class="flex items-center justify-between">
            <div class="flex-1">
              <div class="font-medium text-gray-900 text-sm truncate">${file.name}</div>
              <div class="text-xs text-gray-600">${(file.size/1024).toFixed(2)} KB • ${file.type}</div>
            </div>
            <button type="button" onclick="clearPreview()" class="ml-3 text-red-500 hover:text-red-700 p-1 rounded">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
              </svg>
            </button>
          </div>
        `;
        fileInfoContainer.appendChild(fileInfo);

        window.updateBtnKirimState();
      } else {
        clearPreview();
      }
    });

    // Fungsi untuk membersihkan preview
    function clearPreview() {
      const buktiInput = document.getElementById('buktiTransfer');
      const uploadPlaceholder = document.getElementById('uploadPlaceholder');
      const previewArea = document.getElementById('previewArea');
      const uploadBtnText = document.getElementById('uploadBtnText');
      const uploadArea = document.getElementById('buktiTransferUploadArea');
      const buktiPreview = document.getElementById('buktiTransferPreview');
      
      buktiInput.value = '';
      buktiPreview.innerHTML = '';
      
      uploadPlaceholder.classList.remove('hidden');
      previewArea.classList.add('hidden');
      uploadBtnText.textContent = 'Pilih File Bukti Transfer';
      
      uploadArea.classList.remove('border-green-400', 'border-red-300');
      uploadArea.classList.add('border-amber-300');
      
      window.updateBtnKirimState();
    }

    // Fungsi untuk validasi real-time field sumber dana
    function validateField(fieldId, isValid) {
      const field = document.getElementById(fieldId);
      if (isValid) {
        field.classList.remove('border-red-300', 'border-amber-200');
        field.classList.add('border-green-400');
      } else {
        field.classList.remove('border-green-400', 'border-amber-200');
        field.classList.add('border-red-300');
      }
    }

    // Reset pesan error dan update tombol kirim saat user mulai mengetik
    ['namaPengirim', 'noRekPengirim', 'bankPengirim'].forEach(fieldId => {
      document.getElementById(fieldId).addEventListener('input', function() {
        if (msg.textContent && msg.classList.contains('text-red-600')) {
          msg.textContent = '';
          msg.className = 'mt-4 text-center text-sm';
        }
        const isValid = this.value.trim().length > 0;
        validateField(fieldId, isValid);
        window.updateBtnKirimState();
      });
    });

    // Validasi real-time untuk file bukti transfer
    buktiInput.addEventListener('change', function() {
      if (msg.textContent && msg.classList.contains('text-red-600')) {
        msg.textContent = '';
        msg.className = 'mt-4 text-center text-sm';
      }
      
      const file = this.files[0];
      const isValid = file && file.size <= 2 * 1024 * 1024;
      const uploadArea = document.getElementById('buktiTransferUploadArea');
      
      if (isValid) {
        uploadArea.classList.remove('border-red-300', 'border-amber-300');
        uploadArea.classList.add('border-green-400');
      } else {
        uploadArea.classList.remove('border-green-400', 'border-amber-300');
        uploadArea.classList.add('border-red-300');
      }
      
      window.updateBtnKirimState();
    });

    document.getElementById('formPelunasan').addEventListener('submit', async (e) => {
      e.preventDefault();
      msg.textContent = '';

      // Validasi manual untuk memastikan semua field required terisi
      const namaPengirim = document.getElementById('namaPengirim').value.trim();
      const noRekPengirim = document.getElementById('noRekPengirim').value.trim();
      const bankPengirim = document.getElementById('bankPengirim').value.trim();
      const buktiTransfer = document.getElementById('buktiTransfer').files[0];

      if (!namaPengirim) {
        msg.textContent = 'Nama pengirim harus diisi!';
        msg.className = 'text-red-600 mt-4 text-center font-semibold';
        validateField('namaPengirim', false);
        document.getElementById('namaPengirim').focus();
        return;
      }

      if (!noRekPengirim) {
        msg.textContent = 'Nomor rekening pengirim harus diisi!';
        msg.className = 'text-red-600 mt-4 text-center font-semibold';
        validateField('noRekPengirim', false);
        document.getElementById('noRekPengirim').focus();
        return;
      }

      if (!bankPengirim) {
        msg.textContent = 'Bank pengirim harus diisi!';
        msg.className = 'text-red-600 mt-4 text-center font-semibold';
        validateField('bankPengirim', false);
        document.getElementById('bankPengirim').focus();
        return;
      }

      if (!buktiTransfer) {
        msg.textContent = 'Bukti transfer harus diupload!';
        msg.className = 'text-red-600 mt-4 text-center font-semibold';
        const uploadArea = document.getElementById('buktiTransferUploadArea');
        uploadArea.classList.remove('border-green-400', 'border-amber-300');
        uploadArea.classList.add('border-red-300');
        return;
      }

      if (buktiTransfer.size > 2 * 1024 * 1024) {
        msg.textContent = 'Ukuran file bukti transfer maksimal 2MB!';
        msg.className = 'text-red-600 mt-4 text-center font-semibold';
        return;
      }

      const form = e.target;
      const formData = new FormData(form);

      // Sanitize form data before submission
      const namaPengirimValue = formData.get('namaPengirim');
      const noRekPengirimValue = formData.get('noRekPengirim');
      const bankPengirimValue = formData.get('bankPengirim');

      if (namaPengirimValue) {
        formData.set('namaPengirim', InputSanitizer.sanitizeName(namaPengirimValue, true));
      }
      if (noRekPengirimValue) {
        formData.set('noRekPengirim', InputSanitizer.sanitizeAccountNumber(noRekPengirimValue));
      }
      if (bankPengirimValue) {
        formData.set('bankPengirim', InputSanitizer.sanitizeBankName(bankPengirimValue, true));
      }

      try {
        const res = await fetch(`${API_URL}/api/mitra/pelunasan`, {
          method: 'POST',
          body: formData
        });
        const result = await res.json();
        if (res.ok && result.success) {
          // Set validasi visual ke success untuk semua field
          ['namaPengirim', 'noRekPengirim', 'bankPengirim'].forEach(fieldId => {
            validateField(fieldId, true);
          });
          const uploadArea = document.getElementById('buktiTransferUploadArea');
          uploadArea.classList.remove('border-red-300', 'border-amber-300');
          uploadArea.classList.add('border-green-400');
          // Set flag di localStorage bahwa sudah pernah submit pelunasan
          localStorage.setItem('sudahPelunasan', '1');
          document.getElementById('formPelunasanContainer').innerHTML = `
            <div class='min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 flex items-center justify-center py-8 px-4'>
              <div class='modern-card rounded-xl shadow-xl p-8 text-center max-w-md mx-auto'>
                <svg class='w-16 h-16 text-green-500 mx-auto mb-6' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                  <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12l2 2l4-4m5 2a9 9 0 11-18 0a9 9 0 0118 0z' />
                </svg>
                <h2 class='text-2xl sm:text-3xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent mb-3'>Terima Kasih!</h2>
                <p class='text-gray-700 text-base sm:text-lg mb-2'>Formulir pelunasan berhasil dikirim.</p>
                <p class='text-gray-600 text-sm mb-6'>Tim kami akan memproses pelunasan Anda dalam 1-2 hari kerja.</p>
                <div class='flex flex-col sm:flex-row gap-3'>
                  <a href='/user/kewajiban' class='btn-primary inline-flex items-center px-4 py-2 text-white font-semibold rounded-xl text-sm flex-1 justify-center'>
                    <svg class='w-4 h-4 mr-2' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                      <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 19l-7-7 7-7'></path>
                    </svg>
                    Kembali
                  </a>
                  <a href='/user/dashboard' class='btn-success inline-flex items-center px-4 py-2 text-white font-semibold rounded-xl text-sm flex-1 justify-center'>
                    <svg class='w-4 h-4 mr-2' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                      <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'></path>
                    </svg>
                    Dashboard
                  </a>
                </div>
              </div>
            </div>
          `;
          setTimeout(() => { window.location.href = '/user/kewajiban'; }, 2000);
        } else {
          msg.textContent = result.error || 'Gagal mengirim pelunasan.';
          msg.className = 'text-red-600 mt-4 text-center';
        }
      } catch (err) {
        msg.textContent = 'Gagal mengirim pelunasan.';
        msg.className = 'text-red-600 mt-4 text-center';
      }
    });
  });

  // Fungsi global untuk update status tombol kirim
  window.updateBtnKirimState = function() {
    const buktiInput = document.getElementById('buktiTransfer');
    const btnKirim = document.getElementById('btnKirimPelunasan');
    const namaPengirim = document.getElementById('namaPengirim');
    const noRekPengirim = document.getElementById('noRekPengirim');
    const bankPengirim = document.getElementById('bankPengirim');
    
    if (!buktiInput || !btnKirim || !namaPengirim || !noRekPengirim || !bankPengirim) {
      return;
    }
    
    const file = buktiInput.files[0];
    const namaPengirimValue = namaPengirim.value.trim();
    const noRekPengirimValue = noRekPengirim.value.trim();
    const bankPengirimValue = bankPengirim.value.trim();
    
    const isFileValid = file && file.size <= 2 * 1024 * 1024;
    const areFieldsValid = namaPengirimValue && noRekPengirimValue && bankPengirimValue;
    
    if (isFileValid && areFieldsValid) {
      btnKirim.disabled = false;
      btnKirim.classList.remove('bg-gray-400', 'cursor-not-allowed', 'bg-gray-600', 'opacity-50', 'shadow-none');
      btnKirim.classList.add('btn-success');
    } else {
      btnKirim.disabled = true;
      btnKirim.classList.remove('btn-success');
      btnKirim.classList.add('bg-gray-600', 'cursor-not-allowed', 'opacity-50', 'shadow-none');
    }
  };

  // Fungsi global untuk membersihkan preview (dapat dipanggil dari onclick)
  window.clearPreview = function() {
    const buktiInput = document.getElementById('buktiTransfer');
    const uploadPlaceholder = document.getElementById('uploadPlaceholder');
    const previewArea = document.getElementById('previewArea');
    const uploadBtnText = document.getElementById('uploadBtnText');
    const uploadArea = document.getElementById('buktiTransferUploadArea');
    const buktiPreview = document.getElementById('buktiTransferPreview');
    
    buktiInput.value = '';
    buktiPreview.innerHTML = '';
    
    uploadPlaceholder.classList.remove('hidden');
    previewArea.classList.add('hidden');
    uploadBtnText.textContent = 'Pilih File Bukti Transfer';
    
    uploadArea.classList.remove('border-green-400', 'border-red-300');
    uploadArea.classList.add('border-amber-300');
    
    // Call updateBtnKirimState
    window.updateBtnKirimState();
  };
</script>
