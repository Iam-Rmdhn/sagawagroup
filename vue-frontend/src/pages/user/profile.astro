---
import Layout from '../../layouts/Layout.astro';
import MitraSidebar from '../../components/mitra/sidebar/MitraSidebar.astro';
import MitraNavbar from '../../components/mitra/navbar/MitraNavbar.astro';
// User Profile Edit
---

<Layout title="Edit Profile - Sagawa Mitra">

<!-- Modern Profile Edit Styles -->
<style>
  /* Global fixes for scroll stability */
  * {
    transform: translateZ(0);
    will-change: auto;
  }
  
  *,
  *::before,
  *::after {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-perspective: 1000px;
    perspective: 1000px;
  }
  
  body, html {
    overflow-x: hidden;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    background-color: #fefefe;
  }
  
  /* Ensure logout button is always clickable */
  #logout-btn {
    pointer-events: auto !important;
    cursor: pointer !important;
  }
  
  #logout-btn:disabled {
    pointer-events: auto !important;
    cursor: pointer !important;
    opacity: 1 !important;
  }
  
  .modern-card:hover {
    box-shadow: 0 20px 25px -5px rgba(251, 191, 36, 0.1), 0 10px 10px -5px rgba(251, 191, 36, 0.04);
    border-color: rgba(251, 191, 36, 0.2);
  }

  /* Form input styling */
  .form-input:focus {
    box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
    border-color: rgb(245 158 11);
    transform: scale(1.01);
  }
  
  /* Button hover effects */
  .btn-primary {
    background: linear-gradient(135deg, rgb(245 158 11), rgb(249 115 22));
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .btn-primary:hover {
    background: linear-gradient(135deg, rgb(217 119 6), rgb(234 88 12));
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -3px rgba(245, 158, 11, 0.3);
  }
  
  /* Status badge styling */
  .status-badge {
    background: linear-gradient(135deg, rgb(245 158 11), rgb(251 191 36));
    animation: pulse 2s infinite;
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
</style>

<MitraNavbar />
<MitraSidebar currentPage="profile" />

<div class="p-2 sm:p-4 sm:ml-72 transition-all duration-300">
   <div class="p-2 sm:p-6 mt-16">
      <!-- Breadcrumb -->
      <nav class="flex mt-2 mb-4" aria-label="Breadcrumb">
         <ol class="inline-flex items-center space-x-1 md:space-x-3">
            <li class="inline-flex items-center">
               <a href="/user/dashboard" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-amber-600 dark:text-gray-400 dark:hover:text-orange-500">
                  <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                     <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                  </svg>
                  Dashboard
               </a>
            </li>
            <li>
               <div class="flex items-center">
                  <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                     <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                  </svg>
                  <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">Edit Profile</span>
               </div>
            </li>
         </ol>
      </nav>

      <!-- Loading State -->
      <div id="loading-state" class="text-center py-8">
         <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-amber-500 mx-auto"></div>
         <p class="mt-4 text-gray-600 dark:text-gray-400">Memuat data profil...</p>
      </div>

      <!-- Main Profile Edit Content -->
      <div id="profile-content" class="hidden">
         <!-- Profile Header -->
         <div class="bg-gradient-to-r from-amber-500 to-orange-500 rounded-lg p-6 mb-6 text-white">
            <div class="flex items-center">
               <div class="w-20 h-20 rounded-full bg-white bg-opacity-20 flex items-center justify-center text-3xl font-bold mr-6" id="profile-avatar">
                  M
               </div>
               <div>
                  <h1 class="text-3xl font-bold mb-2">Edit Profile</h1>
                  <p class="opacity-90" id="profile-email">Loading...</p>
                  <p class="text-sm opacity-80" id="profile-status">Loading...</p>
               </div>
            </div>
         </div>

         <!-- Success/Error Messages -->
                  <!-- Success/Error Messages -->
         <div id="success-message" class="hidden modern-card bg-gradient-to-r from-green-50 to-emerald-50 border-l-4 border-green-500 text-green-700 px-6 py-4 rounded-xl mb-6 shadow-lg">
            <div class="flex items-center">
               <svg class="w-5 h-5 mr-3 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
               </svg>
               <div>
                  <p class="font-semibold">Berhasil!</p>
                  <p id="success-text" class="text-sm">Profile berhasil diperbarui</p>
               </div>
            </div>
         </div>

         <div id="error-message" class="hidden modern-card bg-gradient-to-r from-red-50 to-rose-50 border-l-4 border-red-500 text-red-700 px-6 py-4 rounded-xl mb-6 shadow-lg">
            <div class="flex items-center">
               <svg class="w-5 h-5 mr-3 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
               </svg>
               <div>
                  <p class="font-semibold">Terjadi Kesalahan!</p>
                  <p id="error-text" class="text-sm">Terjadi kesalahan saat memperbarui profile</p>
               </div>
            </div>
         </div>

         <!-- Edit Form -->
         <div class="modern-card rounded-xl shadow-xl">
            <div class="p-8">
               <h2 class="text-2xl font-semibold bg-gradient-to-r from-amber-600 to-orange-600 bg-clip-text text-transparent mb-8">Informasi Personal</h2>
               
               <form id="profile-form" class="space-y-6">
                  <!-- Nama Mitra -->
                  <div>
                     <label for="namaMitra" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Nama Mitra *
                     </label>
                     <input 
                        type="text" 
                        id="namaMitra" 
                        name="namaMitra" 
                        class="form-input w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-200"
                        placeholder="Masukkan nama mitra"
                        required
                     />
                     <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                        Nama yang akan ditampilkan pada profil Anda
                     </p>
                  </div>

                  <!-- Email (Read Only) -->
                  <div>
                     <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Email
                     </label>
                     <input 
                        type="email" 
                        id="email" 
                        name="email" 
                        class="w-full px-4 py-3 border border-gray-300 rounded-xl bg-gray-50 text-gray-600 cursor-not-allowed"
                        readonly
                     />
                     <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                        Email tidak dapat diubah
                     </p>
                  </div>

                  <!-- No HP -->
                  <div>
                     <label for="noHp" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        No. HP *
                     </label>
                     <input 
                        type="tel" 
                        id="noHp" 
                        name="noHp" 
                        class="form-input w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-200"
                        placeholder="08xxxxxxxxxx"
                        pattern="[0-9]{10,15}"
                        required
                     />
                  </div>

                  <!-- Alamat -->
                  <div>
                     <label for="alamatMitra" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                        Alamat *
                     </label>
                     <textarea 
                        id="alamatMitra" 
                        name="alamatMitra" 
                        rows="4"
                        class="form-input w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-all duration-200"
                        placeholder="Masukkan alamat lengkap"
                        required
                     ></textarea>
                  </div>

                  <!-- Business Information (Read Only) -->
                  <div class="border-t border-amber-100 pt-8">
                     <h3 class="text-xl font-semibold bg-gradient-to-r from-amber-600 to-orange-600 bg-clip-text text-transparent mb-6">Informasi Kemitraan</h3>
                     
                     <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                           <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                              Sistem Kemitraan
                           </label>
                           <input 
                              type="text" 
                              id="sistemKemitraan" 
                              class="w-full px-4 py-3 border border-gray-300 rounded-xl bg-gray-50 text-gray-600 cursor-not-allowed"
                              readonly
                           />
                        </div>

                        <div>
                           <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                              Paket Usaha
                           </label>
                           <input 
                              type="text" 
                              id="paketUsaha" 
                              class="w-full px-4 py-3 border border-gray-300 rounded-xl bg-gray-50 text-gray-600 cursor-not-allowed"
                              readonly
                           />
                        </div>

                        <div>
                           <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                              Sales
                           </label>
                           <input 
                              type="text" 
                              id="sales" 
                              class="w-full px-4 py-3 border border-gray-300 rounded-xl bg-gray-50 text-gray-600 cursor-not-allowed"
                              readonly
                           />
                        </div>

                        <div>
                           <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                              Status
                           </label>
                           <span class="status-badge inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold text-white shadow-lg" id="status-badge">
                              Loading...
                           </span>
                        </div>
                     </div>
                  </div>

                  <!-- Action Buttons -->
                  <div class="flex flex-col sm:flex-row gap-4 pt-6">
                     <button 
                        type="submit" 
                        id="save-btn"
                        class="btn-primary flex-1 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-200 flex items-center justify-center shadow-lg"
                     >
                        <span id="save-text">Simpan Perubahan</span>
                        <span id="save-loading" class="hidden">
                           <div class="flex items-center">
                              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                 <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                 <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                              </svg>
                              Menyimpan Perubahan...
                           </div>
                        </span>
                     </button>
                     
                     <button 
                        type="button" 
                        onclick="window.history.back()"
                        class="flex-1 sm:flex-none bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold py-3 px-6 rounded-xl transition-all duration-200 border border-gray-300"
                     >
                        Batal
                     </button>
                  </div>
               </form>
            </div>
         </div>
      </div>

      <!-- Error State -->
      <div id="error-state" class="hidden text-center py-8">
         <div class="text-red-500 mb-4">
            <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
               <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
         </div>
         <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Gagal Memuat Data</h3>
         <p class="text-gray-600 dark:text-gray-400 mb-4" id="load-error-message">Terjadi kesalahan saat memuat data profil.</p>
         <button onclick="window.location.reload()" class="btn-primary px-6 py-3 text-white rounded-xl transition-all duration-200 shadow-lg">
            Muat Ulang
         </button>
      </div>
   </div>
</div>

<script>
   // API URL configuration
   const API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:6000';

   let currentData: any = null;

   document.addEventListener('DOMContentLoaded', async function() {
      // Check authentication
      const token = localStorage.getItem('mitraToken');
      if (!token) {
         window.location.href = '/login';
         return;
      }

      // Load mitra profile data
      await loadMitraProfile();

      // Setup form submission
      setupFormSubmission();

      // Listen for navbar actions
      document.addEventListener('mitraNavbarAction', function(event: Event) {
         const customEvent = event as CustomEvent;
         const action = customEvent.detail.action;
         
         if (action === 'logout') {
            // Clear session data but keep remembered credentials
            localStorage.removeItem('mitraToken');
            localStorage.removeItem('mitraUser');
            localStorage.removeItem('mitraUserEmail');
            window.location.href = '/login';
         }
      });
   });

   async function loadMitraProfile() {
      const loadingState = document.getElementById('loading-state');
      const profileContent = document.getElementById('profile-content');
      const errorState = document.getElementById('error-state');
      const token = localStorage.getItem('mitraToken');

      try {
         const response = await fetch(`${API_URL}/api/mitra/profile`, {
            method: 'GET',
            headers: {
               'Authorization': `Bearer ${token}`,
               'Content-Type': 'application/json'
            }
         });

         const result = await response.json();

         if (response.ok && result.success) {
            currentData = result.data;
            
            // Hide loading state and show profile content
            loadingState?.classList.add('hidden');
            profileContent?.classList.remove('hidden');

            // Update profile information
            populateForm(currentData);

         } else {
            throw new Error(result.error || 'Gagal memuat data profil');
         }

      } catch (error) {
         console.error('Error loading mitra profile:', error);
         
         // Show error state
         loadingState?.classList.add('hidden');
         errorState?.classList.remove('hidden');
         
         const errorMessage = document.getElementById('load-error-message');
         if (errorMessage) {
            errorMessage.textContent = error instanceof Error ? error.message : 'Terjadi kesalahan yang tidak diketahui';
         }
      }
   }

   function populateForm(data: any) {
      // Update avatar with first letter of name
      const profileAvatar = document.getElementById('profile-avatar');
      const firstLetter = (data.namaMitra || 'M').charAt(0).toUpperCase();
      
      if (profileAvatar) profileAvatar.textContent = firstLetter;

      // Update navbar user info through MitraNavbar component
      if (typeof (window as any).mitraNavbar !== 'undefined') {
         (window as any).mitraNavbar.updateUserInfo(data);
      }

      // Update header info
      const profileEmail = document.getElementById('profile-email');
      const profileStatus = document.getElementById('profile-status');

      if (profileEmail) profileEmail.textContent = data.email || 'Email tidak tersedia';

      // Status
      if (profileStatus) {
         let statusText = 'Status tidak diketahui';
         if (data.isApproved) {
            statusText = 'Mitra Disetujui';
         } else if (data.status === 'pending') {
            statusText = 'Menunggu Persetujuan';
         } else if (data.status === 'rejected') {
            statusText = 'Ditolak';
         }
         profileStatus.textContent = statusText;
      }

      // Fill editable form fields
      const namaMitraInput = document.getElementById('namaMitra') as HTMLInputElement;
      const emailInput = document.getElementById('email') as HTMLInputElement;
      const noHpInput = document.getElementById('noHp') as HTMLInputElement;
      const alamatMitraInput = document.getElementById('alamatMitra') as HTMLTextAreaElement;

      if (namaMitraInput) namaMitraInput.value = data.namaMitra || '';
      if (emailInput) emailInput.value = data.email || '';
      if (noHpInput) noHpInput.value = data.noHp || '';
      if (alamatMitraInput) alamatMitraInput.value = data.alamatMitra || '';

      // Fill read-only business info
      const sistemKemitraanInput = document.getElementById('sistemKemitraan') as HTMLInputElement;
      const paketUsahaInput = document.getElementById('paketUsaha') as HTMLInputElement;
      const salesInput = document.getElementById('sales') as HTMLInputElement;

      if (sistemKemitraanInput) sistemKemitraanInput.value = data.sistemKemitraan || 'Tidak tersedia';
      if (paketUsahaInput) paketUsahaInput.value = data.paketUsaha || 'Tidak tersedia';
      if (salesInput) salesInput.value = data.sales || 'Tidak tersedia';

      // Status badge
      const statusBadge = document.getElementById('status-badge');
      if (statusBadge) {
         let badgeStyle = 'background: linear-gradient(135deg, rgb(245 158 11), rgb(251 191 36));';
         let badgeText = 'Menunggu Persetujuan';
         
         if (data.isApproved) {
            badgeStyle = 'background: linear-gradient(135deg, rgb(34 197 94), rgb(22 163 74));';
            badgeText = 'Mitra Disetujui';
         } else if (data.status === 'rejected') {
            badgeStyle = 'background: linear-gradient(135deg, rgb(239 68 68), rgb(220 38 38));';
            badgeText = 'Ditolak';
         }

         statusBadge.className = 'status-badge inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold text-white shadow-lg';
         statusBadge.setAttribute('style', badgeStyle);
         statusBadge.textContent = badgeText;
      }
   }

   function setupFormSubmission() {
      const form = document.getElementById('profile-form');
      if (!form) return;

      form.addEventListener('submit', async function(e) {
         e.preventDefault();

         const saveBtn = document.getElementById('save-btn') as HTMLButtonElement;
         const saveText = document.getElementById('save-text');
         const saveLoading = document.getElementById('save-loading');
         const token = localStorage.getItem('mitraToken');

         // Get form data
         const formData = new FormData(form as HTMLFormElement);
         const updateData = {
            namaMitra: formData.get('namaMitra')?.toString().trim(),
            noHp: formData.get('noHp')?.toString().trim(),
            alamatMitra: formData.get('alamatMitra')?.toString().trim()
         };

         // Validation
         if (!updateData.namaMitra || !updateData.noHp || !updateData.alamatMitra) {
            showError('Semua field yang wajib harus diisi');
            return;
         }

         // Phone number validation
         const phoneRegex = /^[0-9]{10,15}$/;
         if (!phoneRegex.test(updateData.noHp)) {
            showError('Nomor HP harus berisi 10-15 digit angka');
            return;
         }

         // Set loading state
         setLoading(true);
         hideMessages();

         try {
            const response = await fetch(`${API_URL}/api/mitra/profile/update`, {
               method: 'PUT',
               headers: {
                  'Authorization': `Bearer ${token}`,
                  'Content-Type': 'application/json'
               },
               body: JSON.stringify(updateData)
            });

            const result = await response.json();

            if (response.ok && result.success) {
               showSuccess('Profile berhasil diperbarui!');
               
               // Update current data
               currentData = { ...currentData, ...updateData };
               
               // Update localStorage if needed
               const mitraUser = localStorage.getItem('mitraUser');
               if (mitraUser) {
                  const userData = JSON.parse(mitraUser);
                  userData.namaMitra = updateData.namaMitra;
                  localStorage.setItem('mitraUser', JSON.stringify(userData));
               }

               // Update header display
               const userName = document.getElementById('user-name');
               if (userName) userName.textContent = updateData.namaMitra;

            } else {
               showError(result.error || 'Gagal memperbarui profile');
            }

         } catch (error) {
            console.error('Error updating profile:', error);
            showError('Terjadi kesalahan saat memperbarui profile');
         } finally {
            setLoading(false);
         }
      });
   }

   function setLoading(loading: boolean) {
      const saveBtn = document.getElementById('save-btn') as HTMLButtonElement;
      const saveText = document.getElementById('save-text');
      const saveLoading = document.getElementById('save-loading');

      if (saveBtn) saveBtn.disabled = loading;
      
      if (loading) {
         saveText?.classList.add('hidden');
         saveLoading?.classList.remove('hidden');
      } else {
         saveText?.classList.remove('hidden');
         saveLoading?.classList.add('hidden');
      }
   }

   function showSuccess(message: string) {
      const successMessage = document.getElementById('success-message');
      const successText = document.getElementById('success-text');
      
      if (successMessage && successText) {
         successText.textContent = message;
         successMessage.classList.remove('hidden');
         
         // Auto hide after 5 seconds
         setTimeout(() => {
            successMessage.classList.add('hidden');
         }, 5000);

         // Scroll to top to show message
         window.scrollTo({ top: 0, behavior: 'smooth' });
      }
   }

   function showError(message: string) {
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      
      if (errorMessage && errorText) {
         errorText.textContent = message;
         errorMessage.classList.remove('hidden');

         // Auto hide after 5 seconds
         setTimeout(() => {
            errorMessage.classList.add('hidden');
         }, 5000);

         // Scroll to top to show message
         window.scrollTo({ top: 0, behavior: 'smooth' });
      }
   }

   function hideMessages() {
      const successMessage = document.getElementById('success-message');
      const errorMessage = document.getElementById('error-message');
      
      successMessage?.classList.add('hidden');
      errorMessage?.classList.add('hidden');
   }
</script>
</Layout>
