---
// Page Kewajiban Mitra: hanya untuk mitra yang belum lunas atau baru DP
import type { APIContext } from 'astro';

import Layout from '../../layouts/Layout.astro';
import MitraSidebar from '../../components/mitra/sidebar/MitraSidebar.astro';
import MitraNavbar from '../../components/mitra/navbar/MitraNavbar.astro';


---

<Layout title="Kewajiban Mitra">
  <MitraNavbar />
  <MitraSidebar currentPage="kewajiban" showKewajiban={true} />
  <main class="p-6 ml-64 mt-16">
    <div class="max-w-5xl mx-auto border-2 border-dashed border-gray-300 dark:border-gray-700 rounded-2xl bg-white/80 dark:bg-gray-900/80 shadow-lg p-8">
      <h1 class="text-2xl font-bold mb-8 text-gray-900 dark:text-white">Kewajiban Mitra</h1>
      <div id="kewajiban-content">
        <div class="text-gray-500">Memuat status kewajiban...</div>
      </div>
    </div>
  </main>
</Layout>

<script type="module">
  document.addEventListener('DOMContentLoaded', async () => {
    let API_URL = 'http://localhost:4000';
    try {
      if (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.PUBLIC_API_URL) {
        if (import.meta.env.PUBLIC_API_URL && import.meta.env.PUBLIC_API_URL.startsWith('http')) {
          API_URL = import.meta.env.PUBLIC_API_URL;
        }
      }
    } catch (e) { /* fallback to localhost */ }
    const email = localStorage.getItem('mitraUserEmail') || localStorage.getItem('email');
    const container = document.getElementById('kewajiban-content');
  let mitra = null;


    if (email) {
      try {
        const res = await fetch(`${API_URL}/api/mitra/by-email?email=${encodeURIComponent(email)}`);
        const data = await res.json();
        if (res.ok && !data.error) mitra = data;
      } catch (e) { }
    }
  // Sidebar selalu muncul di halaman kewajiban
    if (!mitra) {
      container.innerHTML = '<div class="text-red-600">Data mitra tidak ditemukan. Silakan login ulang.</div>';
      return;
    }
    try {
      // Update navbar profile info
      if (typeof window !== 'undefined' && window.mitraNavbar && typeof window.mitraNavbar.updateUserInfo === 'function') {
        window.mitraNavbar.updateUserInfo(mitra);
      }
  // Rely on approved/full-payment flags in profile (pelunasanApproved / statusPelunasan === 'approved')
  // to determine whether mitra is considered lunas. Do not redirect based on mere submission.

      // Stricter full-payment check: treat as paid-off when explicitly Full Payment,
      // isFullPayment===true, admin-approved pelunasan flags, or kekurangan <= 0.
      const hasKekurangan = mitra && typeof mitra.kekurangan !== 'undefined' && mitra.kekurangan !== null;
      const isKekuranganZero = hasKekurangan && !isNaN(Number(mitra.kekurangan)) && Number(mitra.kekurangan) <= 0;

      // Aggregate possible approval flags/fields coming from different backend shapes.
      // Some responses use mitra.pelunasan (array), mitra.pelunasan.status, mitra.statusPelunasan,
      // mitra.pelunasanApproved, mitra.approved or mitra.isApproved.
      const pelunasanStatuses = [];
      try {
        if (Array.isArray(mitra?.pelunasan)) {
          mitra.pelunasan.forEach(p => {
            if (p && p.status) pelunasanStatuses.push(String(p.status).toLowerCase());
          });
        } else if (mitra?.pelunasan && typeof mitra.pelunasan === 'object' && mitra.pelunasan.status) {
          pelunasanStatuses.push(String(mitra.pelunasan.status).toLowerCase());
        }
        if (mitra?.statusPelunasan) pelunasanStatuses.push(String(mitra.statusPelunasan).toLowerCase());
        if (mitra?.pelunasanStatus) pelunasanStatuses.push(String(mitra.pelunasanStatus).toLowerCase());
        if (mitra?.paymentStatus) pelunasanStatuses.push(String(mitra.paymentStatus).toLowerCase());
      } catch (e) { /* ignore shape issues */ }

      const isPelunasanApproved = (
        mitra?.pelunasanApproved === true ||
        mitra?.approved === true ||
        mitra?.isApproved === true ||
        String(mitra?.status || '').toLowerCase() === 'approved' ||
        pelunasanStatuses.includes('approved')
      );

      const isPaidOff = (
        mitra?.nilaiPaketUsaha === 'Full Payment' ||
        mitra?.isFullPayment === true ||
        isPelunasanApproved ||
        isKekuranganZero
      );

      // Debug: help identify why view shows DP vs Lunas
      try {
        console.debug('[DEBUG] kewajiban.isPaidOff check', {
          email: mitra?.email,
          nilaiPaketUsaha: mitra?.nilaiPaketUsaha,
          isFullPayment: mitra?.isFullPayment,
          pelunasanApproved: mitra?.pelunasanApproved,
          statusPelunasan: mitra?.statusPelunasan,
          kekurangan: mitra?.kekurangan,
          isPaidOff
        });
      } catch (e) { /* ignore */ }

      if (isPaidOff) {
          // Don't automatically redirect to dashboard; show the kewajiban page.
          // We still check agreement-status to offer a CTA if the agreement hasn't been signed yet.
          let agreementAccepted = true;
          try {
            const token = localStorage.getItem('mitraToken');
            if (token) {
              const agreementRes = await fetch(`${API_URL}/api/mitra/agreement-status`, {
                method: 'GET',
                headers: {
                  'Authorization': `Bearer ${token}`,
                  'Content-Type': 'application/json'
                }
              });
              const agreementData = await agreementRes.json();
              if (agreementRes.ok && agreementData.success) {
                agreementAccepted = !!agreementData.data.hasAccepted;
              }
            }
          } catch (e) {
            console.error('Error checking agreement status:', e);
          }

          const extraAction = agreementAccepted ? '' : `
            <p class="mt-4 text-yellow-800 dark:text-yellow-200">Anda belum menandatangani agreement. <a href="/user/dashboard" class="inline-block ml-2 px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded">Buka Dashboard untuk menandatangani</a></p>
          `;

          container.innerHTML = `
            <div class="bg-green-100 dark:bg-green-900 p-8 rounded-lg shadow max-w-xl mx-auto">
              <h2 class="text-xl font-semibold mb-4 text-green-700 dark:text-green-300">Kewajiban Lunas</h2>
              <p class="text-green-800 dark:text-green-200"><strong>Anda telah melunasi kewajiban.</strong> Selamat! Anda sekarang resmi menjadi mitra Sagawa Group.</p>
              ${extraAction}
            </div>
          `;
        } else {
        function formatCurrency(amount) {
          return typeof amount === 'number'
            ? new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(amount)
            : 'N/A';
        }
        container.innerHTML = `
          <div class="max-w-3xl mx-auto">
            <div class="bg-gradient-to-r from-amber-500 to-orange-500 rounded-xl p-6 mb-8 text-white shadow flex items-center gap-4">
              <div class="w-16 h-16 rounded-full bg-white bg-opacity-20 flex items-center justify-center text-3xl font-bold">
                ${mitra.namaMitra ? mitra.namaMitra.charAt(0).toUpperCase() : 'M'}
              </div>
              <div>
                <div class="text-lg font-bold text-white">${mitra.namaMitra || '-'}</div>
                <div class="text-sm opacity-90 text-white">${mitra.email || '-'}</div>
                <div class="text-xs mt-1 font-medium text-white">${isPaidOff ? 'Lunas' : 'Belum Lunas / DP'}</div>
              </div>
            </div>
            <div class="bg-gray-800 rounded-xl shadow-lg p-8 border border-gray-700 mb-8">
              <div class="mb-4 text-white text-xs font-semibold uppercase tracking-wider">Status Pembayaran</div>
              <div class="flex items-center gap-2 mb-6">
                <span class="inline-block px-3 py-1 rounded-full text-xs font-bold ${isPaidOff ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-700'}">${isPaidOff ? 'Lunas' : (mitra.nilaiPaketUsaha || 'DP')}</span>
              </div>
              <div class="mb-2"><span class="font-semibold text-white">Harga Paket:</span> <span class="text-white">${mitra.hargaPaket ? formatCurrency(mitra.hargaPaket) : 'N/A'}</span></div>
              <div class="mb-2"><span class="font-semibold text-white">Nominal DP:</span> <span class="text-white">${mitra.nominalDP ? formatCurrency(mitra.nominalDP) : 'N/A'}</span></div>
              <div><span class="font-semibold text-white">Kekurangan:</span> <span class="text-red-400 font-bold">${mitra.kekurangan ? formatCurrency(mitra.kekurangan) : 'N/A'}</span></div>
            </div>
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mt-4">
              <p class="text-red-600 dark:text-red-400 text-sm flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01" /></svg>
                Untuk melunasi kewajiban Anda klik bayar.
              </p>
              <a id="btnBayarPelunasan" href="/user/form-pelunasan" class="px-8 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow font-semibold transition flex items-center gap-2" tabindex="0" aria-disabled="false">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a5 5 0 00-10 0v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2z" /></svg>
                Bayar
              </a>
              <div id="notifPelunasan" class="hidden text-blue-700 bg-blue-100 rounded-lg px-4 py-2 mt-2 text-sm font-semibold flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01" /></svg>
                Form pelunasan sedang diperiksa
              </div>
            </div>
          </div>
        `;
  }
    } catch (err) {
      container.innerHTML = '<div class="text-red-600">Gagal mengambil data mitra.</div>';
    }
    // Cek status pelunasan
    const btnBayar = document.getElementById('btnBayarPelunasan');
    const notifPelunasan = document.getElementById('notifPelunasan');
    if (email && btnBayar && notifPelunasan) {
      let pelunasanExists = false;
      try {
        const resPelunasan = await fetch(`${API_URL}/api/mitra/pelunasan-exists?email=${encodeURIComponent(email)}`);
        const dataPelunasan = await resPelunasan.json();
        pelunasanExists = !!dataPelunasan.exists;
      } catch (e) {
        // Jika API error, fallback ke localStorage
        pelunasanExists = localStorage.getItem('sudahPelunasan') === '1';
      }
      if (pelunasanExists) {
        const btnParent = btnBayar.parentNode;
        const btnDisabled = document.createElement('button');
        btnDisabled.type = 'button';
        btnDisabled.disabled = true;
        btnDisabled.className = 'px-8 py-2 bg-gray-400 text-white rounded-lg shadow font-semibold transition flex items-center gap-2 cursor-not-allowed';
        btnDisabled.innerHTML = btnBayar.innerHTML;
        btnParent.replaceChild(btnDisabled, btnBayar);
        notifPelunasan.classList.remove('hidden');
      }
    }
  });

  // Agreement acceptance removed from this page; handled from dashboard

  // Helper function to show notifications
  function showKewajibanNotification(message, type) {
    if (typeof type === 'undefined') type = 'success';

    const notification = document.createElement('div');
    const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';

    notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full opacity-0`;
    notification.innerHTML = `
      <div class="flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          ${type === 'success'
            ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>'
            : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>'
          }
        </svg>
        <span>${message}</span>
      </div>
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
      notification.classList.remove('translate-x-full', 'opacity-0');
    }, 100);

    setTimeout(() => {
      notification.classList.add('translate-x-full', 'opacity-0');
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }
</script>
