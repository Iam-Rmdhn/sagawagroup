---
// Admin Navbar Component
---

<nav class="fixed top-0 z-50 w-full bg-white border-b border-gray-200 dark:bg-gray-800 dark:border-gray-700">
    <div class="px-3 py-3 lg:px-5 lg:pl-3">
      <div class="flex items-center justify-between">
        <div class="flex items-center justify-start rtl:justify-end">
          <button data-drawer-target="logo-sidebar" data-drawer-toggle="logo-sidebar" aria-controls="logo-sidebar" type="button" class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
              <span class="sr-only">Open sidebar</span>
              <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                 <path clip-rule="evenodd" fill-rule="evenodd" d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"></path>
              </svg>
           </button>
          <a href="/admin/dashboard" class="flex ms-2 md:me-24">
            <span class="self-center text-xl font-semibold sm:text-2xl whitespace-nowrap dark:text-white text-amber-600">Sagawa Admin</span>
          </a>
        </div>
        <div class="flex items-center">
            <div class="flex items-center ms-3 relative">
              <div>
                <button type="button" id="user-menu-button" class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600" aria-expanded="false" data-dropdown-toggle="dropdown-user">
                  <span class="sr-only">Open user menu</span>
                  <div class="w-8 h-8 rounded-full bg-amber-500 flex items-center justify-center text-white font-semibold" id="user-avatar">
                    A
                  </div>
                </button>
              </div>
              <div class="z-50 hidden absolute right-0 top-full mt-2 w-48 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600" id="dropdown-user">
                <div class="px-4 py-3" role="none">
                  <p class="text-sm text-gray-900 dark:text-white font-medium" role="none" id="user-name">Admin User</p>
                  <p class="text-sm font-medium text-gray-900 truncate dark:text-gray-300" role="none" id="user-email">admin@sagawa.com</p>
                </div>
                <ul class="py-1" role="none">
                  <li>
                    <a href="/admin/dashboard" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem">
                      <svg class="w-4 h-4 mr-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h2a2 2 0 012 2v2H8V5z"></path>
                      </svg>
                      Dashboard
                    </a>
                  </li>
                  <li>
                    <a href="/admin/profile" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem">
                      <svg class="w-4 h-4 mr-3 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                      </svg>
                      Profile
                    </a>
                  </li>
                  <li>
                    <button id="logout-btn" class="flex items-center w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-gray-100 dark:text-red-300 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem">
                      <svg class="w-4 h-4 mr-3 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                      </svg>
                      Log out
                    </button>
                  </li>
                </ul>
              </div>
            </div>
          </div>
      </div>
    </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Load user information
    const userString = localStorage.getItem('adminUser');
    if (userString) {
      try {
        const user = JSON.parse(userString);
        
        // Update user name and email in dropdown
        const userNameEl = document.getElementById('user-name');
        const userEmailEl = document.getElementById('user-email');
        const userAvatarEl = document.getElementById('user-avatar');
        
        if (userNameEl) userNameEl.textContent = user.nama || 'Admin User';
        if (userEmailEl) userEmailEl.textContent = user.email || 'admin@sagawa.com';
        if (userAvatarEl) userAvatarEl.textContent = (user.nama || 'Admin')[0].toUpperCase();
        
      } catch (error) {
        console.error('Error parsing admin user data:', error);
      }
    }

    // Handle dropdown toggle
    const userMenuButton = document.getElementById('user-menu-button');
    const dropdownUser = document.getElementById('dropdown-user');
    
    if (userMenuButton && dropdownUser) {
      userMenuButton.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        // Toggle dropdown visibility
        dropdownUser.classList.toggle('hidden');
        
        // Update aria-expanded attribute
        const isExpanded = !dropdownUser.classList.contains('hidden');
        userMenuButton.setAttribute('aria-expanded', isExpanded.toString());
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', function(event) {
        const target = event.target as HTMLElement;
        if (target && !userMenuButton.contains(target) && !dropdownUser.contains(target)) {
          dropdownUser.classList.add('hidden');
          userMenuButton.setAttribute('aria-expanded', 'false');
        }
      });

      // Close dropdown when pressing Escape key
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && !dropdownUser.classList.contains('hidden')) {
          dropdownUser.classList.add('hidden');
          userMenuButton.setAttribute('aria-expanded', 'false');
          userMenuButton.focus();
        }
      });
    }

    // Handle logout
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Dispatch custom event for parent to handle
        document.dispatchEvent(new CustomEvent('adminNavbarAction', {
          detail: { action: 'logout' }
        }));
      });
    }

    // Handle sidebar toggle
    const sidebarToggle = document.querySelector('[data-drawer-toggle="logo-sidebar"]');
    const sidebar = document.getElementById('logo-sidebar');
    
    if (sidebarToggle && sidebar) {
      sidebarToggle.addEventListener('click', function() {
        sidebar.classList.toggle('-translate-x-full');
      });
    }

    // Expose functions globally for external access
    (window as any).adminNavbar = {
      updateUserInfo: function(user: any) {
        const userNameEl = document.getElementById('user-name');
        const userEmailEl = document.getElementById('user-email');
        const userAvatarEl = document.getElementById('user-avatar');
        
        if (userNameEl) userNameEl.textContent = user.nama || 'Admin User';
        if (userEmailEl) userEmailEl.textContent = user.email || 'admin@sagawa.com';
        if (userAvatarEl) userAvatarEl.textContent = (user.nama || 'Admin')[0].toUpperCase();
      }
    };
  });
</script>