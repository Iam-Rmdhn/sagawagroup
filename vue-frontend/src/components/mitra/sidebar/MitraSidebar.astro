---
// Mitra Sidebar Component - Modern Redesign
interface Props {
   currentPage?: string;
   showKewajiban?: boolean;
}

const { currentPage = "dashboard" } = Astro.props;
---

<style>
  /* Fix scroll stability for sidebar */
  #logo-sidebar {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    will-change: transform;
  }
  
  #logo-sidebar * {
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }
  
  /* Backdrop overlay styling with stability */
  #sidebar-backdrop {
    transform: translate3d(0, 0, 0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }
  
  /* Ensure Tailwind transform classes work */
  #logo-sidebar.transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
  
  /* Force Tailwind translate classes to override any conflicting styles */
  #logo-sidebar.-translate-x-full {
    transform: translateX(-100%) !important;
  }
  
  #logo-sidebar:not(.-translate-x-full) {
    transform: translateX(0) !important;
  }
</style>

<aside id="logo-sidebar" class="fixed top-0 left-0 z-40 w-72 h-screen pt-20 transition-transform -translate-x-full bg-gradient-to-br from-white to-amber-50/30 shadow-2xl border-r border-amber-200/50 backdrop-blur-sm" aria-label="Sidebar">
   <!-- Gradient Background Overlay -->
   <div class="absolute inset-0 bg-gradient-to-b from-transparent via-orange-50/20 to-red-50/20 pointer-events-none"></div>
   
   <!-- Button group styling -->
   <div class="relative h-full px-3 pb-4 overflow-y-auto scrollbar-thin scrollbar-thumb-amber-300 scrollbar-track-transparent">
      <ul class="space-y-2 font-medium mt-2">
         <!-- Dashboard -->
         <li>
            <button type="button" id="dashboard-menu-btn" class={`group flex items-center w-full p-3 rounded-lg transition-all duration-200 hover:shadow-md ${currentPage === 'dashboard' ? 'bg-gradient-to-r from-amber-500 to-orange-600 text-white shadow-md active-menu' : 'bg-white hover:bg-gradient-to-r hover:from-amber-50 hover:to-orange-50 text-gray-700 hover:text-amber-800 border border-gray-200 hover:border-amber-300'}`}
              onclick="window.location.href='/user/dashboard'">
              <div class={`w-8 h-8 rounded-lg flex items-center justify-center transition-colors ${currentPage === 'dashboard' ? 'bg-white/20' : 'bg-amber-100 group-hover:bg-amber-200'}`}>
                <svg class={`w-5 h-5 transition-colors ${currentPage === 'dashboard' ? 'text-white' : 'text-amber-600 group-hover:text-amber-700'}`} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 21">
                  <path d="M16.975 11H10V4.025a1 1 0 0 0-1.066-.998 8.5 8.5 0 1 0 9.039 9.039.999.999 0 0 0-1-1.066h.002Z"/>
                  <path d="M12.5 0c-.157 0-.311.01-.565.027A1 1 0 0 0 11 1.02V10h8.975a1 1 0 0 0 1-.935c.013-.188.028-.374.028-.565A8.51 8.51 0 0 0 12.5 0Z"/>
                </svg>
              </div>
              <span class="ml-3 font-medium">Dashboard</span>
            </button>
         </li>
         
         <!-- Profile -->
         <li>
            <button type="button" class={`group flex items-center w-full p-3 rounded-lg transition-all duration-200 hover:shadow-md ${currentPage === 'profile' ? 'bg-gradient-to-r from-amber-500 to-orange-600 text-white shadow-md' : 'bg-white hover:bg-gradient-to-r hover:from-amber-50 hover:to-orange-50 text-gray-700 hover:text-amber-800 border border-gray-200 hover:border-amber-300'}`}
              onclick="window.location.href='/user/profile'">
              <div class={`w-8 h-8 rounded-lg flex items-center justify-center transition-colors ${currentPage === 'profile' ? 'bg-white/20' : 'bg-amber-100 group-hover:bg-amber-200'}`}>
                <svg class={`w-5 h-5 transition-colors ${currentPage === 'profile' ? 'text-white' : 'text-amber-600 group-hover:text-amber-700'}`} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                  <path d="M14 2a3.963 3.963 0 0 0-1.4.267 6.439 6.439 0 0 1-1.331 6.638A4 4 0 1 0 14 2Zm1 9h-1.264A6.957 6.957 0 0 1 15 15v2a2.97 2.97 0 0 1-.184 1H19a1 1 0 0 0 1-1v-1a5.006 5.006 0 0 0-5-5ZM6.5 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9ZM8 10H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Z"/>
                </svg>
              </div>
              <span class="ml-3 font-medium">Edit Profile</span>
            </button>
         </li>
         
         <!-- Kewajiban -->
         <li>
            <button type="button" class={`group flex items-center w-full p-3 rounded-lg transition-all duration-200 hover:shadow-md ${currentPage === 'kewajiban' ? 'bg-gradient-to-r from-amber-500 to-orange-600 text-white shadow-md' : 'bg-white hover:bg-gradient-to-r hover:from-amber-50 hover:to-orange-50 text-gray-700 hover:text-amber-800 border border-gray-200 hover:border-amber-300'}`}
              onclick="window.location.href='/user/kewajiban'">
              <div class={`w-8 h-8 rounded-lg flex items-center justify-center transition-colors ${currentPage === 'kewajiban' ? 'bg-white/20' : 'bg-amber-100 group-hover:bg-amber-200'}`}>
                <svg class={`w-5 h-5 transition-colors ${currentPage === 'kewajiban' ? 'text-white' : 'text-amber-600 group-hover:text-amber-700'}`} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M17 9V7a5 5 0 00-10 0v2a2 2 0 00-2 2v5a2 2 0 002 2h10a2 2 0 002-2v-5a2 2 0 00-2-2z" />
                </svg>
              </div>
              <span class="ml-3 font-medium">Kewajiban</span>
            </button>
         </li>
         
         <!-- Orders -->
         <li>
            <button type="button" class={`group flex items-center w-full p-3 rounded-lg transition-all duration-200 hover:shadow-md ${currentPage === 'orders' ? 'bg-gradient-to-r from-orange-500 to-red-600 text-white shadow-md' : 'bg-white hover:bg-gradient-to-r hover:from-orange-50 hover:to-red-50 text-gray-700 hover:text-orange-800 border border-gray-200 hover:border-orange-300'}`}
              onclick="window.location.href='#'">
              <div class={`w-8 h-8 rounded-lg flex items-center justify-center transition-colors ${currentPage === 'orders' ? 'bg-white/20' : 'bg-orange-100 group-hover:bg-orange-200'}`}>
                <svg class={`w-5 h-5 transition-colors ${currentPage === 'orders' ? 'text-white' : 'text-orange-600 group-hover:text-orange-700'}`} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                  <path d="M17 5.923A1 1 0 0 0 16 5h-3V4a4 4 0 1 0-8 0v1H2a1 1 0 0 0-1 .923L.086 17.846A2 2 0 0 0 2.08 20h13.84a2 2 0 0 0 1.994-2.153L17 5.923ZM7 9a1 1 0 0 1-2 0V7h2v2Zm0-5a2 2 0 1 1 4 0v1H7V4Zm6 5a1 1 0 1 1-2 0V7h2v2Z"/>
                </svg>
              </div>
              <span class="ml-3 font-medium">Orders</span>
            </button>
         </li>
         
         <!-- Products -->
         <li>
            <button type="button" class={`group flex items-center w-full p-3 rounded-lg transition-all duration-200 hover:shadow-md ${currentPage === 'products' ? 'bg-gradient-to-r from-red-500 to-red-600 text-white shadow-md' : 'bg-white hover:bg-gradient-to-r hover:from-red-50 hover:to-red-100 text-gray-700 hover:text-red-800 border border-gray-200 hover:border-red-300'}`}
              onclick="window.location.href='#'">
              <div class={`w-8 h-8 rounded-lg flex items-center justify-center transition-colors ${currentPage === 'products' ? 'bg-white/20' : 'bg-red-100 group-hover:bg-red-200'}`}>
                <svg class={`w-5 h-5 transition-colors ${currentPage === 'products' ? 'text-white' : 'text-red-600 group-hover:text-red-700'}`} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                  <path d="M16 3a2 2 0 0 0-2 2v2H8V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2h6v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2h-2Zm-4 8H8v2h4v-2Z"/>
                </svg>
              </div>
              <span class="ml-3 font-medium">Products</span>
            </button>
         </li>
      </ul>
   </div>
</aside>

<!-- Mobile overlay backdrop -->
<div id="sidebar-backdrop" class="hidden fixed inset-0 z-30 bg-black bg-opacity-50 transition-opacity duration-300 md:hidden"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sidebar = document.getElementById('logo-sidebar');
    const backdrop = document.getElementById('sidebar-backdrop');
    
    // Handle backdrop clicks on mobile
    if (backdrop && sidebar) {
      backdrop.addEventListener('click', function() {
        console.log('Backdrop clicked, closing sidebar'); // Debug log
        sidebar.classList.add('-translate-x-full');
        backdrop.classList.add('hidden');
        localStorage.setItem('sidebarVisible', 'false');
        
        // Dispatch event to update main content margin if needed
        window.dispatchEvent(new CustomEvent('sidebarToggle', { 
          detail: { visible: false } 
        }));
      });
    }
    
    // Listen for sidebar state changes to show/hide backdrop
    if (sidebar && backdrop) {
      const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
          if (mutation.attributeName === 'class') {
            const sidebarVisible = !sidebar.classList.contains('-translate-x-full');
            
            console.log('Sidebar visibility changed:', sidebarVisible); // Debug log
            
            // Show/hide backdrop only on mobile
            if (window.innerWidth < 768) {
              if (sidebarVisible) {
                backdrop.classList.remove('hidden');
                console.log('Backdrop shown (mobile)'); // Debug log
              } else {
                backdrop.classList.add('hidden');
                console.log('Backdrop hidden (mobile)'); // Debug log
              }
            } else {
              backdrop.classList.add('hidden');
              console.log('Backdrop hidden (desktop)'); // Debug log
            }
          }
        });
      });
      
      observer.observe(sidebar, { attributes: true });
    }

    // Enhanced function to update active main menu item
    function updateActiveMainMenuItem(activeButton: Element) {
      // Remove active class from all main menu items and restore proper styling
      const dashboardBtn = document.getElementById('dashboard-menu-btn');
      if (dashboardBtn) {
        dashboardBtn.classList.remove('active-menu', 'bg-white', 'hover:bg-gradient-to-r', 'hover:from-amber-50', 'hover:to-orange-50', 'text-gray-700', 'hover:text-amber-800', 'border', 'border-gray-200', 'hover:border-amber-300');
        dashboardBtn.classList.add('bg-gradient-to-r', 'from-amber-500', 'to-orange-600', 'text-white', 'shadow-lg', 'active-menu');
        
        // Restore active icon colors
        const dashboardIcon = dashboardBtn.querySelector('svg');
        const dashboardIconContainer = dashboardBtn.querySelector('div');
        if (dashboardIcon) {
          dashboardIcon.setAttribute('class', 'w-5 h-5 transition-colors text-white');
        }
        if (dashboardIconContainer) {
          dashboardIconContainer.setAttribute('class', 'w-8 h-8 rounded-lg flex items-center justify-center transition-colors bg-white/20');
        }
      }
    }

    // Add hover effects for better UX
    const menuItems = document.querySelectorAll('.group');
    menuItems.forEach(item => {
      item.addEventListener('mouseenter', function(this: HTMLElement) {
        if (!this.classList.contains('active-menu')) {
          this.style.transform = 'scale(1.02)';
        }
      });
      
      item.addEventListener('mouseleave', function(this: HTMLElement) {
        if (!this.classList.contains('active-menu')) {
          this.style.transform = 'scale(1)';
        }
      });
    });

    // Expose functions globally for external access
    (window as any).mitraSidebar = {
      updateActiveMainMenuItem,
      showNotification: function(message: string, type: string = 'success') {
        // Create mini notification in sidebar
        const notification = document.createElement('div');
        notification.className = `fixed top-24 left-6 z-50 p-3 rounded-xl shadow-lg transition-all duration-300 transform -translate-x-full ${
          type === 'success' ? 'bg-green-100 text-green-800 border border-green-200' :
          type === 'error' ? 'bg-red-100 text-red-800 border border-red-200' :
          'bg-amber-100 text-amber-800 border border-amber-200'
        }`;
        
        notification.innerHTML = `
          <div class="flex items-center space-x-2">
            <div class="w-4 h-4 rounded-full ${
              type === 'success' ? 'bg-green-500' :
              type === 'error' ? 'bg-red-500' :
              'bg-amber-500'
            }"></div>
            <p class="text-sm font-medium">${message}</p>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        // Show notification
        requestAnimationFrame(() => {
          notification.style.transform = 'translateX(0)';
        });
        
        // Hide after 3 seconds
        setTimeout(() => {
          notification.style.transform = 'translateX(-100%)';
          setTimeout(() => {
            document.body.removeChild(notification);
          }, 300);
        }, 3000);
      }
    };
  });
</script>

<style>
  /* Modern Active menu styling with gradients */
  .active-menu {
    background: linear-gradient(135deg, rgb(245 158 11), rgb(249 115 22));
    color: white;
    box-shadow: 0 10px 25px rgba(245, 158, 11, 0.3);
    transform: scale(1.02);
  }
  
  /* Custom Scrollbar for modern look */
  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb {
    background: linear-gradient(135deg, rgb(245 158 11), rgb(249 115 22));
    border-radius: 3px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(135deg, rgb(217 119 6), rgb(234 88 12));
  }
  
  /* Hover glow effects for main buttons */
  .group:hover {
    filter: drop-shadow(0 4px 12px rgba(245, 158, 11, 0.15));
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    #logo-sidebar {
      width: 16rem;
    }
  }
  
  /* Focus states for accessibility */
  button:focus-visible, a:focus-visible {
    outline: 3px solid rgb(245 158 11);
    outline-offset: 2px;
    border-radius: 1rem;
  }
</style>