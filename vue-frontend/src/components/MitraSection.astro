---
// Partnership Section Component
import krbImage from '../assets/img/gerobak/krb.png';
import kccImage from '../assets/img/gerobak/kcc.png';
import kcrcImage from '../assets/img/gerobak/kcrc.png';
import rmwImage from '../assets/img/gerobak/rmw.png';
import warnusImage from '../assets/img/gerobak/warnus.png';
import masgawImage from '../assets/img/gerobak/masgaw.jpg';
import kbdImage from '../assets/img/gerobak/indepandant_brand.jpg';

const partnerships = [
  {
    title: "Kagawa Rice Bowl",
    subtitle: "Premium Japanese Rice Bowl Experience",
    image: krbImage,
    alt: "Kagawa Rice Bowl Stand",
    benefits: [
      "Bahan Baku & Peralatan Premium",
      "Dibantu Mencari Karyawan Berkualitas",
      "SOP & Training Komprehensif",
      "Media Promosi Digital & Konvensional",
      "Dukungan 24/7 dari Pusat",
      "Akses ke jaringan supplier resmi Kagawa Rice Bowl"
    ],
    originalPrice: "Rp. 75.000.000",
    discountedPrice: "Rp. 50.000.000",
    badge: "BEST SELLER",
    color: "from-amber-500 to-orange-600"
  },
  {
    title: "Kagawa Coffee Corner",
    subtitle: "Artisan Coffee & Specialty Drinks",
    image: kccImage,
    alt: "Kagawa Coffee Corner",
    benefits: [
      "Bahan Baku & Peralatan Coffee Grade A",
      "Dibantu Mencari Karyawan Barista",
      "SOP & Training Barista Profesional",
      "Media Promosi & Digital Marketing",
      "Dukungan Operasional dari Pusat",
      "Akses ke jaringan supplier resmi Kagawa Coffee"
    ],
    originalPrice: "Rp. 100.000.000",
    discountedPrice: "Rp. 89.000.000",
    badge: "HOT PICK",
    color: "from-orange-500 to-red-500"
  },
  {
    title: "Kagawa Coffee & Rice Bowl Corner",
    subtitle: "Complete F&B Solution",
    image: kcrcImage,
    alt: "Kagawa Coffee & Rice Bowl Corner",
    benefits: [
      "Bahan Baku & Peralatan Lengkap",
      "Dibantu Mencari Tim Profesional",
      "SOP & Training Multi-Skill",
      "Media Promosi Terintegrasi",
      "Dukungan Penuh dari Pusat",
      "Akses ke semua jaringan supplier"
    ],
    originalPrice: "Rp. 175.000.000",
    discountedPrice: "Rp. 139.000.000",
    badge: "PREMIUM",
    color: "from-red-500 to-rose-600"
  },
  {
    title: "RM Nusantara",
    subtitle: "WarNas/Warteg, Mas Gaw dan RM Sunda",
    image: rmwImage,
    hasCards: true,
    cardImages: [
      {
        src: rmwImage,
        alt: "RM Nusantara"
      },
      {
        src: warnusImage,
        alt: "Warung Nasi"
      },
      {
        src: masgawImage,
        alt: "Mas Gaw"
      }
    ],
    alt: "RM Nusantara",
    benefits: [
      "Bahan Baku & Peralatan Tradisional",
      "Dibantu Mencari Karyawan Berpengalaman",
      "SOP & Training Masakan Nusantara",
      "Media Promosi Lokal & Digital",
      "Dukungan Operasional Harian",
      "Akses ke jaringan supplier tradisional"
    ],
    originalPrice: "Rp. 100.000.000",
    discountedPrice: "Rp. 89.000.000",
    badge: "LOCAL FAVORITE",
    color: "from-amber-600 to-orange-700"
  },
  {
    title: "Business Development",
    subtitle: "Custom Business Solutions",
    image: kbdImage,
    alt: "Business Development",
    benefits: [
      "Konsultasi Bisnis Mendalam",
      "Dibantu Mencari Lokasi Strategis",
      "Sistem Operasional Outlet Custom",
      "SOP & Training Sesuai Kebutuhan"
    ],
    originalPrice: "Rp. 70.000.000",
    discountedPrice: "Rp. 49.000.000",
    badge: "FLEXIBLE",
    color: "from-orange-600 to-red-700"
  }
];
---

<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
  
  * {
    font-family: 'Inter', sans-serif;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(2deg); }
  }

  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 30px rgba(245, 101, 101, 0.3); }
    50% { box-shadow: 0 0 50px rgba(245, 101, 101, 0.6); }
  }

  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .floating-element {
    animation: float 6s ease-in-out infinite;
  }

  .pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  .gradient-shift {
    background-size: 200% 200%;
    animation: gradient-shift 8s ease infinite;
  }

  .slide-up {
    animation: slideInUp 0.8s ease-out forwards;
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
  }

  .text-gradient {
    background: linear-gradient(135deg, #f97316, #ea580c, #dc2626);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .neo-card {
    box-shadow: 
      20px 20px 60px rgba(251, 146, 60, 0.15),
      -20px -20px 60px rgba(255, 255, 255, 0.9),
      inset 8px 8px 16px rgba(251, 146, 60, 0.05),
      inset -8px -8px 16px rgba(255, 255, 255, 0.8);
  }

  .benefit-item {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .benefit-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(249, 115, 22, 0.1), transparent);
    transition: left 0.5s;
  }

  .benefit-item:hover::before {
    left: 100%;
  }

  .price-tag {
    position: relative;
    transform: rotate(-2deg);
  }

  .price-tag::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background: linear-gradient(135deg, #f97316, #ea580c, #dc2626);
    border-radius: 20px;
    z-index: -1;
  }

  .intersection-observe {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s ease-out;
  }

  .intersection-observe.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  .card-stack {
    position: relative;
    width: 100%;
    min-height: 250px;
    margin: 0 auto 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
    perspective: 1000px;
  }
  
  .card-wrapper {
    position: relative;
    width: 100%;
    height: 220px;
    transform-style: preserve-3d;
    transform: translateZ(-100px);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .card {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.8s ease, opacity 0.6s ease;
    cursor: pointer;
    border-radius: 10px;
    overflow: hidden;
  }
  
  .card:hover {
    transform: scale(1.05) !important;
    z-index: 10;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
  }
  
  .card.active {
    z-index: 5;
  }
  
  .card img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.1));
    transition: transform 0.3s ease;
  }
  
  .card:hover img {
    transform: scale(1.05);
  }
  
  .card-dots {
    position: absolute;
    bottom: -30px;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 15px;
  }
  
  .card-dot {
    width: 12px;
    height: 12px;
    background-color: #f97316;
    border-radius: 50%;
    transition: all 0.3s ease;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
  
  .card-dot.active {
    transform: scale(1.3);
    opacity: 1;
    background-color: #ea580c;
  }
  
  .card-dot:not(.active) {
    opacity: 0.5;
  }
  
  .card-dot:hover {
    transform: scale(1.2);
    opacity: 0.8;
  }
</style>

<!-- Floating Background Elements -->
<div class="fixed inset-0 pointer-events-none overflow-hidden -z-10">
  <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-orange-200/30 to-red-200/30 rounded-full floating-element" style="animation-delay: 0s;"></div>
  <div class="absolute top-1/3 right-20 w-24 h-24 bg-gradient-to-br from-amber-200/40 to-orange-300/40 rounded-full floating-element" style="animation-delay: 2s;"></div>
  <div class="absolute bottom-1/4 left-1/4 w-40 h-40 bg-gradient-to-br from-red-200/20 to-orange-200/20 rounded-full floating-element" style="animation-delay: 4s;"></div>
  <div class="absolute bottom-20 right-10 w-28 h-28 bg-gradient-to-br from-orange-300/30 to-red-300/30 rounded-full floating-element" style="animation-delay: 1s;"></div>
</div>

<!-- Hero Section -->
<section class="relative min-h-screen flex items-center justify-center px-6 py-20 bg-gradient-to-br from-orange-50 via-white to-red-50 gradient-shift">
  <div class="max-w-6xl mx-auto text-center">
    <!-- Main Title -->
    <div class="mb-12 slide-up">
      <h1 class="text-5xl md:text-6xl font-black mb-6 leading-tight">
        <span class="text-gradient">Peluang</span>
        <br>
        <span class="text-gray-900">Kemitraan</span>
      </h1>
      <div class="w-32 h-2 bg-gradient-to-r from-orange-500 to-red-500 mx-auto rounded-full mb-8"></div>
      <p class="text-md md:text-2xl text-gray-600 max-w-2xl mx-auto leading-relaxed font-medium">
        Bergabunglah dengan <span class="text-gradient font-bold">keluarga besar Sagawa Group</span> 
        dan rasakan kesuksesan bersama dalam industri kuliner terdepan
      </p>
    </div>

    <!-- Stats Cards - Grid pada semua ukuran layar -->
    <div class="grid grid-cols-3 gap-2 sm:gap-4 md:gap-8 mb-10 sm:mb-14">
      <div class="glass-effect p-2 sm:p-4 md:p-8 rounded-xl sm:rounded-3xl hover:scale-105 transition-transform duration-300">
        <div class="text-xl sm:text-2xl md:text-4xl font-black text-gradient mb-1 sm:mb-2">
          <span class="counter" data-target="100" data-suffix="+">0</span>
        </div>
        <div class="text-xs sm:text-sm md:text-base text-gray-700 font-semibold">Mitra Sukses</div>
      </div>
      <div class="glass-effect p-2 sm:p-4 md:p-8 rounded-xl sm:rounded-3xl hover:scale-105 transition-transform duration-300">
        <div class="text-xl sm:text-2xl md:text-4xl font-black text-gradient mb-1 sm:mb-2">
          <span class="counter" data-target="5">0</span>
        </div>
        <div class="text-xs sm:text-sm md:text-base text-gray-700 font-semibold">Konsep Bisnis</div>
      </div>
      <div class="glass-effect p-2 sm:p-4 md:p-8 rounded-xl sm:rounded-3xl hover:scale-105 transition-transform duration-300">
        <div class="text-xl sm:text-2xl md:text-4xl font-black text-gradient mb-1 sm:mb-2">
          <span class="counter" data-target="24" data-suffix="/7">0</span>
        </div>
        <div class="text-xs sm:text-sm md:text-base text-gray-700 font-semibold">Support System</div>
      </div>
    </div>

    <!-- Scroll Indicator - Clickable -->
    <a href="#partnership-section" class="inline-block cursor-pointer hover:opacity-80 transition-opacity duration-300">
      <div class="flex flex-col items-center">
        <svg class="w-8 h-8 text-orange-500 mx-auto animate-bounce" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
        </svg>
        <p class="text-gray-500 mt-2 font-medium">Klik untuk melihat paket</p>
      </div>
    </a>
  </div>
</section>

<!-- Partnership Options -->
<section id="partnership-section" class="py-12 sm:py-16 md:py-20 px-4 sm:px-6 bg-white scroll-mt-16">
  <div class="max-w-7xl mx-auto space-y-16 sm:space-y-20 md:space-y-24 lg:space-y-28">
    
    {partnerships.map((partner, index) => (
      <div class:list={[
        "intersection-observe grid grid-cols-1 lg:grid-cols-2 gap-8 sm:gap-10 md:gap-12 items-center",
        { 'lg:grid-flow-col-reverse': index % 2 !== 0 }
      ]}>
        
        <!-- Mobile Title (Only visible on mobile) -->
        <div class="block lg:hidden text-center mb-4">
          <h2 class="text-2xl sm:text-3xl font-black text-gray-900 mb-1 leading-tight">
            {partner.title}
          </h2>
          <p class="text-base text-gray-600 font-medium">
            {partner.subtitle}
          </p>
        </div>

        <!-- Image Section -->
        <div class="relative flex justify-center px-2 sm:px-4">
          <!-- Badge -->
          <div class:list={[
            "absolute -top-2 sm:-top-4 -right-1 sm:-right-4 z-20 px-3 sm:px-4 py-1 sm:py-2 rounded-full text-white text-xs sm:text-sm font-bold shadow-lg transform rotate-12",
            `bg-gradient-to-r ${partner.color}`
          ]}>
            {partner.badge}
          </div>
          
          <!-- Main Image Container -->
          <div class="relative group">
            <div class="absolute inset-0 bg-gradient-to-br from-orange-100 to-red-100 rounded-2xl sm:rounded-3xl transform rotate-3 group-hover:rotate-6 transition-transform duration-500"></div>
            
            <div class="relative bg-white p-4 sm:p-6 md:p-8 rounded-2xl sm:rounded-3xl neo-card transform group-hover:-translate-y-2 sm:group-hover:-translate-y-4 transition-all duration-500">
              {partner.hasCards ? (
                <div class="card-stack" data-cards>
                  <div class="card-wrapper">
                    {partner.cardImages.map((img, imgIndex) => (
                      <div class={`card ${imgIndex === 0 ? 'active' : ''}`} 
                           style={`transform: rotateY(${imgIndex * 120}deg) translateZ(${imgIndex * 15}px) scale(${1 - imgIndex * 0.1}); opacity: ${imgIndex === 0 ? '1' : '0.8'};`}
                           data-index={imgIndex}>
                        <img 
                          src={img.src.src} 
                          alt={img.alt}
                          class="w-full max-w-[180px] sm:max-w-[250px] md:max-w-sm h-auto object-contain"
                        />
                      </div>
                    ))}
                  </div>
                  <div class="card-dots">
                    {partner.cardImages.map((_, imgIndex) => (
                      <div class={`card-dot ${imgIndex === 0 ? 'active' : ''}`} data-index={imgIndex}></div>
                    ))}
                  </div>
                </div>
              ) : (
                <img 
                  src={partner.image.src} 
                  alt={partner.alt}
                  class="w-full max-w-[180px] sm:max-w-[250px] md:max-w-sm h-auto object-contain drop-shadow-xl"
                />
              )}
            </div>

            <!-- Floating Elements dihapus -->
          </div>
        </div>

        <!-- Content Section -->
        <div class="space-y-4 sm:space-y-6 md:space-y-8 text-center lg:text-left">
          <div>
            <h2 class="hidden lg:block text-4xl lg:text-5xl font-black text-gray-900 mb-2 sm:mb-3 leading-tight">
              {partner.title}
            </h2>
            <p class="hidden lg:block text-lg text-gray-600 font-medium mb-4 sm:mb-6 md:mb-8">
              {partner.subtitle}
            </p>
            
            <div class="space-y-4 sm:space-y-5 text-left">
              <h3 class="text-xl sm:text-2xl font-bold text-gradient mb-3 sm:mb-4 md:mb-5 lg:text-left">Mitra Benefit Premium:</h3>
              
              <div class="space-y-2 sm:space-y-3">
                {partner.benefits.map(benefit => (
                  <div class="benefit-item flex items-start space-x-3 p-2 rounded-xl hover:bg-gradient-to-r hover:from-orange-50 hover:to-red-50">
                    <div class="flex-shrink-0 w-2 sm:w-3 h-2 sm:h-3 bg-gradient-to-r from-orange-500 to-red-500 rounded-full mt-1.5 shadow-lg"></div>
                    <span class="text-gray-800 text-sm sm:text-base font-medium leading-relaxed text-left">{benefit}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>

          <!-- Pricing Section -->
          <div class="space-y-4 sm:space-y-6 pt-4 sm:pt-6 md:pt-8">
            <div class="text-center lg:text-left">
              <div class="text-base sm:text-lg md:text-xl text-gray-400 font-bold mb-1 sm:mb-2">
                <span class="line-through decoration-2 sm:decoration-4">{partner.originalPrice}</span>
              </div>
              
              <div class="price-tag inline-block bg-gradient-to-r from-red-500 to-rose-600 text-white px-4 sm:px-5 md:px-6 py-2 sm:py-3 rounded-xl sm:rounded-2xl mb-4 sm:mb-6 md:mb-8">
                <div class="text-xl sm:text-2xl md:text-3xl font-black">
                  {partner.discountedPrice}
                </div>
              </div>
            </div>
            
            <a href={`/form?paket=${encodeURIComponent(partner.title)}`} class="bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white px-8 sm:px-8 py-2 rounded-xl sm:rounded-2xl font-bold text-sm sm:text-base shadow-lg sm:shadow-xl hover:shadow-xl sm:hover:shadow-2xl transform hover:scale-105 transition-all duration-300 inline-flex items-center justify-center lg:justify-center space-x-1 sm:space-x-2 w-auto mx-auto pulse-glow whitespace-nowrap">
              <span>Daftar Jadi Mitra</span>
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    ))}
    
  </div>
</section>

<!-- CTA Section -->
<section class="py-12 sm:py-16 md:py-20 px-4 sm:px-6 bg-gradient-to-br from-orange-100 via-white to-red-100">
  <div class="max-w-5xl mx-auto text-center">
    <div class="neo-card bg-white rounded-2xl sm:rounded-3xl p-6 sm:p-8 md:p-12 hover:scale-[1.02] transition-transform duration-500">
      <h3 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-black mb-4 sm:mb-6 md:mb-8">
        <span class="text-gradient">Siap Bergabung</span>
        <br>
        <span class="text-gray-900">dengan Sagawa Group?</span>
      </h3>
      
      <p class="text-base sm:text-lg md:text-xl text-gray-600 mb-6 sm:mb-8 md:mb-10 leading-relaxed max-w-3xl mx-auto">
        Dapatkan kesempatan emas untuk memiliki bisnis franchise terpercaya 
        dengan <span class="text-gradient font-bold">dukungan penuh</span> dari tim profesional kami
      </p>

      <div class="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center items-center">
        <a href="/contact" class="group bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white px-6 sm:px-8 md:px-10 py-3 sm:py-4 md:py-5 rounded-xl sm:rounded-2xl font-bold text-sm sm:text-base md:text-lg shadow-lg sm:shadow-xl hover:shadow-xl sm:hover:shadow-2xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-2 sm:space-x-3 w-full sm:w-auto justify-center pulse-glow">
          <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7 group-hover:rotate-12 transition-transform duration-300" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span>Konsultasikan Sekarang</span>
        </a>
        
        <a href="/helper/faq" class="group bg-white border-2 sm:border-3 border-orange-500 text-orange-600 hover:bg-gradient-to-r hover:from-orange-50 hover:to-red-50 px-6 sm:px-8 md:px-10 py-3 sm:py-4 md:py-5 rounded-xl sm:rounded-2xl font-bold text-sm sm:text-base md:text-lg shadow-md sm:shadow-lg hover:shadow-lg sm:hover:shadow-xl transform hover:scale-105 transition-all duration-300 flex items-center space-x-2 sm:space-x-3 w-full sm:w-auto justify-center">
          <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7 group-hover:bounce" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path>
          </svg>
          <span>Pelajari Lebih Lanjut</span>
        </a>
      </div>

      <!-- Trust Indicators -->
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 sm:gap-6 md:gap-8 mt-8 sm:mt-12 md:mt-16 pt-6 sm:pt-8 md:pt-12 border-t border-gray-200">
        <div class="text-center">
          <div class="w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3 md:mb-4">
            <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <p class="text-xs sm:text-sm font-semibold text-gray-600">Terpercaya</p>
        </div>
        
        <div class="text-center">
          <div class="w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3 md:mb-4">
            <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z"></path>
            </svg>
          </div>
          <p class="text-xs sm:text-sm font-semibold text-gray-600">Community</p>
        </div>
        
        <div class="text-center">
          <div class="w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3 md:mb-4">
            <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
              <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path>
            </svg>
          </div>
          <p class="text-xs sm:text-sm font-semibold text-gray-600">Growth</p>
        </div>
        
        <div class="text-center">
          <div class="w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center mx-auto mb-2 sm:mb-3 md:mb-4">
            <svg class="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"></path>
            </svg>
          </div>
          <p class="text-xs sm:text-sm font-semibold text-gray-600">Fast Setup</p>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Intersection Observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible');
      }
    });
  }, observerOptions);

  // Observe all elements with intersection-observe class
  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('.intersection-observe');
    elements.forEach(el => observer.observe(el));
    
    // Counter animation for stats
    const counters = document.querySelectorAll('.counter');
    const counterObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const counter = entry.target;
          const target = parseInt(counter.getAttribute('data-target') || '0');
          const suffix = counter.getAttribute('data-suffix') || '';
          const duration = 2000; // Animation duration in ms
          const stepTime = 50; // Update interval in ms
          const steps = duration / stepTime;
          const increment = target / steps;
          let current = 0;
          
          const updateCounter = () => {
            if (current < target) {
              current += increment;
              counter.textContent = Math.floor(current) + suffix;
              setTimeout(updateCounter, stepTime);
            } else {
              counter.textContent = target + suffix;
            }
          };
          
          updateCounter();
          counterObserver.unobserve(counter);
        }
      });
    }, { threshold: 0.5 });
    
    counters.forEach(counter => {
      counterObserver.observe(counter);
    });
    
    // Card Stack functionality
    const cardStacks = document.querySelectorAll('.card-stack');
    
    cardStacks.forEach(stack => {
      const cards = stack.querySelectorAll('.card');
      const dots = stack.querySelectorAll('.card-dot');
      const totalCards = cards.length;
      
      // Debug info
      console.log('Card stack found with ' + totalCards + ' cards');
      cards.forEach((card, i) => {
        const img = card.querySelector('img');
        console.log(`Card ${i} src: ${img ? img.getAttribute('src') : 'no image'}`);
      });
      
      let currentCard = 0;
      let rotationInterval: ReturnType<typeof setInterval>;
      let isTransitioning = false;
      
      // Function to show a specific card
      const showCard = (index: number) => {
        if (isTransitioning) return;
        isTransitioning = true;
        
        
        // Reset all cards
        cards.forEach((card, i) => {
          card.classList.remove('active');
          const rotateY = ((index - i + totalCards) % totalCards) * 120;
          const translateZ = ((index - i + totalCards) % totalCards) * 15;
          const scale = 1 - ((index - i + totalCards) % totalCards) * 0.1;
          const opacity = i === index ? 1 : 0.8;
          
          // Animate card rotation
          if (card instanceof HTMLElement) {
            card.style.transform = `rotateY(${rotateY}deg) translateZ(${translateZ}px)`;
            card.style.opacity = `${opacity}`;
          }
          
          // Add class for active card
          if (i === index) {
            card.classList.add('active');
          }
        });
        
        // Update dots
        dots.forEach((dot, i) => {
          dot.classList.toggle('active', i === index);
        });
        
        currentCard = index;
        setTimeout(() => {
          isTransitioning = false;
        }, 600); // Match this with CSS transition time
      };
      
      // Initialize with the first card
      showCard(0);
      
      // Auto-rotate cards every 2.5 seconds
      const startRotation = () => {
        rotationInterval = setInterval(() => {
          const nextCard = (currentCard + 1) % totalCards;
          showCard(nextCard);
        }, 2500); // Change card every 2.5 seconds
      };
      
      const stopRotation = () => {
        clearInterval(rotationInterval);
      };
      
      // Click events for dots
      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => {
          if (currentCard !== index) {
            stopRotation();
            showCard(index);
            startRotation();
          }
        });
      });
      
      // Click events for cards
      cards.forEach((card) => {
        card.addEventListener('click', () => {
          stopRotation();
          const nextCard = (currentCard + 1) % totalCards;
          showCard(nextCard);
          startRotation();
        });
      });
      
      // Hover events to pause rotation
      stack.addEventListener('mouseenter', stopRotation);
      stack.addEventListener('mouseleave', startRotation);
      
      // Start the card rotation
      startRotation();
      
      // Add stack to intersection observer to only animate when visible
      const cardObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            startRotation();
          } else {
            stopRotation();
          }
        });
      }, { threshold: 0.5 });
      
      cardObserver.observe(stack);
    });
  });
</script>